Compiler arguments: ['main.py']

--- Compiling Program ---
Input Program Snippet:
--------------------
VAR x, y, squ;
VAR arr[5]: char;
var multid[5][5]: short;
{ New variables for loop tests }
VAR i, j, k, m, n, p, q, sum, r;
VAR sm_idx;                 { Loop counter for strip mining test (sm = strip...
--------------------
--- Starting Compilation ---

--- Parsing Program ---
start <function Parser.program at 0x7b3943c088b0>
getsym: varsym var
start <function Parser.block at 0x7b3943c08550>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident x
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident y
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident squ
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident arr
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident char
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident multid
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident short
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident i
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident j
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident k
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident m
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident n
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident p
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident q
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident sum
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == comma
getsym: ident r
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_idx
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_source_arr
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 128
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident int
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_dest_arr
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 128
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident int
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: procsym procedure
accepting constsym == procsym
accepting varsym == procsym
accepting procsym == procsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
start <function Parser.block at 0x7b3943c08550>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident test
start <function Parser.vardef at 0x7b3943c08790>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7b3943c08790>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
accepting constsym == beginsym
accepting varsym == beginsym
accepting procsym == beginsym
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident test
StatList : new 135485880107792
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up test
Looking up test
expecting becomes
accepting becomes == becomes
getsym: number 1234
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880108032 of type <class 'ir.AssignStat'> to 135485880107792
accepting semicolon == semicolon
getsym: ident squ
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up squ
Looking up squ
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: times *
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
getsym: ident x
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880108320 of type <class 'ir.AssignStat'> to 135485880107792
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485880107792 : [ 135485880108032 135485880108320 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.block at 0x7b3943c08550>
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
Looking up square
accepting procsym == beginsym
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 135485880108464
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: minus -
start <function Parser.expression at 0x7b3943c081f0>
getsym: number 1
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880108752 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: read read
start <function Parser.statement at 0x7b3943c08430>
accepting ident == read
accepting callsym == read
accepting beginsym == read
accepting ifsym == read
accepting whilesym == read
accepting forsym == read
accepting print == read
accepting read == read
getsym: ident x
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880108848 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ifsym if
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ifsym
accepting callsym == ifsym
accepting beginsym == ifsym
accepting ifsym == ifsym
getsym: ident x
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == ident
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: gtr >
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 100
condition operator gtr number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: thensym then
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting thensym
accepting thensym == thensym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485880109184
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: minus -
start <function Parser.expression at 0x7b3943c081f0>
getsym: ident x
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880109472 of type <class 'ir.PrintStat'> to 135485880109184
expecting endsym
accepting endsym == endsym
getsym: elsesym else
StatList 135485880109184 : [ 135485880109472 ]
end <function Parser.statement at 0x7b3943c08430>
accepting elsesym == elsesym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485880109568
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880109760 of type <class 'ir.PrintStat'> to 135485880109568
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485880109568 : [ 135485880109760 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880109856 of type <class 'ir.IfStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880110000 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7b3943c08430>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == ident
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 10
condition operator leq number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: callsym call
StatList : new 135485880110336
start <function Parser.statement at 0x7b3943c08430>
accepting ident == callsym
accepting callsym == callsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up square
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880110528 of type <class 'ir.CallStat'> to 135485880110336
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 1
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880110912 of type <class 'ir.AssignStat'> to 135485880110336
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident squ
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: endsym end
Looking up squ
Looking up squ
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485880111056 of type <class 'ir.PrintStat'> to 135485880110336
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485880110336 : [ 135485880110528 135485880110912 135485880111056 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879599216 of type <class 'ir.WhileStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 101
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879599360 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7b3943c08430>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == ident
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 105
condition operator leq number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident arr
StatList : new 135485879599696
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 100
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879600368 of type <class 'ir.AssignStat'> to 135485879599696
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 100
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879600896 of type <class 'ir.PrintStat'> to 135485879599696
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 1
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879601328 of type <class 'ir.AssignStat'> to 135485879599696
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879599696 : [ 135485879600368 135485879600896 135485879601328 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879601376 of type <class 'ir.WhileStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879601520 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879601664 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7b3943c08430>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == ident
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: whilesym while
StatList : new 135485879601952
start <function Parser.statement at 0x7b3943c08430>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident y
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == ident
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: leq <=
Looking up y
Looking up y
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident multid
StatList : new 135485879602336
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879603504 of type <class 'ir.AssignStat'> to 135485879602336
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident multid
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879604272 of type <class 'ir.PrintStat'> to 135485879602336
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 1
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879604704 of type <class 'ir.AssignStat'> to 135485879602336
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: ident y
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up y
Looking up y
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: number 1
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879605040 of type <class 'ir.AssignStat'> to 135485879602336
expecting endsym
accepting endsym == endsym
getsym: endsym end
StatList 135485879602336 : [ 135485879603504 135485879604272 135485879604704 135485879605040 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879605088 of type <class 'ir.WhileStat'> to 135485879601952
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879601952 : [ 135485879605088 ]
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879605136 of type <class 'ir.WhileStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident a
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int a' and body_symtab for 'a'
FOR LOOP - Variable symbol: auto int a
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 20
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879605424
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident a
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up a
Looking up a
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879605616 of type <class 'ir.PrintStat'> to 135485879605424
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879605424 : [ 135485879605616 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879606288 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident i
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up i
Looking up i
expecting becomes
accepting becomes == becomes
getsym: number 10
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879606432 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99991
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879606528 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident i
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int i' and body_symtab for 'i'
FOR LOOP - Variable symbol: auto int i
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 15
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879606864
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident i
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up i
Looking up i
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879607056 of type <class 'ir.PrintStat'> to 135485879606864
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879606864 : [ 135485879607056 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879624176 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88881
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879624320 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99992
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879624512 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident j
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int j' and body_symtab for 'j'
FOR LOOP - Variable symbol: auto int j
expecting becomes
accepting becomes == becomes
getsym: number 5
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879624848
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident j
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up j
Looking up j
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879625040 of type <class 'ir.PrintStat'> to 135485879624848
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879624848 : [ 135485879625040 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879625712 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88882
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879625856 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99993
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879626048 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident k
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int k' and body_symtab for 'k'
FOR LOOP - Variable symbol: auto int k
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879626384
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 77777
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879626576 of type <class 'ir.PrintStat'> to 135485879626384
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident k
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up k
Looking up k
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879626768 of type <class 'ir.PrintStat'> to 135485879626384
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879626384 : [ 135485879626576 135485879626768 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879627440 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88883
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879627584 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99994
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879648320 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident m
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int m' and body_symtab for 'm'
FOR LOOP - Variable symbol: auto int m
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 6
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879648656
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident m
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up m
Looking up m
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879648848 of type <class 'ir.PrintStat'> to 135485879648656
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879648656 : [ 135485879648848 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879649520 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88884
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879649664 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99995
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879649856 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident n
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int n' and body_symtab for 'n'
FOR LOOP - Variable symbol: auto int n
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 7
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879650192
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident n
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up n
Looking up n
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879650384 of type <class 'ir.PrintStat'> to 135485879650192
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879650192 : [ 135485879650384 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879651056 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88885
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879651200 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99996
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879651392 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident p
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int p' and body_symtab for 'p'
FOR LOOP - Variable symbol: auto int p
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 12
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879651728
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident p
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up p
Looking up p
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879651920 of type <class 'ir.PrintStat'> to 135485879651728
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879651728 : [ 135485879651920 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879644464 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88886
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879644608 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident sum
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: number 0
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879644800 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99997
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879644896 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident q
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int q' and body_symtab for 'q'
FOR LOOP - Variable symbol: auto int q
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident sum
StatList : new 135485879645232
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: ident sum
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up sum
Looking up sum
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: ident q
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879645616 of type <class 'ir.AssignStat'> to 135485879645232
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident q
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879645760 of type <class 'ir.PrintStat'> to 135485879645232
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879645952 of type <class 'ir.PrintStat'> to 135485879645232
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879645232 : [ 135485879645616 135485879645760 135485879645952 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879646624 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879646768 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88887
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879646960 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 100
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879647152 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99998
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879647296 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident r
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int r' and body_symtab for 'r'
FOR LOOP - Variable symbol: auto int r
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 3
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 135485879647632
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: ident r
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up r
Looking up r
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879648016 of type <class 'ir.AssignStat'> to 135485879647632
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879648160 of type <class 'ir.PrintStat'> to 135485879647632
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879647632 : [ 135485879648016 135485879648160 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879669376 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879669520 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88888
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879669712 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 999990
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879669904 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ident sm_idx
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: becomes :=
Looking up sm_idx
Looking up sm_idx
expecting becomes
accepting becomes == becomes
getsym: number 0
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879670096 of type <class 'ir.AssignStat'> to 135485880108464
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7b3943c08430>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident sm_idx
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int sm_idx' and body_symtab for 'sm_idx'
FOR LOOP - Variable symbol: auto int sm_idx
expecting becomes
accepting becomes == becomes
getsym: number 0
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 127
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident sm_dest_arr
StatList : new 135485879670336
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: ident sm_idx
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident sm_source_arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up sm_source_arr
Looking up sm_source_arr
expecting lspar
accepting lspar == lspar
getsym: ident sm_idx
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: rspar ]
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: plus +
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
getsym: ident sm_idx
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: semicolon ;
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879671296 of type <class 'ir.AssignStat'> to 135485879670336
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879670336 : [ 135485879671296 ]
end <function Parser.statement at 0x7b3943c08430>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879671872 of type <class 'ir.ForStat'> to 135485880108464
accepting semicolon == semicolon
getsym: ifsym if
start <function Parser.statement at 0x7b3943c08430>
accepting ident == ifsym
accepting callsym == ifsym
accepting beginsym == ifsym
accepting ifsym == ifsym
getsym: number 127
start <function Parser.condition at 0x7b3943c08310>
accepting oddsym == number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: geq >=
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
getsym: number 0
condition operator geq number
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: thensym then
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.condition at 0x7b3943c08310>
expecting thensym
accepting thensym == thensym
getsym: beginsym begin
start <function Parser.statement at 0x7b3943c08430>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 135485879672208
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 76543
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879672400 of type <class 'ir.PrintStat'> to 135485879672208
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 0
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879681088 of type <class 'ir.PrintStat'> to 135485879672208
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 64
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879681568 of type <class 'ir.PrintStat'> to 135485879672208
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 127
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879682048 of type <class 'ir.PrintStat'> to 135485879672208
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 135485879672208 : [ 135485879672400 135485879681088 135485879681568 135485879682048 ]
end <function Parser.statement at 0x7b3943c08430>
accepting elsesym == semicolon
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879682192 of type <class 'ir.IfStat'> to 135485880108464
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7b3943c08430>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 888880
start <function Parser.expression at 0x7b3943c081f0>
start <function Parser.term at 0x7b3943c080d0>
start <function Parser.factor at 0x7b3943c0df70>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7b3943c0df70>
end <function Parser.term at 0x7b3943c080d0>
end <function Parser.expression at 0x7b3943c081f0>
end <function Parser.statement at 0x7b3943c08430>
StatList: appending 135485879682336 of type <class 'ir.PrintStat'> to 135485880108464
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: period .
StatList
end <function Parser.statement at 0x7b3943c08430>
end <function Parser.block at 0x7b3943c08550>
expecting period
accepting period == period
end <function Parser.program at 0x7b3943c088b0>

--- Initial IR Tree (from Parser) ---
<class 'ir.Block'> 135485879682432 {
                                                                      <<<<<----- BUG? MISSING PARENT
	global_symtab: 	SymbolTable:
	
	defs: 	<class 'ir.DefinitionList'> 135485880629952 {
	parent = 135485879682432
		children:
		<class 'ir.FunctionDef'> 135485880108368 {
		parent = 135485880629952
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 135485880056608 {
			parent = 135485880108368
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
				defs: 	<class 'ir.DefinitionList'> 135485880107648 {
				parent = 135485880056608
				}
				body: 	<class 'ir.StatList'> 135485880107792 {
				parent = 135485880056608
					children:
					<class 'ir.AssignStat'> 135485880108032 {
					parent = 135485880107792
						symbol: 	auto int test
						expr: 	<class 'ir.Const'> 135485880107936 {
						parent = 135485880108032
							value: 	1234
							symbol: 	None
						}
						offset: 	None
					}
					<class 'ir.AssignStat'> 135485880108320 {
					parent = 135485880107792
						symbol: 	global int squ
						expr: 	<class 'ir.BinExpr'> 135485880108224 {
						parent = 135485880108320
							children:
							'times'
							<class 'ir.Var'> 135485880108080 {
							parent = 135485880108224
								symbol: 	global int x
							}
							<class 'ir.Var'> 135485880107840 {
							parent = 135485880108224
								symbol: 	global int x
							}
						}
						offset: 	None
					}
				}
			}
		}
	}
	body: 	<class 'ir.StatList'> 135485880108464 {
	parent = 135485879682432
		children:
		<class 'ir.AssignStat'> 135485880108752 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.UnExpr'> 135485880108656 {
			parent = 135485880108752
				children:
				'minus'
				<class 'ir.Const'> 135485880108560 {
				parent = 135485880108656
					value: 	1
					symbol: 	None
				}
			}
			offset: 	None
		}
		<class 'ir.AssignStat'> 135485880108848 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.ReadStat'> 135485880056416 {
			parent = 135485880108848
			}
			offset: 	None
		}
		<class 'ir.IfStat'> 135485880109856 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485880109088 {
			parent = 135485880109856
				children:
				'gtr'
				<class 'ir.Var'> 135485880108896 {
				parent = 135485880109088
					symbol: 	global int x
				}
				<class 'ir.Const'> 135485880108992 {
				parent = 135485880109088
					value: 	100
					symbol: 	None
				}
			}
			elsepart: 	<class 'ir.StatList'> 135485880109568 {
			parent = 135485880109856
				children:
				<class 'ir.PrintStat'> 135485880109760 {
				parent = 135485880109568
					children:
					<class 'ir.Var'> 135485880109664 {
					parent = 135485880109760
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 135485880109664 {
					parent = 135485880109760
						symbol: 	global int x
					}
				}
			}
			thenpart: 	<class 'ir.StatList'> 135485880109184 {
			parent = 135485880109856
				children:
				<class 'ir.PrintStat'> 135485880109472 {
				parent = 135485880109184
					children:
					<class 'ir.UnExpr'> 135485880109376 {
					parent = 135485880109472
						children:
						'minus'
						<class 'ir.Var'> 135485880109280 {
						parent = 135485880109376
							symbol: 	global int x
						}
					}
					expr: 	<class 'ir.UnExpr'> 135485880109376 {
					parent = 135485880109472
						children:
						'minus'
						<class 'ir.Var'> 135485880109280 {
						parent = 135485880109376
							symbol: 	global int x
						}
					}
				}
			}
		}
		<class 'ir.AssignStat'> 135485880110000 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.Const'> 135485880109904 {
			parent = 135485880110000
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.WhileStat'> 135485879599216 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485880110240 {
			parent = 135485879599216
				children:
				'leq'
				<class 'ir.Var'> 135485880110048 {
				parent = 135485880110240
					symbol: 	global int x
				}
				<class 'ir.Const'> 135485880110144 {
				parent = 135485880110240
					value: 	10
					symbol: 	None
				}
			}
			body: 	<class 'ir.StatList'> 135485880110336 {
			parent = 135485879599216
				children:
				<class 'ir.CallStat'> 135485880110528 {
				parent = 135485880110336
					call: 	<class 'ir.CallExpr'> 135485880110432 {
					parent = 135485880110528
						symbol: 	auto function square
					}
				}
				<class 'ir.AssignStat'> 135485880110912 {
				parent = 135485880110336
					symbol: 	global int x
					expr: 	<class 'ir.BinExpr'> 135485880110816 {
					parent = 135485880110912
						children:
						'plus'
						<class 'ir.Var'> 135485880110624 {
						parent = 135485880110816
							symbol: 	global int x
						}
						<class 'ir.Const'> 135485880110720 {
						parent = 135485880110816
							value: 	1
							symbol: 	None
						}
					}
					offset: 	None
				}
				<class 'ir.PrintStat'> 135485880111056 {
				parent = 135485880110336
					children:
					<class 'ir.Var'> 135485880110960 {
					parent = 135485880111056
						symbol: 	global int squ
					}
					expr: 	<class 'ir.Var'> 135485880110960 {
					parent = 135485880111056
						symbol: 	global int squ
					}
				}
			}
		}
		<class 'ir.AssignStat'> 135485879599360 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.Const'> 135485879599264 {
			parent = 135485879599360
				value: 	101
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.WhileStat'> 135485879601376 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879599600 {
			parent = 135485879601376
				children:
				'leq'
				<class 'ir.Var'> 135485879599408 {
				parent = 135485879599600
					symbol: 	global int x
				}
				<class 'ir.Const'> 135485879599504 {
				parent = 135485879599600
					value: 	105
					symbol: 	None
				}
			}
			body: 	<class 'ir.StatList'> 135485879599696 {
			parent = 135485879601376
				children:
				<class 'ir.AssignStat'> 135485879600368 {
				parent = 135485879599696
					symbol: 	global char[5] arr
					expr: 	<class 'ir.Var'> 135485879600128 {
					parent = 135485879600368
						symbol: 	global int x
					}
					offset: 	<class 'ir.BinExpr'> 135485879600224 {
					parent = 135485879600368
						children:
						'times'
						<class 'ir.BinExpr'> 135485879600032 {
						parent = 135485879600224
							children:
							'minus'
							<class 'ir.Var'> 135485879599792 {
							parent = 135485879600032
								symbol: 	global int x
							}
							<class 'ir.Const'> 135485879599936 {
							parent = 135485879600032
								value: 	100
								symbol: 	None
							}
						}
						<class 'ir.Const'> 135485879599840 {
						parent = 135485879600224
							value: 	1
							symbol: 	None
						}
					}
				}
				<class 'ir.PrintStat'> 135485879600896 {
				parent = 135485879599696
					children:
					<class 'ir.ArrayElement'> 135485879600704 {
					parent = 135485879600896
						children:
						<class 'ir.BinExpr'> 135485879600800 {
						parent = 135485879600704
							children:
							'times'
							<class 'ir.BinExpr'> 135485879600608 {
							parent = 135485879600800
								children:
								'minus'
								<class 'ir.Var'> 135485880056800 {
								parent = 135485879600608
									symbol: 	global int x
								}
								<class 'ir.Const'> 135485879600512 {
								parent = 135485879600608
									value: 	100
									symbol: 	None
								}
							}
							<class 'ir.Const'> 135485879600416 {
							parent = 135485879600800
								value: 	1
								symbol: 	None
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 135485879600800 {
						parent = 135485879600704
							children:
							'times'
							<class 'ir.BinExpr'> 135485879600608 {
							parent = 135485879600800
								children:
								'minus'
								<class 'ir.Var'> 135485880056800 {
								parent = 135485879600608
									symbol: 	global int x
								}
								<class 'ir.Const'> 135485879600512 {
								parent = 135485879600608
									value: 	100
									symbol: 	None
								}
							}
							<class 'ir.Const'> 135485879600416 {
							parent = 135485879600800
								value: 	1
								symbol: 	None
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 135485879600704 {
					parent = 135485879600896
						children:
						<class 'ir.BinExpr'> 135485879600800 {
						parent = 135485879600704
							children:
							'times'
							<class 'ir.BinExpr'> 135485879600608 {
							parent = 135485879600800
								children:
								'minus'
								<class 'ir.Var'> 135485880056800 {
								parent = 135485879600608
									symbol: 	global int x
								}
								<class 'ir.Const'> 135485879600512 {
								parent = 135485879600608
									value: 	100
									symbol: 	None
								}
							}
							<class 'ir.Const'> 135485879600416 {
							parent = 135485879600800
								value: 	1
								symbol: 	None
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 135485879600800 {
						parent = 135485879600704
							children:
							'times'
							<class 'ir.BinExpr'> 135485879600608 {
							parent = 135485879600800
								children:
								'minus'
								<class 'ir.Var'> 135485880056800 {
								parent = 135485879600608
									symbol: 	global int x
								}
								<class 'ir.Const'> 135485879600512 {
								parent = 135485879600608
									value: 	100
									symbol: 	None
								}
							}
							<class 'ir.Const'> 135485879600416 {
							parent = 135485879600800
								value: 	1
								symbol: 	None
							}
						}
					}
				}
				<class 'ir.AssignStat'> 135485879601328 {
				parent = 135485879599696
					symbol: 	global int x
					expr: 	<class 'ir.BinExpr'> 135485879601232 {
					parent = 135485879601328
						children:
						'plus'
						<class 'ir.Var'> 135485879601040 {
						parent = 135485879601232
							symbol: 	global int x
						}
						<class 'ir.Const'> 135485879601136 {
						parent = 135485879601232
							value: 	1
							symbol: 	None
						}
					}
					offset: 	None
				}
			}
		}
		<class 'ir.AssignStat'> 135485879601520 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.Const'> 135485879601424 {
			parent = 135485879601520
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.AssignStat'> 135485879601664 {
		parent = 135485880108464
			symbol: 	global int y
			expr: 	<class 'ir.Const'> 135485879601568 {
			parent = 135485879601664
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.WhileStat'> 135485879605136 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879601856 {
			parent = 135485879605136
				children:
				'leq'
				<class 'ir.Var'> 135485880056320 {
				parent = 135485879601856
					symbol: 	global int x
				}
				<class 'ir.Const'> 135485879601760 {
				parent = 135485879601856
					value: 	5
					symbol: 	None
				}
			}
			body: 	<class 'ir.StatList'> 135485879601952 {
			parent = 135485879605136
				children:
				<class 'ir.WhileStat'> 135485879605088 {
				parent = 135485879601952
					cond: 	<class 'ir.BinExpr'> 135485879602240 {
					parent = 135485879605088
						children:
						'leq'
						<class 'ir.Var'> 135485879602048 {
						parent = 135485879602240
							symbol: 	global int y
						}
						<class 'ir.Const'> 135485879602144 {
						parent = 135485879602240
							value: 	5
							symbol: 	None
						}
					}
					body: 	<class 'ir.StatList'> 135485879602336 {
					parent = 135485879605088
						children:
						<class 'ir.AssignStat'> 135485879603504 {
						parent = 135485879602336
							symbol: 	global short[5, 5] multid
							expr: 	<class 'ir.ArrayElement'> 135485879603312 {
							parent = 135485879603504
								children:
								<class 'ir.BinExpr'> 135485879603408 {
								parent = 135485879603312
									children:
									'times'
									<class 'ir.Var'> 135485879602672 {
									parent = 135485879603408
										symbol: 	global int x
									}
									<class 'ir.Const'> 135485879603152 {
									parent = 135485879603408
										value: 	1
										symbol: 	None
									}
								}
								symbol: 	global char[5] arr
								offset: 	<class 'ir.BinExpr'> 135485879603408 {
								parent = 135485879603312
									children:
									'times'
									<class 'ir.Var'> 135485879602672 {
									parent = 135485879603408
										symbol: 	global int x
									}
									<class 'ir.Const'> 135485879603152 {
									parent = 135485879603408
										value: 	1
										symbol: 	None
									}
								}
							}
							offset: 	<class 'ir.BinExpr'> 135485879603056 {
							parent = 135485879603504
								children:
								'plus'
								<class 'ir.BinExpr'> 135485879602768 {
								parent = 135485879603056
									children:
									'times'
									<class 'ir.Var'> 135485879602432 {
									parent = 135485879602768
										symbol: 	global int x
									}
									<class 'ir.Const'> 135485879602480 {
									parent = 135485879602768
										value: 	10
										symbol: 	None
									}
								}
								<class 'ir.BinExpr'> 135485879602960 {
								parent = 135485879603056
									children:
									'times'
									<class 'ir.Var'> 135485879602576 {
									parent = 135485879602960
										symbol: 	global int y
									}
									<class 'ir.Const'> 135485879602864 {
									parent = 135485879602960
										value: 	2
										symbol: 	None
									}
								}
							}
						}
						<class 'ir.PrintStat'> 135485879604272 {
						parent = 135485879602336
							children:
							<class 'ir.ArrayElement'> 135485879603792 {
							parent = 135485879604272
								children:
								<class 'ir.BinExpr'> 135485879604176 {
								parent = 135485879603792
									children:
									'plus'
									<class 'ir.BinExpr'> 135485879603888 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485880056992 {
										parent = 135485879603888
											symbol: 	global int x
										}
										<class 'ir.Const'> 135485879603600 {
										parent = 135485879603888
											value: 	10
											symbol: 	None
										}
									}
									<class 'ir.BinExpr'> 135485879604080 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485879603696 {
										parent = 135485879604080
											symbol: 	global int y
										}
										<class 'ir.Const'> 135485879603984 {
										parent = 135485879604080
											value: 	2
											symbol: 	None
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 135485879604176 {
								parent = 135485879603792
									children:
									'plus'
									<class 'ir.BinExpr'> 135485879603888 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485880056992 {
										parent = 135485879603888
											symbol: 	global int x
										}
										<class 'ir.Const'> 135485879603600 {
										parent = 135485879603888
											value: 	10
											symbol: 	None
										}
									}
									<class 'ir.BinExpr'> 135485879604080 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485879603696 {
										parent = 135485879604080
											symbol: 	global int y
										}
										<class 'ir.Const'> 135485879603984 {
										parent = 135485879604080
											value: 	2
											symbol: 	None
										}
									}
								}
							}
							expr: 	<class 'ir.ArrayElement'> 135485879603792 {
							parent = 135485879604272
								children:
								<class 'ir.BinExpr'> 135485879604176 {
								parent = 135485879603792
									children:
									'plus'
									<class 'ir.BinExpr'> 135485879603888 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485880056992 {
										parent = 135485879603888
											symbol: 	global int x
										}
										<class 'ir.Const'> 135485879603600 {
										parent = 135485879603888
											value: 	10
											symbol: 	None
										}
									}
									<class 'ir.BinExpr'> 135485879604080 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485879603696 {
										parent = 135485879604080
											symbol: 	global int y
										}
										<class 'ir.Const'> 135485879603984 {
										parent = 135485879604080
											value: 	2
											symbol: 	None
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 135485879604176 {
								parent = 135485879603792
									children:
									'plus'
									<class 'ir.BinExpr'> 135485879603888 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485880056992 {
										parent = 135485879603888
											symbol: 	global int x
										}
										<class 'ir.Const'> 135485879603600 {
										parent = 135485879603888
											value: 	10
											symbol: 	None
										}
									}
									<class 'ir.BinExpr'> 135485879604080 {
									parent = 135485879604176
										children:
										'times'
										<class 'ir.Var'> 135485879603696 {
										parent = 135485879604080
											symbol: 	global int y
										}
										<class 'ir.Const'> 135485879603984 {
										parent = 135485879604080
											value: 	2
											symbol: 	None
										}
									}
								}
							}
						}
						<class 'ir.AssignStat'> 135485879604704 {
						parent = 135485879602336
							symbol: 	global int x
							expr: 	<class 'ir.BinExpr'> 135485879604608 {
							parent = 135485879604704
								children:
								'plus'
								<class 'ir.Var'> 135485879604416 {
								parent = 135485879604608
									symbol: 	global int x
								}
								<class 'ir.Const'> 135485879604512 {
								parent = 135485879604608
									value: 	1
									symbol: 	None
								}
							}
							offset: 	None
						}
						<class 'ir.AssignStat'> 135485879605040 {
						parent = 135485879602336
							symbol: 	global int y
							expr: 	<class 'ir.BinExpr'> 135485879604944 {
							parent = 135485879605040
								children:
								'plus'
								<class 'ir.Var'> 135485879604752 {
								parent = 135485879604944
									symbol: 	global int y
								}
								<class 'ir.Const'> 135485879604848 {
								parent = 135485879604944
									value: 	1
									symbol: 	None
								}
							}
							offset: 	None
						}
					}
				}
			}
		}
		<class 'ir.ForStat'> 135485879606288 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879605856 {
			parent = 135485879606288
				children:
				'leq'
				<class 'ir.Var'> 135485879605760 {
				parent = 135485879605856
					symbol: 	auto int a
				}
				<class 'ir.Const'> 135485879605328 {
				parent = 135485879605856
					value: 	20
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879606240 {
			parent = 135485879606288
				symbol: 	auto int a
				expr: 	<class 'ir.BinExpr'> 135485879606144 {
				parent = 135485879606240
					children:
					'plus'
					<class 'ir.Var'> 135485879605952 {
					parent = 135485879606144
						symbol: 	auto int a
					}
					<class 'ir.Const'> 135485879606048 {
					parent = 135485879606144
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879605424 {
			parent = 135485879606288
				children:
				<class 'ir.PrintStat'> 135485879605616 {
				parent = 135485879605424
					children:
					<class 'ir.Var'> 135485879605520 {
					parent = 135485879605616
						symbol: 	auto int a
					}
					expr: 	<class 'ir.Var'> 135485879605520 {
					parent = 135485879605616
						symbol: 	auto int a
					}
				}
			}
		}
		<class 'ir.AssignStat'> 135485879606432 {
		parent = 135485880108464
			symbol: 	global int i
			expr: 	<class 'ir.Const'> 135485879606336 {
			parent = 135485879606432
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.PrintStat'> 135485879606528 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485880057088 {
			parent = 135485879606528
				value: 	99991
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485880057088 {
			parent = 135485879606528
				value: 	99991
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879624176 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879623744 {
			parent = 135485879624176
				children:
				'leq'
				<class 'ir.Var'> 135485879607200 {
				parent = 135485879623744
					symbol: 	auto int i
				}
				<class 'ir.Const'> 135485879606768 {
				parent = 135485879623744
					value: 	15
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879624128 {
			parent = 135485879624176
				symbol: 	auto int i
				expr: 	<class 'ir.BinExpr'> 135485879624032 {
				parent = 135485879624128
					children:
					'plus'
					<class 'ir.Var'> 135485879623840 {
					parent = 135485879624032
						symbol: 	auto int i
					}
					<class 'ir.Const'> 135485879623936 {
					parent = 135485879624032
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879606864 {
			parent = 135485879624176
				children:
				<class 'ir.PrintStat'> 135485879607056 {
				parent = 135485879606864
					children:
					<class 'ir.Var'> 135485879606960 {
					parent = 135485879607056
						symbol: 	global int i
					}
					expr: 	<class 'ir.Var'> 135485879606960 {
					parent = 135485879607056
						symbol: 	global int i
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879624320 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879624224 {
			parent = 135485879624320
				value: 	88881
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879624224 {
			parent = 135485879624320
				value: 	88881
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879624512 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879624416 {
			parent = 135485879624512
				value: 	99992
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879624416 {
			parent = 135485879624512
				value: 	99992
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879625712 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879625280 {
			parent = 135485879625712
				children:
				'leq'
				<class 'ir.Var'> 135485879625184 {
				parent = 135485879625280
					symbol: 	auto int j
				}
				<class 'ir.Const'> 135485879624752 {
				parent = 135485879625280
					value: 	5
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879625664 {
			parent = 135485879625712
				symbol: 	auto int j
				expr: 	<class 'ir.BinExpr'> 135485879625568 {
				parent = 135485879625664
					children:
					'plus'
					<class 'ir.Var'> 135485879625376 {
					parent = 135485879625568
						symbol: 	auto int j
					}
					<class 'ir.Const'> 135485879625472 {
					parent = 135485879625568
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879624848 {
			parent = 135485879625712
				children:
				<class 'ir.PrintStat'> 135485879625040 {
				parent = 135485879624848
					children:
					<class 'ir.Var'> 135485879624944 {
					parent = 135485879625040
						symbol: 	global int j
					}
					expr: 	<class 'ir.Var'> 135485879624944 {
					parent = 135485879625040
						symbol: 	global int j
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879625856 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879625760 {
			parent = 135485879625856
				value: 	88882
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879625760 {
			parent = 135485879625856
				value: 	88882
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879626048 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879625952 {
			parent = 135485879626048
				value: 	99993
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879625952 {
			parent = 135485879626048
				value: 	99993
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879627440 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879627008 {
			parent = 135485879627440
				children:
				'leq'
				<class 'ir.Var'> 135485879626912 {
				parent = 135485879627008
					symbol: 	auto int k
				}
				<class 'ir.Const'> 135485879626288 {
				parent = 135485879627008
					value: 	5
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879627392 {
			parent = 135485879627440
				symbol: 	auto int k
				expr: 	<class 'ir.BinExpr'> 135485879627296 {
				parent = 135485879627392
					children:
					'plus'
					<class 'ir.Var'> 135485879627104 {
					parent = 135485879627296
						symbol: 	auto int k
					}
					<class 'ir.Const'> 135485879627200 {
					parent = 135485879627296
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879626384 {
			parent = 135485879627440
				children:
				<class 'ir.PrintStat'> 135485879626576 {
				parent = 135485879626384
					children:
					<class 'ir.Const'> 135485879626480 {
					parent = 135485879626576
						value: 	77777
						symbol: 	None
					}
					expr: 	<class 'ir.Const'> 135485879626480 {
					parent = 135485879626576
						value: 	77777
						symbol: 	None
					}
				}
				<class 'ir.PrintStat'> 135485879626768 {
				parent = 135485879626384
					children:
					<class 'ir.Var'> 135485879626672 {
					parent = 135485879626768
						symbol: 	global int k
					}
					expr: 	<class 'ir.Var'> 135485879626672 {
					parent = 135485879626768
						symbol: 	global int k
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879627584 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879627488 {
			parent = 135485879627584
				value: 	88883
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879627488 {
			parent = 135485879627584
				value: 	88883
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879648320 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879627680 {
			parent = 135485879648320
				value: 	99994
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879627680 {
			parent = 135485879648320
				value: 	99994
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879649520 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879649088 {
			parent = 135485879649520
				children:
				'leq'
				<class 'ir.Var'> 135485879648992 {
				parent = 135485879649088
					symbol: 	auto int m
				}
				<class 'ir.Const'> 135485879648560 {
				parent = 135485879649088
					value: 	6
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879649472 {
			parent = 135485879649520
				symbol: 	auto int m
				expr: 	<class 'ir.BinExpr'> 135485879649376 {
				parent = 135485879649472
					children:
					'plus'
					<class 'ir.Var'> 135485879649184 {
					parent = 135485879649376
						symbol: 	auto int m
					}
					<class 'ir.Const'> 135485879649280 {
					parent = 135485879649376
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879648656 {
			parent = 135485879649520
				children:
				<class 'ir.PrintStat'> 135485879648848 {
				parent = 135485879648656
					children:
					<class 'ir.Var'> 135485879648752 {
					parent = 135485879648848
						symbol: 	global int m
					}
					expr: 	<class 'ir.Var'> 135485879648752 {
					parent = 135485879648848
						symbol: 	global int m
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879649664 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879649568 {
			parent = 135485879649664
				value: 	88884
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879649568 {
			parent = 135485879649664
				value: 	88884
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879649856 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879649760 {
			parent = 135485879649856
				value: 	99995
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879649760 {
			parent = 135485879649856
				value: 	99995
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879651056 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879650624 {
			parent = 135485879651056
				children:
				'leq'
				<class 'ir.Var'> 135485879650528 {
				parent = 135485879650624
					symbol: 	auto int n
				}
				<class 'ir.Const'> 135485879650096 {
				parent = 135485879650624
					value: 	7
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879651008 {
			parent = 135485879651056
				symbol: 	auto int n
				expr: 	<class 'ir.BinExpr'> 135485879650912 {
				parent = 135485879651008
					children:
					'plus'
					<class 'ir.Var'> 135485879650720 {
					parent = 135485879650912
						symbol: 	auto int n
					}
					<class 'ir.Const'> 135485879650816 {
					parent = 135485879650912
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879650192 {
			parent = 135485879651056
				children:
				<class 'ir.PrintStat'> 135485879650384 {
				parent = 135485879650192
					children:
					<class 'ir.Var'> 135485879650288 {
					parent = 135485879650384
						symbol: 	global int n
					}
					expr: 	<class 'ir.Var'> 135485879650288 {
					parent = 135485879650384
						symbol: 	global int n
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879651200 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879651104 {
			parent = 135485879651200
				value: 	88885
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879651104 {
			parent = 135485879651200
				value: 	88885
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879651392 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879651296 {
			parent = 135485879651392
				value: 	99996
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879651296 {
			parent = 135485879651392
				value: 	99996
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879644464 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879652160 {
			parent = 135485879644464
				children:
				'leq'
				<class 'ir.Var'> 135485879652064 {
				parent = 135485879652160
					symbol: 	auto int p
				}
				<class 'ir.Const'> 135485879651632 {
				parent = 135485879652160
					value: 	12
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879644416 {
			parent = 135485879644464
				symbol: 	auto int p
				expr: 	<class 'ir.BinExpr'> 135485879644320 {
				parent = 135485879644416
					children:
					'plus'
					<class 'ir.Var'> 135485879652256 {
					parent = 135485879644320
						symbol: 	auto int p
					}
					<class 'ir.Const'> 135485879644224 {
					parent = 135485879644320
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879651728 {
			parent = 135485879644464
				children:
				<class 'ir.PrintStat'> 135485879651920 {
				parent = 135485879651728
					children:
					<class 'ir.Var'> 135485879651824 {
					parent = 135485879651920
						symbol: 	global int p
					}
					expr: 	<class 'ir.Var'> 135485879651824 {
					parent = 135485879651920
						symbol: 	global int p
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879644608 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879644512 {
			parent = 135485879644608
				value: 	88886
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879644512 {
			parent = 135485879644608
				value: 	88886
				symbol: 	None
			}
		}
		<class 'ir.AssignStat'> 135485879644800 {
		parent = 135485880108464
			symbol: 	global int sum
			expr: 	<class 'ir.Const'> 135485879644704 {
			parent = 135485879644800
				value: 	0
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.PrintStat'> 135485879644896 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485880057760 {
			parent = 135485879644896
				value: 	99997
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485880057760 {
			parent = 135485879644896
				value: 	99997
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879646624 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879646192 {
			parent = 135485879646624
				children:
				'leq'
				<class 'ir.Var'> 135485879646096 {
				parent = 135485879646192
					symbol: 	auto int q
				}
				<class 'ir.Const'> 135485879645136 {
				parent = 135485879646192
					value: 	5
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879646576 {
			parent = 135485879646624
				symbol: 	auto int q
				expr: 	<class 'ir.BinExpr'> 135485879646480 {
				parent = 135485879646576
					children:
					'plus'
					<class 'ir.Var'> 135485879646288 {
					parent = 135485879646480
						symbol: 	auto int q
					}
					<class 'ir.Const'> 135485879646384 {
					parent = 135485879646480
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879645232 {
			parent = 135485879646624
				children:
				<class 'ir.AssignStat'> 135485879645616 {
				parent = 135485879645232
					symbol: 	global int sum
					expr: 	<class 'ir.BinExpr'> 135485879645520 {
					parent = 135485879645616
						children:
						'plus'
						<class 'ir.Var'> 135485879645328 {
						parent = 135485879645520
							symbol: 	global int sum
						}
						<class 'ir.Var'> 135485879645424 {
						parent = 135485879645520
							symbol: 	global int q
						}
					}
					offset: 	None
				}
				<class 'ir.PrintStat'> 135485879645760 {
				parent = 135485879645232
					children:
					<class 'ir.Var'> 135485879645664 {
					parent = 135485879645760
						symbol: 	global int q
					}
					expr: 	<class 'ir.Var'> 135485879645664 {
					parent = 135485879645760
						symbol: 	global int q
					}
				}
				<class 'ir.PrintStat'> 135485879645952 {
				parent = 135485879645232
					children:
					<class 'ir.Var'> 135485879645856 {
					parent = 135485879645952
						symbol: 	global int sum
					}
					expr: 	<class 'ir.Var'> 135485879645856 {
					parent = 135485879645952
						symbol: 	global int sum
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879646768 {
		parent = 135485880108464
			children:
			<class 'ir.Var'> 135485879646672 {
			parent = 135485879646768
				symbol: 	global int sum
			}
			expr: 	<class 'ir.Var'> 135485879646672 {
			parent = 135485879646768
				symbol: 	global int sum
			}
		}
		<class 'ir.PrintStat'> 135485879646960 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879646864 {
			parent = 135485879646960
				value: 	88887
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879646864 {
			parent = 135485879646960
				value: 	88887
				symbol: 	None
			}
		}
		<class 'ir.AssignStat'> 135485879647152 {
		parent = 135485880108464
			symbol: 	global int x
			expr: 	<class 'ir.Const'> 135485879647056 {
			parent = 135485879647152
				value: 	100
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.PrintStat'> 135485879647296 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879647200 {
			parent = 135485879647296
				value: 	99998
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879647200 {
			parent = 135485879647296
				value: 	99998
				symbol: 	None
			}
		}
		<class 'ir.ForStat'> 135485879669376 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879668944 {
			parent = 135485879669376
				children:
				'leq'
				<class 'ir.Var'> 135485879668848 {
				parent = 135485879668944
					symbol: 	auto int r
				}
				<class 'ir.Const'> 135485879647536 {
				parent = 135485879668944
					value: 	3
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879669328 {
			parent = 135485879669376
				symbol: 	auto int r
				expr: 	<class 'ir.BinExpr'> 135485879669232 {
				parent = 135485879669328
					children:
					'plus'
					<class 'ir.Var'> 135485879669040 {
					parent = 135485879669232
						symbol: 	auto int r
					}
					<class 'ir.Const'> 135485879669136 {
					parent = 135485879669232
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879647632 {
			parent = 135485879669376
				children:
				<class 'ir.AssignStat'> 135485879648016 {
				parent = 135485879647632
					symbol: 	global int x
					expr: 	<class 'ir.BinExpr'> 135485879647920 {
					parent = 135485879648016
						children:
						'plus'
						<class 'ir.Var'> 135485879647728 {
						parent = 135485879647920
							symbol: 	global int x
						}
						<class 'ir.Var'> 135485879647824 {
						parent = 135485879647920
							symbol: 	global int r
						}
					}
					offset: 	None
				}
				<class 'ir.PrintStat'> 135485879648160 {
				parent = 135485879647632
					children:
					<class 'ir.Var'> 135485879648064 {
					parent = 135485879648160
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 135485879648064 {
					parent = 135485879648160
						symbol: 	global int x
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879669520 {
		parent = 135485880108464
			children:
			<class 'ir.Var'> 135485879669424 {
			parent = 135485879669520
				symbol: 	global int x
			}
			expr: 	<class 'ir.Var'> 135485879669424 {
			parent = 135485879669520
				symbol: 	global int x
			}
		}
		<class 'ir.PrintStat'> 135485879669712 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879669616 {
			parent = 135485879669712
				value: 	88888
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879669616 {
			parent = 135485879669712
				value: 	88888
				symbol: 	None
			}
		}
		<class 'ir.PrintStat'> 135485879669904 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879669808 {
			parent = 135485879669904
				value: 	999990
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879669808 {
			parent = 135485879669904
				value: 	999990
				symbol: 	None
			}
		}
		<class 'ir.AssignStat'> 135485879670096 {
		parent = 135485880108464
			symbol: 	global int sm_idx
			expr: 	<class 'ir.Const'> 135485879670000 {
			parent = 135485879670096
				value: 	0
				symbol: 	None
			}
			offset: 	None
		}
		<class 'ir.ForStat'> 135485879671872 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879671440 {
			parent = 135485879671872
				children:
				'leq'
				<class 'ir.Var'> 135485879671344 {
				parent = 135485879671440
					symbol: 	auto int sm_idx
				}
				<class 'ir.Const'> 135485879670240 {
				parent = 135485879671440
					value: 	127
					symbol: 	None
				}
			}
			step: 	<class 'ir.AssignStat'> 135485879671824 {
			parent = 135485879671872
				symbol: 	auto int sm_idx
				expr: 	<class 'ir.BinExpr'> 135485879671728 {
				parent = 135485879671824
					children:
					'plus'
					<class 'ir.Var'> 135485879671536 {
					parent = 135485879671728
						symbol: 	auto int sm_idx
					}
					<class 'ir.Const'> 135485879671632 {
					parent = 135485879671728
						value: 	1
						symbol: 	None
					}
				}
				offset: 	None
			}
			body: 	<class 'ir.StatList'> 135485879670336 {
			parent = 135485879671872
				children:
				<class 'ir.AssignStat'> 135485879671296 {
				parent = 135485879670336
					symbol: 	global int[128] sm_dest_arr
					expr: 	<class 'ir.BinExpr'> 135485879671200 {
					parent = 135485879671296
						children:
						'plus'
						<class 'ir.ArrayElement'> 135485879670864 {
						parent = 135485879671200
							children:
							<class 'ir.BinExpr'> 135485879670960 {
							parent = 135485879670864
								children:
								'times'
								<class 'ir.Var'> 135485879670576 {
								parent = 135485879670960
									symbol: 	global int sm_idx
								}
								<class 'ir.Const'> 135485879670768 {
								parent = 135485879670960
									value: 	4
									symbol: 	None
								}
							}
							symbol: 	global int[128] sm_source_arr
							offset: 	<class 'ir.BinExpr'> 135485879670960 {
							parent = 135485879670864
								children:
								'times'
								<class 'ir.Var'> 135485879670576 {
								parent = 135485879670960
									symbol: 	global int sm_idx
								}
								<class 'ir.Const'> 135485879670768 {
								parent = 135485879670960
									value: 	4
									symbol: 	None
								}
							}
						}
						<class 'ir.Var'> 135485879671056 {
						parent = 135485879671200
							symbol: 	global int sm_idx
						}
					}
					offset: 	<class 'ir.BinExpr'> 135485879670672 {
					parent = 135485879671296
						children:
						'times'
						<class 'ir.Var'> 135485879670432 {
						parent = 135485879670672
							symbol: 	global int sm_idx
						}
						<class 'ir.Const'> 135485879670480 {
						parent = 135485879670672
							value: 	4
							symbol: 	None
						}
					}
				}
			}
		}
		<class 'ir.IfStat'> 135485879682192 {
		parent = 135485880108464
			cond: 	<class 'ir.BinExpr'> 135485879672112 {
			parent = 135485879682192
				children:
				'geq'
				<class 'ir.Const'> 135485879671920 {
				parent = 135485879672112
					value: 	127
					symbol: 	None
				}
				<class 'ir.Const'> 135485879672016 {
				parent = 135485879672112
					value: 	0
					symbol: 	None
				}
			}
			elsepart: 	None
			thenpart: 	<class 'ir.StatList'> 135485879672208 {
			parent = 135485879682192
				children:
				<class 'ir.PrintStat'> 135485879672400 {
				parent = 135485879672208
					children:
					<class 'ir.Const'> 135485879672304 {
					parent = 135485879672400
						value: 	76543
						symbol: 	None
					}
					expr: 	<class 'ir.Const'> 135485879672304 {
					parent = 135485879672400
						value: 	76543
						symbol: 	None
					}
				}
				<class 'ir.PrintStat'> 135485879681088 {
				parent = 135485879672208
					children:
					<class 'ir.ArrayElement'> 135485879672640 {
					parent = 135485879681088
						children:
						<class 'ir.BinExpr'> 135485879672736 {
						parent = 135485879672640
							children:
							'times'
							<class 'ir.Const'> 135485879672496 {
							parent = 135485879672736
								value: 	0
								symbol: 	None
							}
							<class 'ir.Const'> 135485879672544 {
							parent = 135485879672736
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879672736 {
						parent = 135485879672640
							children:
							'times'
							<class 'ir.Const'> 135485879672496 {
							parent = 135485879672736
								value: 	0
								symbol: 	None
							}
							<class 'ir.Const'> 135485879672544 {
							parent = 135485879672736
								value: 	4
								symbol: 	None
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 135485879672640 {
					parent = 135485879681088
						children:
						<class 'ir.BinExpr'> 135485879672736 {
						parent = 135485879672640
							children:
							'times'
							<class 'ir.Const'> 135485879672496 {
							parent = 135485879672736
								value: 	0
								symbol: 	None
							}
							<class 'ir.Const'> 135485879672544 {
							parent = 135485879672736
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879672736 {
						parent = 135485879672640
							children:
							'times'
							<class 'ir.Const'> 135485879672496 {
							parent = 135485879672736
								value: 	0
								symbol: 	None
							}
							<class 'ir.Const'> 135485879672544 {
							parent = 135485879672736
								value: 	4
								symbol: 	None
							}
						}
					}
				}
				<class 'ir.PrintStat'> 135485879681568 {
				parent = 135485879672208
					children:
					<class 'ir.ArrayElement'> 135485879681376 {
					parent = 135485879681568
						children:
						<class 'ir.BinExpr'> 135485879681472 {
						parent = 135485879681376
							children:
							'times'
							<class 'ir.Const'> 135485879681232 {
							parent = 135485879681472
								value: 	64
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681280 {
							parent = 135485879681472
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879681472 {
						parent = 135485879681376
							children:
							'times'
							<class 'ir.Const'> 135485879681232 {
							parent = 135485879681472
								value: 	64
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681280 {
							parent = 135485879681472
								value: 	4
								symbol: 	None
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 135485879681376 {
					parent = 135485879681568
						children:
						<class 'ir.BinExpr'> 135485879681472 {
						parent = 135485879681376
							children:
							'times'
							<class 'ir.Const'> 135485879681232 {
							parent = 135485879681472
								value: 	64
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681280 {
							parent = 135485879681472
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879681472 {
						parent = 135485879681376
							children:
							'times'
							<class 'ir.Const'> 135485879681232 {
							parent = 135485879681472
								value: 	64
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681280 {
							parent = 135485879681472
								value: 	4
								symbol: 	None
							}
						}
					}
				}
				<class 'ir.PrintStat'> 135485879682048 {
				parent = 135485879672208
					children:
					<class 'ir.ArrayElement'> 135485879681856 {
					parent = 135485879682048
						children:
						<class 'ir.BinExpr'> 135485879681952 {
						parent = 135485879681856
							children:
							'times'
							<class 'ir.Const'> 135485879681712 {
							parent = 135485879681952
								value: 	127
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681760 {
							parent = 135485879681952
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879681952 {
						parent = 135485879681856
							children:
							'times'
							<class 'ir.Const'> 135485879681712 {
							parent = 135485879681952
								value: 	127
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681760 {
							parent = 135485879681952
								value: 	4
								symbol: 	None
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 135485879681856 {
					parent = 135485879682048
						children:
						<class 'ir.BinExpr'> 135485879681952 {
						parent = 135485879681856
							children:
							'times'
							<class 'ir.Const'> 135485879681712 {
							parent = 135485879681952
								value: 	127
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681760 {
							parent = 135485879681952
								value: 	4
								symbol: 	None
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 135485879681952 {
						parent = 135485879681856
							children:
							'times'
							<class 'ir.Const'> 135485879681712 {
							parent = 135485879681952
								value: 	127
								symbol: 	None
							}
							<class 'ir.Const'> 135485879681760 {
							parent = 135485879681952
								value: 	4
								symbol: 	None
							}
						}
					}
				}
			}
		}
		<class 'ir.PrintStat'> 135485879682336 {
		parent = 135485880108464
			children:
			<class 'ir.Const'> 135485879682240 {
			parent = 135485879682336
				value: 	888880
				symbol: 	None
			}
			expr: 	<class 'ir.Const'> 135485879682240 {
			parent = 135485879682336
				value: 	888880
				symbol: 	None
			}
		}
	}
}
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108032
navigating children of <class 'ir.BinExpr'> 135485880108224 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108320
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 45
navigating children of <class 'ir.UnExpr'> 135485880108656 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108752
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108848
navigating children of <class 'ir.BinExpr'> 135485880109088 3
successfully navigated attr  cond  of <class 'ir.IfStat'> 135485880109856
navigating children of <class 'ir.StatList'> 135485880109568 1
navigating children of <class 'ir.PrintStat'> 135485880109760 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880109760
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 135485880109856
navigating children of <class 'ir.StatList'> 135485880109184 1
navigating children of <class 'ir.PrintStat'> 135485880109472 1
navigating children of <class 'ir.UnExpr'> 135485880109376 2
navigating children of <class 'ir.UnExpr'> 135485880109376 2
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880109472
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 135485880109856
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880110000
navigating children of <class 'ir.BinExpr'> 135485880110240 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879599216
navigating children of <class 'ir.StatList'> 135485880110336 3
successfully navigated attr  call  of <class 'ir.CallStat'> 135485880110528
navigating children of <class 'ir.BinExpr'> 135485880110816 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880110912
navigating children of <class 'ir.PrintStat'> 135485880111056 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880111056
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879599216
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879599360
navigating children of <class 'ir.BinExpr'> 135485879599600 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879601376
navigating children of <class 'ir.StatList'> 135485879599696 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879600368
navigating children of <class 'ir.BinExpr'> 135485879600224 3
navigating children of <class 'ir.BinExpr'> 135485879600032 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879600368
navigating children of <class 'ir.PrintStat'> 135485879600896 1
navigating children of <class 'ir.ArrayElement'> 135485879600704 1
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.BinExpr'> 135485879600608 3
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.BinExpr'> 135485879600608 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879600704
navigating children of <class 'ir.ArrayElement'> 135485879600704 1
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.BinExpr'> 135485879600608 3
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.BinExpr'> 135485879600608 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879600704
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879600896
navigating children of <class 'ir.BinExpr'> 135485879601232 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601328
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879601376
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601520
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601664
navigating children of <class 'ir.BinExpr'> 135485879601856 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879605136
navigating children of <class 'ir.StatList'> 135485879601952 1
navigating children of <class 'ir.BinExpr'> 135485879602240 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879605088
navigating children of <class 'ir.StatList'> 135485879602336 4
navigating children of <class 'ir.ArrayElement'> 135485879603312 1
navigating children of <class 'ir.BinExpr'> 135485879603408 3
navigating children of <class 'ir.BinExpr'> 135485879603408 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603312
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879603504
navigating children of <class 'ir.BinExpr'> 135485879603056 3
navigating children of <class 'ir.BinExpr'> 135485879602768 3
navigating children of <class 'ir.BinExpr'> 135485879602960 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879603504
navigating children of <class 'ir.PrintStat'> 135485879604272 1
navigating children of <class 'ir.ArrayElement'> 135485879603792 1
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.BinExpr'> 135485879603888 3
navigating children of <class 'ir.BinExpr'> 135485879604080 3
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.BinExpr'> 135485879603888 3
navigating children of <class 'ir.BinExpr'> 135485879604080 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603792
navigating children of <class 'ir.ArrayElement'> 135485879603792 1
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.BinExpr'> 135485879603888 3
navigating children of <class 'ir.BinExpr'> 135485879604080 3
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.BinExpr'> 135485879603888 3
navigating children of <class 'ir.BinExpr'> 135485879604080 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603792
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879604272
navigating children of <class 'ir.BinExpr'> 135485879604608 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879604704
navigating children of <class 'ir.BinExpr'> 135485879604944 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605040
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879605088
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879605136
navigating children of <class 'ir.BinExpr'> 135485879605856 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879606288
navigating children of <class 'ir.BinExpr'> 135485879606144 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879606240
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879606288
navigating children of <class 'ir.StatList'> 135485879605424 1
navigating children of <class 'ir.PrintStat'> 135485879605616 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879605616
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879606288
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879606432
navigating children of <class 'ir.PrintStat'> 135485879606528 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879606528
navigating children of <class 'ir.BinExpr'> 135485879623744 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.BinExpr'> 135485879624032 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879624128
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.StatList'> 135485879606864 1
navigating children of <class 'ir.PrintStat'> 135485879607056 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879607056
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.PrintStat'> 135485879624320 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879624320
navigating children of <class 'ir.PrintStat'> 135485879624512 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879624512
navigating children of <class 'ir.BinExpr'> 135485879625280 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.BinExpr'> 135485879625568 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625664
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.StatList'> 135485879624848 1
navigating children of <class 'ir.PrintStat'> 135485879625040 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879625040
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.PrintStat'> 135485879625856 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879625856
navigating children of <class 'ir.PrintStat'> 135485879626048 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626048
navigating children of <class 'ir.BinExpr'> 135485879627008 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.BinExpr'> 135485879627296 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879627392
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.StatList'> 135485879626384 2
navigating children of <class 'ir.PrintStat'> 135485879626576 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626576
navigating children of <class 'ir.PrintStat'> 135485879626768 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626768
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.PrintStat'> 135485879627584 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879627584
navigating children of <class 'ir.PrintStat'> 135485879648320 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648320
navigating children of <class 'ir.BinExpr'> 135485879649088 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.BinExpr'> 135485879649376 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879649472
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.StatList'> 135485879648656 1
navigating children of <class 'ir.PrintStat'> 135485879648848 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648848
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.PrintStat'> 135485879649664 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879649664
navigating children of <class 'ir.PrintStat'> 135485879649856 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879649856
navigating children of <class 'ir.BinExpr'> 135485879650624 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.BinExpr'> 135485879650912 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879651008
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.StatList'> 135485879650192 1
navigating children of <class 'ir.PrintStat'> 135485879650384 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879650384
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.PrintStat'> 135485879651200 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651200
navigating children of <class 'ir.PrintStat'> 135485879651392 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651392
navigating children of <class 'ir.BinExpr'> 135485879652160 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.BinExpr'> 135485879644320 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879644416
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.StatList'> 135485879651728 1
navigating children of <class 'ir.PrintStat'> 135485879651920 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651920
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.PrintStat'> 135485879644608 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879644608
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879644800
navigating children of <class 'ir.PrintStat'> 135485879644896 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879644896
navigating children of <class 'ir.BinExpr'> 135485879646192 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.BinExpr'> 135485879646480 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646576
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.StatList'> 135485879645232 3
navigating children of <class 'ir.BinExpr'> 135485879645520 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879645616
navigating children of <class 'ir.PrintStat'> 135485879645760 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879645760
navigating children of <class 'ir.PrintStat'> 135485879645952 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879645952
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.PrintStat'> 135485879646768 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879646768
navigating children of <class 'ir.PrintStat'> 135485879646960 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879646960
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879647152
navigating children of <class 'ir.PrintStat'> 135485879647296 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879647296
navigating children of <class 'ir.BinExpr'> 135485879668944 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.BinExpr'> 135485879669232 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879669328
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.StatList'> 135485879647632 2
navigating children of <class 'ir.BinExpr'> 135485879647920 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648016
navigating children of <class 'ir.PrintStat'> 135485879648160 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648160
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.PrintStat'> 135485879669520 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669520
navigating children of <class 'ir.PrintStat'> 135485879669712 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669712
navigating children of <class 'ir.PrintStat'> 135485879669904 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669904
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879670096
navigating children of <class 'ir.BinExpr'> 135485879671440 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.BinExpr'> 135485879671728 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879671824
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.StatList'> 135485879670336 1
navigating children of <class 'ir.BinExpr'> 135485879671200 3
navigating children of <class 'ir.ArrayElement'> 135485879670864 1
navigating children of <class 'ir.BinExpr'> 135485879670960 3
navigating children of <class 'ir.BinExpr'> 135485879670960 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879670864
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879671296
navigating children of <class 'ir.BinExpr'> 135485879670672 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879671296
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.BinExpr'> 135485879672112 3
successfully navigated attr  cond  of <class 'ir.IfStat'> 135485879682192
navigating children of <class 'ir.StatList'> 135485879672208 4
navigating children of <class 'ir.PrintStat'> 135485879672400 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879672400
navigating children of <class 'ir.PrintStat'> 135485879681088 1
navigating children of <class 'ir.ArrayElement'> 135485879672640 1
navigating children of <class 'ir.BinExpr'> 135485879672736 3
navigating children of <class 'ir.BinExpr'> 135485879672736 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879672640
navigating children of <class 'ir.ArrayElement'> 135485879672640 1
navigating children of <class 'ir.BinExpr'> 135485879672736 3
navigating children of <class 'ir.BinExpr'> 135485879672736 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879672640
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879681088
navigating children of <class 'ir.PrintStat'> 135485879681568 1
navigating children of <class 'ir.ArrayElement'> 135485879681376 1
navigating children of <class 'ir.BinExpr'> 135485879681472 3
navigating children of <class 'ir.BinExpr'> 135485879681472 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681376
navigating children of <class 'ir.ArrayElement'> 135485879681376 1
navigating children of <class 'ir.BinExpr'> 135485879681472 3
navigating children of <class 'ir.BinExpr'> 135485879681472 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879681568
navigating children of <class 'ir.PrintStat'> 135485879682048 1
navigating children of <class 'ir.ArrayElement'> 135485879681856 1
navigating children of <class 'ir.BinExpr'> 135485879681952 3
navigating children of <class 'ir.BinExpr'> 135485879681952 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681856
navigating children of <class 'ir.ArrayElement'> 135485879681856 1
navigating children of <class 'ir.BinExpr'> 135485879681952 3
navigating children of <class 'ir.BinExpr'> 135485879681952 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681856
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879682048
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 135485879682192
navigating children of <class 'ir.PrintStat'> 135485879682336 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879682336
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432

--- Navigating: Applying Lowering ---
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
Cannot lower 135485880107648 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 2
StatList : new 135485879682816
Lowering <class 'ir.Const'> 135485880107936
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108032
StatList : new 135485880107936
Lowering <class 'ir.AssignStat'> 135485880108032
navigating children of <class 'ir.BinExpr'> 135485880108224 3
StatList : new 135485879682960
Lowering <class 'ir.Var'> 135485880108080
StatList : new 135485879683104
Lowering <class 'ir.Var'> 135485880107840
StatList : new 135485879683296
Lowering <class 'ir.BinExpr'> 135485880108224
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108320
StatList : new 135485880108224
Lowering <class 'ir.AssignStat'> 135485880108320
Cannot lower 135485880107792 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
Cannot lower 135485880056608 <class 'ir.Block'> 'Block' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
Cannot lower 135485880108368 <class 'ir.FunctionDef'> 'FunctionDef' object has no attribute 'lower'
Cannot lower 135485880629952 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 45
navigating children of <class 'ir.UnExpr'> 135485880108656 2
StatList : new 135485879682720
Lowering <class 'ir.Const'> 135485880108560
StatList : new 135485879683632
Lowering <class 'ir.UnExpr'> 135485880108656
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108752
StatList : new 135485880108656
Lowering <class 'ir.AssignStat'> 135485880108752
StatList : new 135485879683728
Lowering <class 'ir.ReadStat'> 135485880056416
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880108848
StatList : new 135485880056416
Lowering <class 'ir.AssignStat'> 135485880108848
navigating children of <class 'ir.BinExpr'> 135485880109088 3
StatList : new 135485879683968
Lowering <class 'ir.Var'> 135485880108896
StatList : new 135485879684112
Lowering <class 'ir.Const'> 135485880108992
StatList : new 135485879684304
Lowering <class 'ir.BinExpr'> 135485880109088
successfully navigated attr  cond  of <class 'ir.IfStat'> 135485880109856
navigating children of <class 'ir.StatList'> 135485880109568 1
navigating children of <class 'ir.PrintStat'> 135485880109760 1
StatList : new 135485879684400
Lowering <class 'ir.Var'> 135485880109664
StatList : new 135485879684592
Lowering <class 'ir.Var'> 135485880109664
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880109760
StatList : new 135485879684688
Lowering <class 'ir.PrintStat'> 135485880109760
Cannot lower 135485880109568 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 135485880109856
navigating children of <class 'ir.StatList'> 135485880109184 1
navigating children of <class 'ir.PrintStat'> 135485880109472 1
navigating children of <class 'ir.UnExpr'> 135485880109376 2
StatList : new 135485879684928
Lowering <class 'ir.Var'> 135485880109280
StatList : new 135485879685024
Lowering <class 'ir.UnExpr'> 135485880109376
navigating children of <class 'ir.UnExpr'> 135485880109376 2
navigating children of <class 'ir.StatList'> 135485879684928 1
Cannot lower 135485879684880 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879684928 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485880109280
Lowering <class 'ir.UnExpr'> 135485880109376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880109472
StatList : new 135485879697520
Lowering <class 'ir.PrintStat'> 135485880109472
Cannot lower 135485880109184 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 135485880109856
StatList : new 135485879697952
Lowering <class 'ir.IfStat'> 135485880109856
StatList : new 135485879698144
Lowering <class 'ir.Const'> 135485880109904
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880110000
StatList : new 135485880109904
Lowering <class 'ir.AssignStat'> 135485880110000
navigating children of <class 'ir.BinExpr'> 135485880110240 3
StatList : new 135485879698336
Lowering <class 'ir.Var'> 135485880110048
StatList : new 135485879698480
Lowering <class 'ir.Const'> 135485880110144
StatList : new 135485879698672
Lowering <class 'ir.BinExpr'> 135485880110240
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879599216
navigating children of <class 'ir.StatList'> 135485880110336 3
Cannot lower 135485880110432 <class 'ir.CallExpr'> 'CallExpr' object has no attribute 'lower'
successfully navigated attr  call  of <class 'ir.CallStat'> 135485880110528
Lowering <class 'ir.CallStat'> 135485880110528
navigating children of <class 'ir.BinExpr'> 135485880110816 3
StatList : new 135485879698816
Lowering <class 'ir.Var'> 135485880110624
StatList : new 135485879698960
Lowering <class 'ir.Const'> 135485880110720
StatList : new 135485879699152
Lowering <class 'ir.BinExpr'> 135485880110816
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880110912
StatList : new 135485880110816
Lowering <class 'ir.AssignStat'> 135485880110912
navigating children of <class 'ir.PrintStat'> 135485880111056 1
StatList : new 135485879699296
Lowering <class 'ir.Var'> 135485880110960
StatList : new 135485879699488
Lowering <class 'ir.Var'> 135485880110960
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485880111056
StatList : new 135485879699584
Lowering <class 'ir.PrintStat'> 135485880111056
Cannot lower 135485880110336 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879599216
StatList : new 135485879699920
Lowering <class 'ir.WhileStat'> 135485879599216
StatList : new 135485879700112
Lowering <class 'ir.Const'> 135485879599264
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879599360
StatList : new 135485879599264
Lowering <class 'ir.AssignStat'> 135485879599360
navigating children of <class 'ir.BinExpr'> 135485879599600 3
StatList : new 135485879700304
Lowering <class 'ir.Var'> 135485879599408
StatList : new 135485879700448
Lowering <class 'ir.Const'> 135485879599504
StatList : new 135485879700640
Lowering <class 'ir.BinExpr'> 135485879599600
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879601376
navigating children of <class 'ir.StatList'> 135485879599696 3
StatList : new 135485879599648
Lowering <class 'ir.Var'> 135485879600128
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879600368
navigating children of <class 'ir.BinExpr'> 135485879600224 3
navigating children of <class 'ir.BinExpr'> 135485879600032 3
StatList : new 135485879700832
Lowering <class 'ir.Var'> 135485879599792
StatList : new 135485879701024
Lowering <class 'ir.Const'> 135485879599936
StatList : new 135485879701216
Lowering <class 'ir.BinExpr'> 135485879600032
StatList : new 135485879600080
Lowering <class 'ir.Const'> 135485879599840
StatList : new 135485879701456
Lowering <class 'ir.BinExpr'> 135485879600224
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879600368
StatList : new 135485879718240
Lowering <class 'ir.AssignStat'> 135485879600368
navigating children of <class 'ir.PrintStat'> 135485879600896 1
navigating children of <class 'ir.ArrayElement'> 135485879600704 1
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.BinExpr'> 135485879600608 3
StatList : new 135485879718480
Lowering <class 'ir.Var'> 135485880056800
StatList : new 135485879718816
Lowering <class 'ir.Const'> 135485879600512
StatList : new 135485879719008
Lowering <class 'ir.BinExpr'> 135485879600608
StatList : new 135485879600656
Lowering <class 'ir.Const'> 135485879600416
StatList : new 135485879719248
Lowering <class 'ir.BinExpr'> 135485879600800
navigating children of <class 'ir.BinExpr'> 135485879600800 3
navigating children of <class 'ir.StatList'> 135485879719008 3
navigating children of <class 'ir.StatList'> 135485879718480 1
Cannot lower 135485879718432 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879718480 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879718816 1
Cannot lower 135485879600464 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879718816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879718768 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879719008 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879600656 1
Cannot lower 135485879600608 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879600656 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879718528
Lowering <class 'ir.BinExpr'> 135485879600800
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879600704
StatList : new 135485879719968
Lowering <class 'ir.ArrayElement'> 135485879600704
navigating children of <class 'ir.ArrayElement'> 135485879600704 1
navigating children of <class 'ir.StatList'> 135485879719248 3
navigating children of <class 'ir.StatList'> 135485879719008 3
navigating children of <class 'ir.StatList'> 135485879718480 1
Cannot lower 135485879718432 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879718480 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879718816 1
Cannot lower 135485879600464 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879718816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879718768 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879719008 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879600656 1
Cannot lower 135485879600608 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879600656 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879719152 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879719248 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879718528 3
navigating children of <class 'ir.StatList'> 135485879719008 3
navigating children of <class 'ir.StatList'> 135485879718480 1
Cannot lower 135485879718432 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879718480 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879718816 1
Cannot lower 135485879600464 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879718816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879718768 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879719008 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879600656 1
Cannot lower 135485879600608 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879600656 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879719440 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879718528 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879600704
StatList : new 135485879720400
Lowering <class 'ir.ArrayElement'> 135485879600704
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879600896
StatList : new 135485879720544
Lowering <class 'ir.PrintStat'> 135485879600896
navigating children of <class 'ir.BinExpr'> 135485879601232 3
StatList : new 135485879720784
Lowering <class 'ir.Var'> 135485879601040
StatList : new 135485879720976
Lowering <class 'ir.Const'> 135485879601136
StatList : new 135485879721168
Lowering <class 'ir.BinExpr'> 135485879601232
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601328
StatList : new 135485879601232
Lowering <class 'ir.AssignStat'> 135485879601328
Cannot lower 135485879599696 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879601376
StatList : new 135485879721456
Lowering <class 'ir.WhileStat'> 135485879601376
StatList : new 135485879721648
Lowering <class 'ir.Const'> 135485879601424
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601520
StatList : new 135485879601424
Lowering <class 'ir.AssignStat'> 135485879601520
StatList : new 135485879721840
Lowering <class 'ir.Const'> 135485879601568
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879601664
StatList : new 135485879601568
Lowering <class 'ir.AssignStat'> 135485879601664
navigating children of <class 'ir.BinExpr'> 135485879601856 3
StatList : new 135485879738480
Lowering <class 'ir.Var'> 135485880056320
StatList : new 135485879738624
Lowering <class 'ir.Const'> 135485879601760
StatList : new 135485879738816
Lowering <class 'ir.BinExpr'> 135485879601856
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879605136
navigating children of <class 'ir.StatList'> 135485879601952 1
navigating children of <class 'ir.BinExpr'> 135485879602240 3
StatList : new 135485879738912
Lowering <class 'ir.Var'> 135485879602048
StatList : new 135485879739056
Lowering <class 'ir.Const'> 135485879602144
StatList : new 135485879739248
Lowering <class 'ir.BinExpr'> 135485879602240
successfully navigated attr  cond  of <class 'ir.WhileStat'> 135485879605088
navigating children of <class 'ir.StatList'> 135485879602336 4
navigating children of <class 'ir.ArrayElement'> 135485879603312 1
navigating children of <class 'ir.BinExpr'> 135485879603408 3
StatList : new 135485879739392
Lowering <class 'ir.Var'> 135485879602672
StatList : new 135485879739536
Lowering <class 'ir.Const'> 135485879603152
StatList : new 135485879739728
Lowering <class 'ir.BinExpr'> 135485879603408
navigating children of <class 'ir.BinExpr'> 135485879603408 3
navigating children of <class 'ir.StatList'> 135485879739392 1
Cannot lower 135485879739344 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879739392 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879739536 1
Cannot lower 135485879603264 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879739536 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879739920
Lowering <class 'ir.BinExpr'> 135485879603408
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603312
StatList : new 135485879740448
Lowering <class 'ir.ArrayElement'> 135485879603312
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879603504
navigating children of <class 'ir.BinExpr'> 135485879603056 3
navigating children of <class 'ir.BinExpr'> 135485879602768 3
StatList : new 135485879740592
Lowering <class 'ir.Var'> 135485879602432
StatList : new 135485879740784
Lowering <class 'ir.Const'> 135485879602480
StatList : new 135485879740976
Lowering <class 'ir.BinExpr'> 135485879602768
navigating children of <class 'ir.BinExpr'> 135485879602960 3
StatList : new 135485879602816
Lowering <class 'ir.Var'> 135485879602576
StatList : new 135485879741072
Lowering <class 'ir.Const'> 135485879602864
StatList : new 135485879741360
Lowering <class 'ir.BinExpr'> 135485879602960
StatList : new 135485879741552
Lowering <class 'ir.BinExpr'> 135485879603056
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879603504
StatList : new 135485879741840
Lowering <class 'ir.AssignStat'> 135485879603504
navigating children of <class 'ir.PrintStat'> 135485879604272 1
navigating children of <class 'ir.ArrayElement'> 135485879603792 1
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.BinExpr'> 135485879603888 3
StatList : new 135485879742080
Lowering <class 'ir.Var'> 135485880056992
StatList : new 135485879742416
Lowering <class 'ir.Const'> 135485879603600
StatList : new 135485879759056
Lowering <class 'ir.BinExpr'> 135485879603888
navigating children of <class 'ir.BinExpr'> 135485879604080 3
StatList : new 135485879603936
Lowering <class 'ir.Var'> 135485879603696
StatList : new 135485879759152
Lowering <class 'ir.Const'> 135485879603984
StatList : new 135485879759440
Lowering <class 'ir.BinExpr'> 135485879604080
StatList : new 135485879759632
Lowering <class 'ir.BinExpr'> 135485879604176
navigating children of <class 'ir.BinExpr'> 135485879604176 3
navigating children of <class 'ir.StatList'> 135485879759056 3
navigating children of <class 'ir.StatList'> 135485879742080 1
Cannot lower 135485879742032 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879742080 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879742416 1
Cannot lower 135485879603648 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879742416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879758912 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759056 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759440 3
navigating children of <class 'ir.StatList'> 135485879603936 1
Cannot lower 135485879603888 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879603936 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759152 1
Cannot lower 135485879603744 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879759152 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879759248 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759440 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879759776
Lowering <class 'ir.BinExpr'> 135485879604176
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603792
StatList : new 135485879760304
Lowering <class 'ir.ArrayElement'> 135485879603792
navigating children of <class 'ir.ArrayElement'> 135485879603792 1
navigating children of <class 'ir.StatList'> 135485879759632 3
navigating children of <class 'ir.StatList'> 135485879759056 3
navigating children of <class 'ir.StatList'> 135485879742080 1
Cannot lower 135485879742032 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879742080 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879742416 1
Cannot lower 135485879603648 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879742416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879758912 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759056 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759440 3
navigating children of <class 'ir.StatList'> 135485879603936 1
Cannot lower 135485879603888 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879603936 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759152 1
Cannot lower 135485879603744 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879759152 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879759248 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759440 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879759584 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759632 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759776 3
navigating children of <class 'ir.StatList'> 135485879759056 3
navigating children of <class 'ir.StatList'> 135485879742080 1
Cannot lower 135485879742032 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879742080 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879742416 1
Cannot lower 135485879603648 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879742416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879758912 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759056 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759440 3
navigating children of <class 'ir.StatList'> 135485879603936 1
Cannot lower 135485879603888 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879603936 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879759152 1
Cannot lower 135485879603744 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879759152 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879759248 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759440 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879759728 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879759776 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879603792
StatList : new 135485879760736
Lowering <class 'ir.ArrayElement'> 135485879603792
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879604272
StatList : new 135485879760880
Lowering <class 'ir.PrintStat'> 135485879604272
navigating children of <class 'ir.BinExpr'> 135485879604608 3
StatList : new 135485879761120
Lowering <class 'ir.Var'> 135485879604416
StatList : new 135485879761312
Lowering <class 'ir.Const'> 135485879604512
StatList : new 135485879761504
Lowering <class 'ir.BinExpr'> 135485879604608
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879604704
StatList : new 135485879604608
Lowering <class 'ir.AssignStat'> 135485879604704
navigating children of <class 'ir.BinExpr'> 135485879604944 3
StatList : new 135485879761648
Lowering <class 'ir.Var'> 135485879604752
StatList : new 135485879761792
Lowering <class 'ir.Const'> 135485879604848
StatList : new 135485879761984
Lowering <class 'ir.BinExpr'> 135485879604944
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605040
StatList : new 135485879604944
Lowering <class 'ir.AssignStat'> 135485879605040
Cannot lower 135485879602336 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879605088
StatList : new 135485879762320
Lowering <class 'ir.WhileStat'> 135485879605088
Cannot lower 135485879601952 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 135485879605136
StatList : new 135485879762656
Lowering <class 'ir.WhileStat'> 135485879605136
navigating children of <class 'ir.BinExpr'> 135485879605856 3
StatList : new 135485879762848
Lowering <class 'ir.Var'> 135485879605760
StatList : new 135485879754864
Lowering <class 'ir.Const'> 135485879605328
StatList : new 135485879755056
Lowering <class 'ir.BinExpr'> 135485879605856
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879606288
navigating children of <class 'ir.BinExpr'> 135485879606144 3
StatList : new 135485879605904
Lowering <class 'ir.Var'> 135485879605952
StatList : new 135485879755248
Lowering <class 'ir.Const'> 135485879606048
StatList : new 135485879755440
Lowering <class 'ir.BinExpr'> 135485879606144
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879606240
StatList : new 135485879606144
Lowering <class 'ir.AssignStat'> 135485879606240
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879606288
navigating children of <class 'ir.StatList'> 135485879605424 1
navigating children of <class 'ir.PrintStat'> 135485879605616 1
StatList : new 135485879755584
Lowering <class 'ir.Var'> 135485879605520
StatList : new 135485879755824
Lowering <class 'ir.Var'> 135485879605520
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879605616
StatList : new 135485879755968
Lowering <class 'ir.PrintStat'> 135485879605616
Cannot lower 135485879605424 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879606288
StatList : new 135485879756112
Lowering ForStat 135485879606288 into StatList
StatList : new 135485879756400
Lowering <class 'ir.ForStat'> 135485879606288
StatList : new 135485879756304
Lowering <class 'ir.Const'> 135485879606336
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879606432
StatList : new 135485879606336
Lowering <class 'ir.AssignStat'> 135485879606432
navigating children of <class 'ir.PrintStat'> 135485879606528 1
StatList : new 135485879756688
Lowering <class 'ir.Const'> 135485880057088
StatList : new 135485879756880
Lowering <class 'ir.Const'> 135485880057088
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879606528
StatList : new 135485879757024
Lowering <class 'ir.PrintStat'> 135485879606528
navigating children of <class 'ir.BinExpr'> 135485879623744 3
StatList : new 135485879757264
Lowering <class 'ir.Var'> 135485879607200
StatList : new 135485879757360
Lowering <class 'ir.Const'> 135485879606768
StatList : new 135485879757552
Lowering <class 'ir.BinExpr'> 135485879623744
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.BinExpr'> 135485879624032 3
StatList : new 135485879606768
Lowering <class 'ir.Var'> 135485879623840
StatList : new 135485879757744
Lowering <class 'ir.Const'> 135485879623936
StatList : new 135485879757936
Lowering <class 'ir.BinExpr'> 135485879624032
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879624128
StatList : new 135485879624032
Lowering <class 'ir.AssignStat'> 135485879624128
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.StatList'> 135485879606864 1
navigating children of <class 'ir.PrintStat'> 135485879607056 1
StatList : new 135485879758080
Lowering <class 'ir.Var'> 135485879606960
StatList : new 135485879758320
Lowering <class 'ir.Var'> 135485879606960
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879607056
StatList : new 135485879758464
Lowering <class 'ir.PrintStat'> 135485879607056
Cannot lower 135485879606864 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879624176
StatList : new 135485879758608
Lowering ForStat 135485879624176 into StatList
StatList : new 135485879804016
Lowering <class 'ir.ForStat'> 135485879624176
navigating children of <class 'ir.PrintStat'> 135485879624320 1
StatList : new 135485879804160
Lowering <class 'ir.Const'> 135485879624224
StatList : new 135485879804304
Lowering <class 'ir.Const'> 135485879624224
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879624320
StatList : new 135485879804400
Lowering <class 'ir.PrintStat'> 135485879624320
navigating children of <class 'ir.PrintStat'> 135485879624512 1
StatList : new 135485879804640
Lowering <class 'ir.Const'> 135485879624416
StatList : new 135485879804784
Lowering <class 'ir.Const'> 135485879624416
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879624512
StatList : new 135485879804880
Lowering <class 'ir.PrintStat'> 135485879624512
navigating children of <class 'ir.BinExpr'> 135485879625280 3
StatList : new 135485879805120
Lowering <class 'ir.Var'> 135485879625184
StatList : new 135485879805216
Lowering <class 'ir.Const'> 135485879624752
StatList : new 135485879805408
Lowering <class 'ir.BinExpr'> 135485879625280
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.BinExpr'> 135485879625568 3
StatList : new 135485879625328
Lowering <class 'ir.Var'> 135485879625376
StatList : new 135485879805600
Lowering <class 'ir.Const'> 135485879625472
StatList : new 135485879805792
Lowering <class 'ir.BinExpr'> 135485879625568
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625664
StatList : new 135485879625568
Lowering <class 'ir.AssignStat'> 135485879625664
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.StatList'> 135485879624848 1
navigating children of <class 'ir.PrintStat'> 135485879625040 1
StatList : new 135485879805936
Lowering <class 'ir.Var'> 135485879624944
StatList : new 135485879806176
Lowering <class 'ir.Var'> 135485879624944
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879625040
StatList : new 135485879758608
Lowering <class 'ir.PrintStat'> 135485879625040
Cannot lower 135485879624848 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879625712
StatList : new 135485879755536
Lowering ForStat 135485879625712 into StatList
StatList : new 135485879760256
Lowering <class 'ir.ForStat'> 135485879625712
navigating children of <class 'ir.PrintStat'> 135485879625856 1
StatList : new 135485879760304
Lowering <class 'ir.Const'> 135485879625760
StatList : new 135485879760208
Lowering <class 'ir.Const'> 135485879625760
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879625856
StatList : new 135485879760064
Lowering <class 'ir.PrintStat'> 135485879625856
navigating children of <class 'ir.PrintStat'> 135485879626048 1
StatList : new 135485879759632
Lowering <class 'ir.Const'> 135485879625952
StatList : new 135485879739728
Lowering <class 'ir.Const'> 135485879625952
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626048
StatList : new 135485879719968
Lowering <class 'ir.PrintStat'> 135485879626048
navigating children of <class 'ir.BinExpr'> 135485879627008 3
StatList : new 135485879719536
Lowering <class 'ir.Var'> 135485879626912
StatList : new 135485879719776
Lowering <class 'ir.Const'> 135485879626288
StatList : new 135485879719152
Lowering <class 'ir.BinExpr'> 135485879627008
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.BinExpr'> 135485879627296 3
StatList : new 135485879699344
Lowering <class 'ir.Var'> 135485879627104
StatList : new 135485879685072
Lowering <class 'ir.Const'> 135485879627200
StatList : new 135485879627008
Lowering <class 'ir.BinExpr'> 135485879627296
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879627392
StatList : new 135485879627296
Lowering <class 'ir.AssignStat'> 135485879627392
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.StatList'> 135485879626384 2
navigating children of <class 'ir.PrintStat'> 135485879626576 1
StatList : new 135485879626288
Lowering <class 'ir.Const'> 135485879626480
StatList : new 135485879625760
Lowering <class 'ir.Const'> 135485879626480
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626576
StatList : new 135485879624944
Lowering <class 'ir.PrintStat'> 135485879626576
navigating children of <class 'ir.PrintStat'> 135485879626768 1
StatList : new 135485879626528
Lowering <class 'ir.Var'> 135485879626672
StatList : new 135485879606960
Lowering <class 'ir.Var'> 135485879626672
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879626768
StatList : new 135485879605616
Lowering <class 'ir.PrintStat'> 135485879626768
Cannot lower 135485879626384 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879627440
StatList : new 135485879603792
Lowering ForStat 135485879627440 into StatList
StatList : new 135485879604368
Lowering <class 'ir.ForStat'> 135485879627440
navigating children of <class 'ir.PrintStat'> 135485879627584 1
StatList : new 135485879607104
Lowering <class 'ir.Const'> 135485879627488
StatList : new 135485879600944
Lowering <class 'ir.Const'> 135485879627488
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879627584
StatList : new 135485880110768
Lowering <class 'ir.PrintStat'> 135485879627584
navigating children of <class 'ir.PrintStat'> 135485879648320 1
StatList : new 135485880109136
Lowering <class 'ir.Const'> 135485879627680
StatList : new 135485880109808
Lowering <class 'ir.Const'> 135485879627680
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648320
StatList : new 135485880110528
Lowering <class 'ir.PrintStat'> 135485879648320
navigating children of <class 'ir.BinExpr'> 135485879649088 3
StatList : new 135485879806320
Lowering <class 'ir.Var'> 135485879648992
StatList : new 135485879804592
Lowering <class 'ir.Const'> 135485879648560
StatList : new 135485879804208
Lowering <class 'ir.BinExpr'> 135485879649088
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.BinExpr'> 135485879649376 3
StatList : new 135485879649136
Lowering <class 'ir.Var'> 135485879649184
StatList : new 135485879806560
Lowering <class 'ir.Const'> 135485879649280
StatList : new 135485879806752
Lowering <class 'ir.BinExpr'> 135485879649376
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879649472
StatList : new 135485879649376
Lowering <class 'ir.AssignStat'> 135485879649472
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.StatList'> 135485879648656 1
navigating children of <class 'ir.PrintStat'> 135485879648848 1
StatList : new 135485879806896
Lowering <class 'ir.Var'> 135485879648752
StatList : new 135485879807136
Lowering <class 'ir.Var'> 135485879648752
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648848
StatList : new 135485879807280
Lowering <class 'ir.PrintStat'> 135485879648848
Cannot lower 135485879648656 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879649520
StatList : new 135485879807424
Lowering ForStat 135485879649520 into StatList
StatList : new 135485879807712
Lowering <class 'ir.ForStat'> 135485879649520
navigating children of <class 'ir.PrintStat'> 135485879649664 1
StatList : new 135485879807616
Lowering <class 'ir.Const'> 135485879649568
StatList : new 135485879807952
Lowering <class 'ir.Const'> 135485879649568
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879649664
StatList : new 135485879333024
Lowering <class 'ir.PrintStat'> 135485879649664
navigating children of <class 'ir.PrintStat'> 135485879649856 1
StatList : new 135485879333264
Lowering <class 'ir.Const'> 135485879649760
StatList : new 135485879333408
Lowering <class 'ir.Const'> 135485879649760
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879649856
StatList : new 135485879333504
Lowering <class 'ir.PrintStat'> 135485879649856
navigating children of <class 'ir.BinExpr'> 135485879650624 3
StatList : new 135485879333744
Lowering <class 'ir.Var'> 135485879650528
StatList : new 135485879333840
Lowering <class 'ir.Const'> 135485879650096
StatList : new 135485879334032
Lowering <class 'ir.BinExpr'> 135485879650624
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.BinExpr'> 135485879650912 3
StatList : new 135485879650672
Lowering <class 'ir.Var'> 135485879650720
StatList : new 135485879334224
Lowering <class 'ir.Const'> 135485879650816
StatList : new 135485879334416
Lowering <class 'ir.BinExpr'> 135485879650912
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879651008
StatList : new 135485879650912
Lowering <class 'ir.AssignStat'> 135485879651008
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.StatList'> 135485879650192 1
navigating children of <class 'ir.PrintStat'> 135485879650384 1
StatList : new 135485879334560
Lowering <class 'ir.Var'> 135485879650288
StatList : new 135485879334800
Lowering <class 'ir.Var'> 135485879650288
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879650384
StatList : new 135485879334944
Lowering <class 'ir.PrintStat'> 135485879650384
Cannot lower 135485879650192 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879651056
StatList : new 135485879335088
Lowering ForStat 135485879651056 into StatList
StatList : new 135485879335376
Lowering <class 'ir.ForStat'> 135485879651056
navigating children of <class 'ir.PrintStat'> 135485879651200 1
StatList : new 135485879335280
Lowering <class 'ir.Const'> 135485879651104
StatList : new 135485879335664
Lowering <class 'ir.Const'> 135485879651104
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651200
StatList : new 135485879335760
Lowering <class 'ir.PrintStat'> 135485879651200
navigating children of <class 'ir.PrintStat'> 135485879651392 1
StatList : new 135485879336000
Lowering <class 'ir.Const'> 135485879651296
StatList : new 135485879336144
Lowering <class 'ir.Const'> 135485879651296
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651392
StatList : new 135485879336240
Lowering <class 'ir.PrintStat'> 135485879651392
navigating children of <class 'ir.BinExpr'> 135485879652160 3
StatList : new 135485879336480
Lowering <class 'ir.Var'> 135485879652064
StatList : new 135485879336576
Lowering <class 'ir.Const'> 135485879651632
StatList : new 135485879336768
Lowering <class 'ir.BinExpr'> 135485879652160
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.BinExpr'> 135485879644320 3
StatList : new 135485879652208
Lowering <class 'ir.Var'> 135485879652256
StatList : new 135485879336912
Lowering <class 'ir.Const'> 135485879644224
StatList : new 135485879349504
Lowering <class 'ir.BinExpr'> 135485879644320
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879644416
StatList : new 135485879644320
Lowering <class 'ir.AssignStat'> 135485879644416
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.StatList'> 135485879651728 1
navigating children of <class 'ir.PrintStat'> 135485879651920 1
StatList : new 135485879349648
Lowering <class 'ir.Var'> 135485879651824
StatList : new 135485879349888
Lowering <class 'ir.Var'> 135485879651824
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879651920
StatList : new 135485879350032
Lowering <class 'ir.PrintStat'> 135485879651920
Cannot lower 135485879651728 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879644464
StatList : new 135485879350176
Lowering ForStat 135485879644464 into StatList
StatList : new 135485879350464
Lowering <class 'ir.ForStat'> 135485879644464
navigating children of <class 'ir.PrintStat'> 135485879644608 1
StatList : new 135485879350368
Lowering <class 'ir.Const'> 135485879644512
StatList : new 135485879350752
Lowering <class 'ir.Const'> 135485879644512
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879644608
StatList : new 135485879350848
Lowering <class 'ir.PrintStat'> 135485879644608
StatList : new 135485879351040
Lowering <class 'ir.Const'> 135485879644704
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879644800
StatList : new 135485879644704
Lowering <class 'ir.AssignStat'> 135485879644800
navigating children of <class 'ir.PrintStat'> 135485879644896 1
StatList : new 135485879351232
Lowering <class 'ir.Const'> 135485880057760
StatList : new 135485879351424
Lowering <class 'ir.Const'> 135485880057760
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879644896
StatList : new 135485879351520
Lowering <class 'ir.PrintStat'> 135485879644896
navigating children of <class 'ir.BinExpr'> 135485879646192 3
StatList : new 135485879351760
Lowering <class 'ir.Var'> 135485879646096
StatList : new 135485879351856
Lowering <class 'ir.Const'> 135485879645136
StatList : new 135485879352048
Lowering <class 'ir.BinExpr'> 135485879646192
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.BinExpr'> 135485879646480 3
StatList : new 135485879646240
Lowering <class 'ir.Var'> 135485879646288
StatList : new 135485879352240
Lowering <class 'ir.Const'> 135485879646384
StatList : new 135485879352432
Lowering <class 'ir.BinExpr'> 135485879646480
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646576
StatList : new 135485879646480
Lowering <class 'ir.AssignStat'> 135485879646576
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.StatList'> 135485879645232 3
navigating children of <class 'ir.BinExpr'> 135485879645520 3
StatList : new 135485879352576
Lowering <class 'ir.Var'> 135485879645328
StatList : new 135485879352816
Lowering <class 'ir.Var'> 135485879645424
StatList : new 135485879353008
Lowering <class 'ir.BinExpr'> 135485879645520
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879645616
StatList : new 135485879645520
Lowering <class 'ir.AssignStat'> 135485879645616
navigating children of <class 'ir.PrintStat'> 135485879645760 1
StatList : new 135485879353152
Lowering <class 'ir.Var'> 135485879645664
StatList : new 135485879365696
Lowering <class 'ir.Var'> 135485879645664
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879645760
StatList : new 135485879365840
Lowering <class 'ir.PrintStat'> 135485879645760
navigating children of <class 'ir.PrintStat'> 135485879645952 1
StatList : new 135485879366080
Lowering <class 'ir.Var'> 135485879645856
StatList : new 135485879366224
Lowering <class 'ir.Var'> 135485879645856
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879645952
StatList : new 135485879366320
Lowering <class 'ir.PrintStat'> 135485879645952
Cannot lower 135485879645232 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879646624
StatList : new 135485879366464
Lowering ForStat 135485879646624 into StatList
StatList : new 135485879366752
Lowering <class 'ir.ForStat'> 135485879646624
navigating children of <class 'ir.PrintStat'> 135485879646768 1
StatList : new 135485879366656
Lowering <class 'ir.Var'> 135485879646672
StatList : new 135485879367040
Lowering <class 'ir.Var'> 135485879646672
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879646768
StatList : new 135485879367136
Lowering <class 'ir.PrintStat'> 135485879646768
navigating children of <class 'ir.PrintStat'> 135485879646960 1
StatList : new 135485879367376
Lowering <class 'ir.Const'> 135485879646864
StatList : new 135485879367520
Lowering <class 'ir.Const'> 135485879646864
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879646960
StatList : new 135485879367616
Lowering <class 'ir.PrintStat'> 135485879646960
StatList : new 135485879367808
Lowering <class 'ir.Const'> 135485879647056
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879647152
StatList : new 135485879647056
Lowering <class 'ir.AssignStat'> 135485879647152
navigating children of <class 'ir.PrintStat'> 135485879647296 1
StatList : new 135485879368000
Lowering <class 'ir.Const'> 135485879647200
StatList : new 135485879368192
Lowering <class 'ir.Const'> 135485879647200
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879647296
StatList : new 135485879368288
Lowering <class 'ir.PrintStat'> 135485879647296
navigating children of <class 'ir.BinExpr'> 135485879668944 3
StatList : new 135485879368528
Lowering <class 'ir.Var'> 135485879668848
StatList : new 135485879368624
Lowering <class 'ir.Const'> 135485879647536
StatList : new 135485879368816
Lowering <class 'ir.BinExpr'> 135485879668944
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.BinExpr'> 135485879669232 3
StatList : new 135485879647536
Lowering <class 'ir.Var'> 135485879669040
StatList : new 135485879369008
Lowering <class 'ir.Const'> 135485879669136
StatList : new 135485879369200
Lowering <class 'ir.BinExpr'> 135485879669232
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879669328
StatList : new 135485879669232
Lowering <class 'ir.AssignStat'> 135485879669328
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.StatList'> 135485879647632 2
navigating children of <class 'ir.BinExpr'> 135485879647920 3
StatList : new 135485879369344
Lowering <class 'ir.Var'> 135485879647728
StatList : new 135485879369584
Lowering <class 'ir.Var'> 135485879647824
StatList : new 135485879386224
Lowering <class 'ir.BinExpr'> 135485879647920
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648016
StatList : new 135485879647920
Lowering <class 'ir.AssignStat'> 135485879648016
navigating children of <class 'ir.PrintStat'> 135485879648160 1
StatList : new 135485879386368
Lowering <class 'ir.Var'> 135485879648064
StatList : new 135485879386608
Lowering <class 'ir.Var'> 135485879648064
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879648160
StatList : new 135485879386704
Lowering <class 'ir.PrintStat'> 135485879648160
Cannot lower 135485879647632 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879669376
StatList : new 135485879386848
Lowering ForStat 135485879669376 into StatList
StatList : new 135485879387136
Lowering <class 'ir.ForStat'> 135485879669376
navigating children of <class 'ir.PrintStat'> 135485879669520 1
StatList : new 135485879387040
Lowering <class 'ir.Var'> 135485879669424
StatList : new 135485879387424
Lowering <class 'ir.Var'> 135485879669424
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669520
StatList : new 135485879387520
Lowering <class 'ir.PrintStat'> 135485879669520
navigating children of <class 'ir.PrintStat'> 135485879669712 1
StatList : new 135485879387760
Lowering <class 'ir.Const'> 135485879669616
StatList : new 135485879387904
Lowering <class 'ir.Const'> 135485879669616
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669712
StatList : new 135485879388000
Lowering <class 'ir.PrintStat'> 135485879669712
navigating children of <class 'ir.PrintStat'> 135485879669904 1
StatList : new 135485879388240
Lowering <class 'ir.Const'> 135485879669808
StatList : new 135485879388384
Lowering <class 'ir.Const'> 135485879669808
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879669904
StatList : new 135485879388480
Lowering <class 'ir.PrintStat'> 135485879669904
StatList : new 135485879388672
Lowering <class 'ir.Const'> 135485879670000
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879670096
StatList : new 135485879670000
Lowering <class 'ir.AssignStat'> 135485879670096
navigating children of <class 'ir.BinExpr'> 135485879671440 3
StatList : new 135485879388864
Lowering <class 'ir.Var'> 135485879671344
StatList : new 135485879389056
Lowering <class 'ir.Const'> 135485879670240
StatList : new 135485879389248
Lowering <class 'ir.BinExpr'> 135485879671440
successfully navigated attr  cond  of <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.BinExpr'> 135485879671728 3
StatList : new 135485879671488
Lowering <class 'ir.Var'> 135485879671536
StatList : new 135485879389440
Lowering <class 'ir.Const'> 135485879671632
StatList : new 135485879389632
Lowering <class 'ir.BinExpr'> 135485879671728
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879671824
StatList : new 135485879671728
Lowering <class 'ir.AssignStat'> 135485879671824
successfully navigated attr  step  of <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.StatList'> 135485879670336 1
navigating children of <class 'ir.BinExpr'> 135485879671200 3
navigating children of <class 'ir.ArrayElement'> 135485879670864 1
navigating children of <class 'ir.BinExpr'> 135485879670960 3
StatList : new 135485879389776
Lowering <class 'ir.Var'> 135485879670576
StatList : new 135485879390112
Lowering <class 'ir.Const'> 135485879670768
StatList : new 135485879398560
Lowering <class 'ir.BinExpr'> 135485879670960
navigating children of <class 'ir.BinExpr'> 135485879670960 3
navigating children of <class 'ir.StatList'> 135485879389776 1
Cannot lower 135485879389728 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 135485879389776 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879390112 1
Cannot lower 135485879670816 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879390112 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879398752
Lowering <class 'ir.BinExpr'> 135485879670960
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879670864
StatList : new 135485879399280
Lowering <class 'ir.ArrayElement'> 135485879670864
StatList : new 135485879399424
Lowering <class 'ir.Var'> 135485879671056
StatList : new 135485879399616
Lowering <class 'ir.BinExpr'> 135485879671200
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879671296
navigating children of <class 'ir.BinExpr'> 135485879670672 3
StatList : new 135485879399760
Lowering <class 'ir.Var'> 135485879670432
StatList : new 135485879399904
Lowering <class 'ir.Const'> 135485879670480
StatList : new 135485879400096
Lowering <class 'ir.BinExpr'> 135485879670672
successfully navigated attr  offset  of <class 'ir.AssignStat'> 135485879671296
StatList : new 135485879400432
Lowering <class 'ir.AssignStat'> 135485879671296
Cannot lower 135485879670336 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 135485879671872
StatList : new 135485879400768
Lowering ForStat 135485879671872 into StatList
StatList : new 135485879400960
Lowering <class 'ir.ForStat'> 135485879671872
navigating children of <class 'ir.BinExpr'> 135485879672112 3
StatList : new 135485879400864
Lowering <class 'ir.Const'> 135485879671920
StatList : new 135485879401200
Lowering <class 'ir.Const'> 135485879672016
StatList : new 135485879401392
Lowering <class 'ir.BinExpr'> 135485879672112
successfully navigated attr  cond  of <class 'ir.IfStat'> 135485879682192
navigating children of <class 'ir.StatList'> 135485879672208 4
navigating children of <class 'ir.PrintStat'> 135485879672400 1
StatList : new 135485879401488
Lowering <class 'ir.Const'> 135485879672304
StatList : new 135485879401680
Lowering <class 'ir.Const'> 135485879672304
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879672400
StatList : new 135485879401776
Lowering <class 'ir.PrintStat'> 135485879672400
navigating children of <class 'ir.PrintStat'> 135485879681088 1
navigating children of <class 'ir.ArrayElement'> 135485879672640 1
navigating children of <class 'ir.BinExpr'> 135485879672736 3
StatList : new 135485879402016
Lowering <class 'ir.Const'> 135485879672496
StatList : new 135485879402208
Lowering <class 'ir.Const'> 135485879672544
StatList : new 135485879402400
Lowering <class 'ir.BinExpr'> 135485879672736
navigating children of <class 'ir.BinExpr'> 135485879672736 3
navigating children of <class 'ir.StatList'> 135485879402016 1
Cannot lower 135485879401968 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402016 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879402208 1
Cannot lower 135485879672592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402208 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879427184
Lowering <class 'ir.BinExpr'> 135485879672736
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879672640
StatList : new 135485879427760
Lowering <class 'ir.ArrayElement'> 135485879672640
navigating children of <class 'ir.ArrayElement'> 135485879672640 1
navigating children of <class 'ir.StatList'> 135485879402400 3
navigating children of <class 'ir.StatList'> 135485879402016 1
Cannot lower 135485879401968 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402016 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879402208 1
Cannot lower 135485879672592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402208 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879402160 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879402400 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879427184 3
navigating children of <class 'ir.StatList'> 135485879402016 1
Cannot lower 135485879401968 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402016 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879402208 1
Cannot lower 135485879672592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879402208 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879427136 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879427184 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879672640
StatList : new 135485879428192
Lowering <class 'ir.ArrayElement'> 135485879672640
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879681088
StatList : new 135485879428432
Lowering <class 'ir.PrintStat'> 135485879681088
navigating children of <class 'ir.PrintStat'> 135485879681568 1
navigating children of <class 'ir.ArrayElement'> 135485879681376 1
navigating children of <class 'ir.BinExpr'> 135485879681472 3
StatList : new 135485879428624
Lowering <class 'ir.Const'> 135485879681232
StatList : new 135485879428912
Lowering <class 'ir.Const'> 135485879681280
StatList : new 135485879429104
Lowering <class 'ir.BinExpr'> 135485879681472
navigating children of <class 'ir.BinExpr'> 135485879681472 3
navigating children of <class 'ir.StatList'> 135485879428624 1
Cannot lower 135485879428576 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428624 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879428912 1
Cannot lower 135485879681328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428912 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879429296
Lowering <class 'ir.BinExpr'> 135485879681472
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681376
StatList : new 135485879429824
Lowering <class 'ir.ArrayElement'> 135485879681376
navigating children of <class 'ir.ArrayElement'> 135485879681376 1
navigating children of <class 'ir.StatList'> 135485879429104 3
navigating children of <class 'ir.StatList'> 135485879428624 1
Cannot lower 135485879428576 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428624 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879428912 1
Cannot lower 135485879681328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428912 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879428864 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879429104 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879429296 3
navigating children of <class 'ir.StatList'> 135485879428624 1
Cannot lower 135485879428576 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428624 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879428912 1
Cannot lower 135485879681328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879428912 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879429248 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879429296 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681376
StatList : new 135485879430256
Lowering <class 'ir.ArrayElement'> 135485879681376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879681568
StatList : new 135485879430400
Lowering <class 'ir.PrintStat'> 135485879681568
navigating children of <class 'ir.PrintStat'> 135485879682048 1
navigating children of <class 'ir.ArrayElement'> 135485879681856 1
navigating children of <class 'ir.BinExpr'> 135485879681952 3
StatList : new 135485879430640
Lowering <class 'ir.Const'> 135485879681712
StatList : new 135485879430928
Lowering <class 'ir.Const'> 135485879681760
StatList : new 135485879431120
Lowering <class 'ir.BinExpr'> 135485879681952
navigating children of <class 'ir.BinExpr'> 135485879681952 3
navigating children of <class 'ir.StatList'> 135485879430640 1
Cannot lower 135485879430592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430640 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879430928 1
Cannot lower 135485879681808 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430928 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 135485879439568
Lowering <class 'ir.BinExpr'> 135485879681952
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681856
StatList : new 135485879440096
Lowering <class 'ir.ArrayElement'> 135485879681856
navigating children of <class 'ir.ArrayElement'> 135485879681856 1
navigating children of <class 'ir.StatList'> 135485879431120 3
navigating children of <class 'ir.StatList'> 135485879430640 1
Cannot lower 135485879430592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430640 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879430928 1
Cannot lower 135485879681808 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430928 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879430880 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879431120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879439568 3
navigating children of <class 'ir.StatList'> 135485879430640 1
Cannot lower 135485879430592 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430640 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 135485879430928 1
Cannot lower 135485879681808 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 135485879430928 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 135485879439520 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 135485879439568 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 135485879681856
StatList : new 135485879440528
Lowering <class 'ir.ArrayElement'> 135485879681856
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879682048
StatList : new 135485879440672
Lowering <class 'ir.PrintStat'> 135485879682048
Cannot lower 135485879672208 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 135485879682192
StatList : new 135485879440816
Lowering <class 'ir.IfStat'> 135485879682192
navigating children of <class 'ir.PrintStat'> 135485879682336 1
StatList : new 135485879441152
Lowering <class 'ir.Const'> 135485879682240
StatList : new 135485879441344
Lowering <class 'ir.Const'> 135485879682240
successfully navigated attr  expr  of <class 'ir.PrintStat'> 135485879682336
StatList : new 135485879441440
Lowering <class 'ir.PrintStat'> 135485879682336
Cannot lower 135485880108464 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432
Cannot lower 135485879682432 <class 'ir.Block'> 'Block' object has no attribute 'lower'

--- IR Tree After Lowering ---
<class 'ir.Block'> 135485879682432 {
                                                                      <<<<<----- BUG? MISSING PARENT
	global_symtab: 	SymbolTable:
	
	defs: 	<class 'ir.DefinitionList'> 135485880629952 {
	parent = 135485879682432
		children:
		<class 'ir.FunctionDef'> 135485880108368 {
		parent = 135485880629952
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 135485880056608 {
			parent = 135485880108368
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
				defs: 	<class 'ir.DefinitionList'> 135485880107648 {
				parent = 135485880056608
				}
				body: 	<class 'ir.StatList'> 135485880107792 {
				parent = 135485880056608
					children:
					<class 'ir.StatList'> 135485880107936 {
					parent = 135485880107792
						children:
						<class 'ir.StatList'> 135485879682816 {
						parent = 135485880107936
							children:
							reg int t0 <- 1234
						}
						auto int test <- reg int t0
					}
					<class 'ir.StatList'> 135485880108224 {
					parent = 135485880107792
						children:
						<class 'ir.StatList'> 135485879683296 {
						parent = 135485880108224
							children:
							<class 'ir.StatList'> 135485879682960 {
							parent = 135485879683296
								children:
								reg int t1 <- global int x
							}
							<class 'ir.StatList'> 135485879683104 {
							parent = 135485879683296
								children:
								reg int t2 <- global int x
							}
							reg int32_t t3 <- reg int t1 times reg int t2
						}
						global int squ <- reg int32_t t3
					}
				}
			}
		}
	}
	body: 	<class 'ir.StatList'> 135485880108464 {
	parent = 135485879682432
		children:
		<class 'ir.StatList'> 135485880108656 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879683632 {
			parent = 135485880108656
				children:
				<class 'ir.StatList'> 135485879682720 {
				parent = 135485879683632
					children:
					reg int t4 <- 1
				}
				reg int t5 <- minus reg int t4
			}
			global int x <- reg int t5
		}
		<class 'ir.StatList'> 135485880056416 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879683728 {
			parent = 135485880056416
				children:
				read reg int t6
			}
			global int x <- reg int t6
		}
		<class 'ir.StatList'> 135485879697952 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879684304 {
			parent = 135485879697952
				children:
				<class 'ir.StatList'> 135485879683968 {
				parent = 135485879684304
					children:
					reg int t7 <- global int x
				}
				<class 'ir.StatList'> 135485879684112 {
				parent = 135485879684304
					children:
					reg int t8 <- 100
				}
				reg int32_t t9 <- reg int t7 gtr reg int t8
			}
			branch on reg int32_t t9 to auto label label2
			<class 'ir.StatList'> 135485880109568 {
			parent = 135485879697952
				children:
				<class 'ir.StatList'> 135485879684688 {
				parent = 135485880109568
					children:
					<class 'ir.StatList'> 135485879684592 {
					parent = 135485879684688
						children:
						reg int t11 <- global int x
					}
					print reg int t11
				}
			}
			branch  to auto label label1
			label2: <class 'ir.StatList'> 135485880109184 {
			parent = 135485879697952
				children:
				<class 'ir.StatList'> 135485879697520 {
				parent = 135485880109184
					children:
					<class 'ir.StatList'> 135485880109280 {
					parent = 135485879697520
						children:
						<class 'ir.StatList'> 135485879684928 {
						parent = 135485880109280
							children:
							reg int t12 <- global int x
						}
						reg int t14 <- minus reg int t12
					}
					print reg int t14
				}
			}
			label1: <class 'ir.EmptyStat'> 135485880109376 {
			parent = 135485879697952
			}
		}
		<class 'ir.StatList'> 135485880109904 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879698144 {
			parent = 135485880109904
				children:
				reg int t15 <- 1
			}
			global int x <- reg int t15
		}
		<class 'ir.StatList'> 135485879699920 {
		parent = 135485880108464
			children:
			label3: <class 'ir.StatList'> 135485879698672 {
			parent = 135485879699920
				children:
				<class 'ir.StatList'> 135485879698336 {
				parent = 135485879698672
					children:
					reg int t16 <- global int x
				}
				<class 'ir.StatList'> 135485879698480 {
				parent = 135485879698672
					children:
					reg int t17 <- 10
				}
				reg int32_t t18 <- reg int t16 leq reg int t17
			}
			branch on not reg int32_t t18 to auto label label4
			<class 'ir.StatList'> 135485880110336 {
			parent = 135485879699920
				children:
				call  to auto function square
				<class 'ir.StatList'> 135485880110816 {
				parent = 135485880110336
					children:
					<class 'ir.StatList'> 135485879699152 {
					parent = 135485880110816
						children:
						<class 'ir.StatList'> 135485879698816 {
						parent = 135485879699152
							children:
							reg int t19 <- global int x
						}
						<class 'ir.StatList'> 135485879698960 {
						parent = 135485879699152
							children:
							reg int t20 <- 1
						}
						reg int32_t t21 <- reg int t19 plus reg int t20
					}
					global int x <- reg int32_t t21
				}
				<class 'ir.StatList'> 135485879699584 {
				parent = 135485880110336
					children:
					<class 'ir.StatList'> 135485879699488 {
					parent = 135485879699584
						children:
						reg int t23 <- global int squ
					}
					print reg int t23
				}
			}
			branch  to auto label label3
			label4: <class 'ir.EmptyStat'> 135485880111008 {
			parent = 135485879699920
			}
		}
		<class 'ir.StatList'> 135485879599264 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879700112 {
			parent = 135485879599264
				children:
				reg int t24 <- 101
			}
			global int x <- reg int t24
		}
		<class 'ir.StatList'> 135485879721456 {
		parent = 135485880108464
			children:
			label5: <class 'ir.StatList'> 135485879700640 {
			parent = 135485879721456
				children:
				<class 'ir.StatList'> 135485879700304 {
				parent = 135485879700640
					children:
					reg int t25 <- global int x
				}
				<class 'ir.StatList'> 135485879700448 {
				parent = 135485879700640
					children:
					reg int t26 <- 105
				}
				reg int32_t t27 <- reg int t25 leq reg int t26
			}
			branch on not reg int32_t t27 to auto label label6
			<class 'ir.StatList'> 135485879599696 {
			parent = 135485879721456
				children:
				<class 'ir.StatList'> 135485879718240 {
				parent = 135485879599696
					children:
					<class 'ir.StatList'> 135485879599648 {
					parent = 135485879718240
						children:
						reg int t28 <- global int x
					}
					<class 'ir.StatList'> 135485879701456 {
					parent = 135485879718240
						children:
						<class 'ir.StatList'> 135485879701216 {
						parent = 135485879701456
							children:
							<class 'ir.StatList'> 135485879700832 {
							parent = 135485879701216
								children:
								reg int t29 <- global int x
							}
							<class 'ir.StatList'> 135485879701024 {
							parent = 135485879701216
								children:
								reg int t30 <- 100
							}
							reg int32_t t31 <- reg int t29 minus reg int t30
						}
						<class 'ir.StatList'> 135485879600080 {
						parent = 135485879701456
							children:
							reg int t32 <- 1
						}
						reg int32_t t33 <- reg int32_t t31 times reg int t32
					}
					reg &char t34 <- &(global char[5] arr)
					reg &char t35 <- reg &char t34 plus reg int32_t t33
					[reg &char t35] <- reg int t28
				}
				<class 'ir.StatList'> 135485879720544 {
				parent = 135485879599696
					children:
					<class 'ir.StatList'> 135485879720400 {
					parent = 135485879720544
						children:
						<class 'ir.StatList'> 135485879718528 {
						parent = 135485879720400
							children:
							<class 'ir.StatList'> 135485879719008 {
							parent = 135485879718528
								children:
								<class 'ir.StatList'> 135485879718480 {
								parent = 135485879719008
									children:
									reg int t36 <- global int x
								}
								<class 'ir.StatList'> 135485879718816 {
								parent = 135485879719008
									children:
									reg int t37 <- 100
								}
								reg int32_t t38 <- reg int t36 minus reg int t37
							}
							<class 'ir.StatList'> 135485879600656 {
							parent = 135485879718528
								children:
								reg int t39 <- 1
							}
							reg int32_t t41 <- reg int32_t t38 times reg int t39
						}
						reg &char t46 <- &(global char[5] arr)
						reg &char t47 <- reg &char t46 plus reg int32_t t41
						reg char t45 <- [reg &char t47]
					}
					print reg char t45
				}
				<class 'ir.StatList'> 135485879601232 {
				parent = 135485879599696
					children:
					<class 'ir.StatList'> 135485879721168 {
					parent = 135485879601232
						children:
						<class 'ir.StatList'> 135485879720784 {
						parent = 135485879721168
							children:
							reg int t48 <- global int x
						}
						<class 'ir.StatList'> 135485879720976 {
						parent = 135485879721168
							children:
							reg int t49 <- 1
						}
						reg int32_t t50 <- reg int t48 plus reg int t49
					}
					global int x <- reg int32_t t50
				}
			}
			branch  to auto label label5
			label6: <class 'ir.EmptyStat'> 135485879601184 {
			parent = 135485879721456
			}
		}
		<class 'ir.StatList'> 135485879601424 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879721648 {
			parent = 135485879601424
				children:
				reg int t51 <- 1
			}
			global int x <- reg int t51
		}
		<class 'ir.StatList'> 135485879601568 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879721840 {
			parent = 135485879601568
				children:
				reg int t52 <- 1
			}
			global int y <- reg int t52
		}
		<class 'ir.StatList'> 135485879762656 {
		parent = 135485880108464
			children:
			label9: <class 'ir.StatList'> 135485879738816 {
			parent = 135485879762656
				children:
				<class 'ir.StatList'> 135485879738480 {
				parent = 135485879738816
					children:
					reg int t53 <- global int x
				}
				<class 'ir.StatList'> 135485879738624 {
				parent = 135485879738816
					children:
					reg int t54 <- 5
				}
				reg int32_t t55 <- reg int t53 leq reg int t54
			}
			branch on not reg int32_t t55 to auto label label10
			<class 'ir.StatList'> 135485879601952 {
			parent = 135485879762656
				children:
				<class 'ir.StatList'> 135485879762320 {
				parent = 135485879601952
					children:
					label7: <class 'ir.StatList'> 135485879739248 {
					parent = 135485879762320
						children:
						<class 'ir.StatList'> 135485879738912 {
						parent = 135485879739248
							children:
							reg int t56 <- global int y
						}
						<class 'ir.StatList'> 135485879739056 {
						parent = 135485879739248
							children:
							reg int t57 <- 5
						}
						reg int32_t t58 <- reg int t56 leq reg int t57
					}
					branch on not reg int32_t t58 to auto label label8
					<class 'ir.StatList'> 135485879602336 {
					parent = 135485879762320
						children:
						<class 'ir.StatList'> 135485879741840 {
						parent = 135485879602336
							children:
							<class 'ir.StatList'> 135485879740448 {
							parent = 135485879741840
								children:
								<class 'ir.StatList'> 135485879739920 {
								parent = 135485879740448
									children:
									<class 'ir.StatList'> 135485879739392 {
									parent = 135485879739920
										children:
										reg int t59 <- global int x
									}
									<class 'ir.StatList'> 135485879739536 {
									parent = 135485879739920
										children:
										reg int t60 <- 1
									}
									reg int32_t t62 <- reg int t59 times reg int t60
								}
								reg &char t64 <- &(global char[5] arr)
								reg &char t65 <- reg &char t64 plus reg int32_t t62
								reg char t63 <- [reg &char t65]
							}
							<class 'ir.StatList'> 135485879741552 {
							parent = 135485879741840
								children:
								<class 'ir.StatList'> 135485879740976 {
								parent = 135485879741552
									children:
									<class 'ir.StatList'> 135485879740592 {
									parent = 135485879740976
										children:
										reg int t66 <- global int x
									}
									<class 'ir.StatList'> 135485879740784 {
									parent = 135485879740976
										children:
										reg int t67 <- 10
									}
									reg int32_t t68 <- reg int t66 times reg int t67
								}
								<class 'ir.StatList'> 135485879741360 {
								parent = 135485879741552
									children:
									<class 'ir.StatList'> 135485879602816 {
									parent = 135485879741360
										children:
										reg int t69 <- global int y
									}
									<class 'ir.StatList'> 135485879741072 {
									parent = 135485879741360
										children:
										reg int t70 <- 2
									}
									reg int32_t t71 <- reg int t69 times reg int t70
								}
								reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
							}
							reg &short t73 <- &(global short[5, 5] multid)
							reg &short t74 <- reg &short t73 plus reg int32_t t72
							[reg &short t74] <- reg char t63
						}
						<class 'ir.StatList'> 135485879760880 {
						parent = 135485879602336
							children:
							<class 'ir.StatList'> 135485879760736 {
							parent = 135485879760880
								children:
								<class 'ir.StatList'> 135485879759776 {
								parent = 135485879760736
									children:
									<class 'ir.StatList'> 135485879759056 {
									parent = 135485879759776
										children:
										<class 'ir.StatList'> 135485879742080 {
										parent = 135485879759056
											children:
											reg int t75 <- global int x
										}
										<class 'ir.StatList'> 135485879742416 {
										parent = 135485879759056
											children:
											reg int t76 <- 10
										}
										reg int32_t t77 <- reg int t75 times reg int t76
									}
									<class 'ir.StatList'> 135485879759440 {
									parent = 135485879759776
										children:
										<class 'ir.StatList'> 135485879603936 {
										parent = 135485879759440
											children:
											reg int t78 <- global int y
										}
										<class 'ir.StatList'> 135485879759152 {
										parent = 135485879759440
											children:
											reg int t79 <- 2
										}
										reg int32_t t80 <- reg int t78 times reg int t79
									}
									reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
								}
								reg &short t87 <- &(global short[5, 5] multid)
								reg &short t88 <- reg &short t87 plus reg int32_t t82
								reg short t86 <- [reg &short t88]
							}
							print reg short t86
						}
						<class 'ir.StatList'> 135485879604608 {
						parent = 135485879602336
							children:
							<class 'ir.StatList'> 135485879761504 {
							parent = 135485879604608
								children:
								<class 'ir.StatList'> 135485879761120 {
								parent = 135485879761504
									children:
									reg int t89 <- global int x
								}
								<class 'ir.StatList'> 135485879761312 {
								parent = 135485879761504
									children:
									reg int t90 <- 1
								}
								reg int32_t t91 <- reg int t89 plus reg int t90
							}
							global int x <- reg int32_t t91
						}
						<class 'ir.StatList'> 135485879604944 {
						parent = 135485879602336
							children:
							<class 'ir.StatList'> 135485879761984 {
							parent = 135485879604944
								children:
								<class 'ir.StatList'> 135485879761648 {
								parent = 135485879761984
									children:
									reg int t92 <- global int y
								}
								<class 'ir.StatList'> 135485879761792 {
								parent = 135485879761984
									children:
									reg int t93 <- 1
								}
								reg int32_t t94 <- reg int t92 plus reg int t93
							}
							global int y <- reg int32_t t94
						}
					}
					branch  to auto label label7
					label8: <class 'ir.EmptyStat'> 135485879762080 {
					parent = 135485879762320
					}
				}
			}
			branch  to auto label label9
			label10: <class 'ir.EmptyStat'> 135485879762464 {
			parent = 135485879762656
			}
		}
		<class 'ir.StatList'> 135485879756400 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879605712 {
			parent = 135485879756400
				symbol: 	auto int a
				expr: 	<class 'ir.Const'> 135485879605232 {
				parent = 135485879605712
					value: 	10
					symbol: 	None
				}
				offset: 	None
			}
			label11: <class 'ir.StatList'> 135485879755056 {
			parent = 135485879756400
				children:
				<class 'ir.StatList'> 135485879762848 {
				parent = 135485879755056
					children:
					reg int t95 <- auto int a
				}
				<class 'ir.StatList'> 135485879754864 {
				parent = 135485879755056
					children:
					reg int t96 <- 20
				}
				reg int32_t t97 <- reg int t95 leq reg int t96
			}
			branch on not reg int32_t t97 to auto label label13
			<class 'ir.StatList'> 135485879755968 {
			parent = 135485879756400
				children:
				<class 'ir.StatList'> 135485879755824 {
				parent = 135485879755968
					children:
					reg int t102 <- auto int a
				}
				print reg int t102
			}
			<class 'ir.StatList'> 135485879755440 {
			parent = 135485879756400
				children:
				<class 'ir.StatList'> 135485879605904 {
				parent = 135485879755440
					children:
					reg int t98 <- auto int a
				}
				<class 'ir.StatList'> 135485879755248 {
				parent = 135485879755440
					children:
					reg int t99 <- 1
				}
				reg int32_t t100 <- reg int t98 plus reg int t99
			}
			auto int a <- reg int32_t t100
			branch  to auto label label11
			label13: <class 'ir.EmptyStat'> 135485879756160 {
			parent = 135485879756400
			}
		}
		<class 'ir.StatList'> 135485879606336 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879756304 {
			parent = 135485879606336
				children:
				reg int t103 <- 10
			}
			global int i <- reg int t103
		}
		<class 'ir.StatList'> 135485879757024 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879756880 {
			parent = 135485879757024
				children:
				reg int t105 <- 99991
			}
			print reg int t105
		}
		<class 'ir.StatList'> 135485879804016 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879607152 {
			parent = 135485879804016
				symbol: 	auto int i
				expr: 	<class 'ir.Const'> 135485879606672 {
				parent = 135485879607152
					value: 	10
					symbol: 	None
				}
				offset: 	None
			}
			label14: <class 'ir.StatList'> 135485879757552 {
			parent = 135485879804016
				children:
				<class 'ir.StatList'> 135485879757264 {
				parent = 135485879757552
					children:
					reg int t106 <- auto int i
				}
				<class 'ir.StatList'> 135485879757360 {
				parent = 135485879757552
					children:
					reg int t107 <- 15
				}
				reg int32_t t108 <- reg int t106 leq reg int t107
			}
			branch on not reg int32_t t108 to auto label label16
			<class 'ir.StatList'> 135485879758464 {
			parent = 135485879804016
				children:
				<class 'ir.StatList'> 135485879758320 {
				parent = 135485879758464
					children:
					reg int t113 <- global int i
				}
				print reg int t113
			}
			<class 'ir.StatList'> 135485879757936 {
			parent = 135485879804016
				children:
				<class 'ir.StatList'> 135485879606768 {
				parent = 135485879757936
					children:
					reg int t109 <- auto int i
				}
				<class 'ir.StatList'> 135485879757744 {
				parent = 135485879757936
					children:
					reg int t110 <- 1
				}
				reg int32_t t111 <- reg int t109 plus reg int t110
			}
			auto int i <- reg int32_t t111
			branch  to auto label label14
			label16: <class 'ir.EmptyStat'> 135485879758656 {
			parent = 135485879804016
			}
		}
		<class 'ir.StatList'> 135485879804400 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879804304 {
			parent = 135485879804400
				children:
				reg int t115 <- 88881
			}
			print reg int t115
		}
		<class 'ir.StatList'> 135485879804880 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879804784 {
			parent = 135485879804880
				children:
				reg int t117 <- 99992
			}
			print reg int t117
		}
		<class 'ir.StatList'> 135485879760256 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879625136 {
			parent = 135485879760256
				symbol: 	auto int j
				expr: 	<class 'ir.Const'> 135485879624656 {
				parent = 135485879625136
					value: 	5
					symbol: 	None
				}
				offset: 	None
			}
			label17: <class 'ir.StatList'> 135485879805408 {
			parent = 135485879760256
				children:
				<class 'ir.StatList'> 135485879805120 {
				parent = 135485879805408
					children:
					reg int t118 <- auto int j
				}
				<class 'ir.StatList'> 135485879805216 {
				parent = 135485879805408
					children:
					reg int t119 <- 5
				}
				reg int32_t t120 <- reg int t118 leq reg int t119
			}
			branch on not reg int32_t t120 to auto label label19
			<class 'ir.StatList'> 135485879758608 {
			parent = 135485879760256
				children:
				<class 'ir.StatList'> 135485879806176 {
				parent = 135485879758608
					children:
					reg int t125 <- global int j
				}
				print reg int t125
			}
			<class 'ir.StatList'> 135485879805792 {
			parent = 135485879760256
				children:
				<class 'ir.StatList'> 135485879625328 {
				parent = 135485879805792
					children:
					reg int t121 <- auto int j
				}
				<class 'ir.StatList'> 135485879805600 {
				parent = 135485879805792
					children:
					reg int t122 <- 1
				}
				reg int32_t t123 <- reg int t121 plus reg int t122
			}
			auto int j <- reg int32_t t123
			branch  to auto label label17
			label19: <class 'ir.EmptyStat'> 135485879756688 {
			parent = 135485879760256
			}
		}
		<class 'ir.StatList'> 135485879760064 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879760208 {
			parent = 135485879760064
				children:
				reg int t127 <- 88882
			}
			print reg int t127
		}
		<class 'ir.StatList'> 135485879719968 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879739728 {
			parent = 135485879719968
				children:
				reg int t129 <- 99993
			}
			print reg int t129
		}
		<class 'ir.StatList'> 135485879604368 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879626864 {
			parent = 135485879604368
				symbol: 	auto int k
				expr: 	<class 'ir.Const'> 135485879626192 {
				parent = 135485879626864
					value: 	10
					symbol: 	None
				}
				offset: 	None
			}
			label20: <class 'ir.StatList'> 135485879719152 {
			parent = 135485879604368
				children:
				<class 'ir.StatList'> 135485879719536 {
				parent = 135485879719152
					children:
					reg int t130 <- auto int k
				}
				<class 'ir.StatList'> 135485879719776 {
				parent = 135485879719152
					children:
					reg int t131 <- 5
				}
				reg int32_t t132 <- reg int t130 leq reg int t131
			}
			branch on not reg int32_t t132 to auto label label22
			<class 'ir.StatList'> 135485879624944 {
			parent = 135485879604368
				children:
				<class 'ir.StatList'> 135485879625760 {
				parent = 135485879624944
					children:
					reg int t137 <- 77777
				}
				print reg int t137
			}
			<class 'ir.StatList'> 135485879605616 {
			parent = 135485879604368
				children:
				<class 'ir.StatList'> 135485879606960 {
				parent = 135485879605616
					children:
					reg int t139 <- global int k
				}
				print reg int t139
			}
			<class 'ir.StatList'> 135485879627008 {
			parent = 135485879604368
				children:
				<class 'ir.StatList'> 135485879699344 {
				parent = 135485879627008
					children:
					reg int t133 <- auto int k
				}
				<class 'ir.StatList'> 135485879685072 {
				parent = 135485879627008
					children:
					reg int t134 <- 1
				}
				reg int32_t t135 <- reg int t133 plus reg int t134
			}
			auto int k <- reg int32_t t135
			branch  to auto label label20
			label22: <class 'ir.EmptyStat'> 135485879603984 {
			parent = 135485879604368
			}
		}
		<class 'ir.StatList'> 135485880110768 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879600944 {
			parent = 135485880110768
				children:
				reg int t141 <- 88883
			}
			print reg int t141
		}
		<class 'ir.StatList'> 135485880110528 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485880109808 {
			parent = 135485880110528
				children:
				reg int t143 <- 99994
			}
			print reg int t143
		}
		<class 'ir.StatList'> 135485879807712 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879648944 {
			parent = 135485879807712
				symbol: 	auto int m
				expr: 	<class 'ir.Const'> 135485879648464 {
				parent = 135485879648944
					value: 	1
					symbol: 	None
				}
				offset: 	None
			}
			label23: <class 'ir.StatList'> 135485879804208 {
			parent = 135485879807712
				children:
				<class 'ir.StatList'> 135485879806320 {
				parent = 135485879804208
					children:
					reg int t144 <- auto int m
				}
				<class 'ir.StatList'> 135485879804592 {
				parent = 135485879804208
					children:
					reg int t145 <- 6
				}
				reg int32_t t146 <- reg int t144 leq reg int t145
			}
			branch on not reg int32_t t146 to auto label label25
			<class 'ir.StatList'> 135485879807280 {
			parent = 135485879807712
				children:
				<class 'ir.StatList'> 135485879807136 {
				parent = 135485879807280
					children:
					reg int t151 <- global int m
				}
				print reg int t151
			}
			<class 'ir.StatList'> 135485879806752 {
			parent = 135485879807712
				children:
				<class 'ir.StatList'> 135485879649136 {
				parent = 135485879806752
					children:
					reg int t147 <- auto int m
				}
				<class 'ir.StatList'> 135485879806560 {
				parent = 135485879806752
					children:
					reg int t148 <- 1
				}
				reg int32_t t149 <- reg int t147 plus reg int t148
			}
			auto int m <- reg int32_t t149
			branch  to auto label label23
			label25: <class 'ir.EmptyStat'> 135485879807472 {
			parent = 135485879807712
			}
		}
		<class 'ir.StatList'> 135485879333024 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879807952 {
			parent = 135485879333024
				children:
				reg int t153 <- 88884
			}
			print reg int t153
		}
		<class 'ir.StatList'> 135485879333504 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879333408 {
			parent = 135485879333504
				children:
				reg int t155 <- 99995
			}
			print reg int t155
		}
		<class 'ir.StatList'> 135485879335376 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879650480 {
			parent = 135485879335376
				symbol: 	auto int n
				expr: 	<class 'ir.Const'> 135485879650000 {
				parent = 135485879650480
					value: 	1
					symbol: 	None
				}
				offset: 	None
			}
			label26: <class 'ir.StatList'> 135485879334032 {
			parent = 135485879335376
				children:
				<class 'ir.StatList'> 135485879333744 {
				parent = 135485879334032
					children:
					reg int t156 <- auto int n
				}
				<class 'ir.StatList'> 135485879333840 {
				parent = 135485879334032
					children:
					reg int t157 <- 7
				}
				reg int32_t t158 <- reg int t156 leq reg int t157
			}
			branch on not reg int32_t t158 to auto label label28
			<class 'ir.StatList'> 135485879334944 {
			parent = 135485879335376
				children:
				<class 'ir.StatList'> 135485879334800 {
				parent = 135485879334944
					children:
					reg int t163 <- global int n
				}
				print reg int t163
			}
			<class 'ir.StatList'> 135485879334416 {
			parent = 135485879335376
				children:
				<class 'ir.StatList'> 135485879650672 {
				parent = 135485879334416
					children:
					reg int t159 <- auto int n
				}
				<class 'ir.StatList'> 135485879334224 {
				parent = 135485879334416
					children:
					reg int t160 <- 1
				}
				reg int32_t t161 <- reg int t159 plus reg int t160
			}
			auto int n <- reg int32_t t161
			branch  to auto label label26
			label28: <class 'ir.EmptyStat'> 135485879335136 {
			parent = 135485879335376
			}
		}
		<class 'ir.StatList'> 135485879335760 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879335664 {
			parent = 135485879335760
				children:
				reg int t165 <- 88885
			}
			print reg int t165
		}
		<class 'ir.StatList'> 135485879336240 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879336144 {
			parent = 135485879336240
				children:
				reg int t167 <- 99996
			}
			print reg int t167
		}
		<class 'ir.StatList'> 135485879350464 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879652016 {
			parent = 135485879350464
				symbol: 	auto int p
				expr: 	<class 'ir.Const'> 135485879651536 {
				parent = 135485879652016
					value: 	10
					symbol: 	None
				}
				offset: 	None
			}
			label29: <class 'ir.StatList'> 135485879336768 {
			parent = 135485879350464
				children:
				<class 'ir.StatList'> 135485879336480 {
				parent = 135485879336768
					children:
					reg int t168 <- auto int p
				}
				<class 'ir.StatList'> 135485879336576 {
				parent = 135485879336768
					children:
					reg int t169 <- 12
				}
				reg int32_t t170 <- reg int t168 leq reg int t169
			}
			branch on not reg int32_t t170 to auto label label31
			<class 'ir.StatList'> 135485879350032 {
			parent = 135485879350464
				children:
				<class 'ir.StatList'> 135485879349888 {
				parent = 135485879350032
					children:
					reg int t175 <- global int p
				}
				print reg int t175
			}
			<class 'ir.StatList'> 135485879349504 {
			parent = 135485879350464
				children:
				<class 'ir.StatList'> 135485879652208 {
				parent = 135485879349504
					children:
					reg int t171 <- auto int p
				}
				<class 'ir.StatList'> 135485879336912 {
				parent = 135485879349504
					children:
					reg int t172 <- 1
				}
				reg int32_t t173 <- reg int t171 plus reg int t172
			}
			auto int p <- reg int32_t t173
			branch  to auto label label29
			label31: <class 'ir.EmptyStat'> 135485879350224 {
			parent = 135485879350464
			}
		}
		<class 'ir.StatList'> 135485879350848 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879350752 {
			parent = 135485879350848
				children:
				reg int t177 <- 88886
			}
			print reg int t177
		}
		<class 'ir.StatList'> 135485879644704 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879351040 {
			parent = 135485879644704
				children:
				reg int t178 <- 0
			}
			global int sum <- reg int t178
		}
		<class 'ir.StatList'> 135485879351520 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879351424 {
			parent = 135485879351520
				children:
				reg int t180 <- 99997
			}
			print reg int t180
		}
		<class 'ir.StatList'> 135485879366752 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879646048 {
			parent = 135485879366752
				symbol: 	auto int q
				expr: 	<class 'ir.Const'> 135485879645040 {
				parent = 135485879646048
					value: 	1
					symbol: 	None
				}
				offset: 	None
			}
			label32: <class 'ir.StatList'> 135485879352048 {
			parent = 135485879366752
				children:
				<class 'ir.StatList'> 135485879351760 {
				parent = 135485879352048
					children:
					reg int t181 <- auto int q
				}
				<class 'ir.StatList'> 135485879351856 {
				parent = 135485879352048
					children:
					reg int t182 <- 5
				}
				reg int32_t t183 <- reg int t181 leq reg int t182
			}
			branch on not reg int32_t t183 to auto label label34
			<class 'ir.StatList'> 135485879645520 {
			parent = 135485879366752
				children:
				<class 'ir.StatList'> 135485879353008 {
				parent = 135485879645520
					children:
					<class 'ir.StatList'> 135485879352576 {
					parent = 135485879353008
						children:
						reg int t187 <- global int sum
					}
					<class 'ir.StatList'> 135485879352816 {
					parent = 135485879353008
						children:
						reg int t188 <- global int q
					}
					reg int32_t t189 <- reg int t187 plus reg int t188
				}
				global int sum <- reg int32_t t189
			}
			<class 'ir.StatList'> 135485879365840 {
			parent = 135485879366752
				children:
				<class 'ir.StatList'> 135485879365696 {
				parent = 135485879365840
					children:
					reg int t191 <- global int q
				}
				print reg int t191
			}
			<class 'ir.StatList'> 135485879366320 {
			parent = 135485879366752
				children:
				<class 'ir.StatList'> 135485879366224 {
				parent = 135485879366320
					children:
					reg int t193 <- global int sum
				}
				print reg int t193
			}
			<class 'ir.StatList'> 135485879352432 {
			parent = 135485879366752
				children:
				<class 'ir.StatList'> 135485879646240 {
				parent = 135485879352432
					children:
					reg int t184 <- auto int q
				}
				<class 'ir.StatList'> 135485879352240 {
				parent = 135485879352432
					children:
					reg int t185 <- 1
				}
				reg int32_t t186 <- reg int t184 plus reg int t185
			}
			auto int q <- reg int32_t t186
			branch  to auto label label32
			label34: <class 'ir.EmptyStat'> 135485879366512 {
			parent = 135485879366752
			}
		}
		<class 'ir.StatList'> 135485879367136 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879367040 {
			parent = 135485879367136
				children:
				reg int t195 <- global int sum
			}
			print reg int t195
		}
		<class 'ir.StatList'> 135485879367616 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879367520 {
			parent = 135485879367616
				children:
				reg int t197 <- 88887
			}
			print reg int t197
		}
		<class 'ir.StatList'> 135485879647056 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879367808 {
			parent = 135485879647056
				children:
				reg int t198 <- 100
			}
			global int x <- reg int t198
		}
		<class 'ir.StatList'> 135485879368288 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879368192 {
			parent = 135485879368288
				children:
				reg int t200 <- 99998
			}
			print reg int t200
		}
		<class 'ir.StatList'> 135485879387136 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485879668800 {
			parent = 135485879387136
				symbol: 	auto int r
				expr: 	<class 'ir.Const'> 135485879647440 {
				parent = 135485879668800
					value: 	1
					symbol: 	None
				}
				offset: 	None
			}
			label35: <class 'ir.StatList'> 135485879368816 {
			parent = 135485879387136
				children:
				<class 'ir.StatList'> 135485879368528 {
				parent = 135485879368816
					children:
					reg int t201 <- auto int r
				}
				<class 'ir.StatList'> 135485879368624 {
				parent = 135485879368816
					children:
					reg int t202 <- 3
				}
				reg int32_t t203 <- reg int t201 leq reg int t202
			}
			branch on not reg int32_t t203 to auto label label37
			<class 'ir.StatList'> 135485879647920 {
			parent = 135485879387136
				children:
				<class 'ir.StatList'> 135485879386224 {
				parent = 135485879647920
					children:
					<class 'ir.StatList'> 135485879369344 {
					parent = 135485879386224
						children:
						reg int t207 <- global int x
					}
					<class 'ir.StatList'> 135485879369584 {
					parent = 135485879386224
						children:
						reg int t208 <- global int r
					}
					reg int32_t t209 <- reg int t207 plus reg int t208
				}
				global int x <- reg int32_t t209
			}
			<class 'ir.StatList'> 135485879386704 {
			parent = 135485879387136
				children:
				<class 'ir.StatList'> 135485879386608 {
				parent = 135485879386704
					children:
					reg int t211 <- global int x
				}
				print reg int t211
			}
			<class 'ir.StatList'> 135485879369200 {
			parent = 135485879387136
				children:
				<class 'ir.StatList'> 135485879647536 {
				parent = 135485879369200
					children:
					reg int t204 <- auto int r
				}
				<class 'ir.StatList'> 135485879369008 {
				parent = 135485879369200
					children:
					reg int t205 <- 1
				}
				reg int32_t t206 <- reg int t204 plus reg int t205
			}
			auto int r <- reg int32_t t206
			branch  to auto label label35
			label37: <class 'ir.EmptyStat'> 135485879386896 {
			parent = 135485879387136
			}
		}
		<class 'ir.StatList'> 135485879387520 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879387424 {
			parent = 135485879387520
				children:
				reg int t213 <- global int x
			}
			print reg int t213
		}
		<class 'ir.StatList'> 135485879388000 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879387904 {
			parent = 135485879388000
				children:
				reg int t215 <- 88888
			}
			print reg int t215
		}
		<class 'ir.StatList'> 135485879388480 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879388384 {
			parent = 135485879388480
				children:
				reg int t217 <- 999990
			}
			print reg int t217
		}
		<class 'ir.StatList'> 135485879670000 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879388672 {
			parent = 135485879670000
				children:
				reg int t218 <- 0
			}
			global int sm_idx <- reg int t218
		}
		<class 'ir.StatList'> 135485879400960 {
		parent = 135485880108464
			children:
			<class 'ir.AssignStat'> 135485880107552 {
			parent = 135485879400960
				symbol: 	auto int sm_idx
				expr: 	<class 'ir.Const'> 135485879670144 {
				parent = 135485880107552
					value: 	0
					symbol: 	None
				}
				offset: 	None
			}
			label38: <class 'ir.StatList'> 135485879389248 {
			parent = 135485879400960
				children:
				<class 'ir.StatList'> 135485879388864 {
				parent = 135485879389248
					children:
					reg int t219 <- auto int sm_idx
				}
				<class 'ir.StatList'> 135485879389056 {
				parent = 135485879389248
					children:
					reg int t220 <- 127
				}
				reg int32_t t221 <- reg int t219 leq reg int t220
			}
			branch on not reg int32_t t221 to auto label label40
			<class 'ir.StatList'> 135485879400432 {
			parent = 135485879400960
				children:
				<class 'ir.StatList'> 135485879399616 {
				parent = 135485879400432
					children:
					<class 'ir.StatList'> 135485879399280 {
					parent = 135485879399616
						children:
						<class 'ir.StatList'> 135485879398752 {
						parent = 135485879399280
							children:
							<class 'ir.StatList'> 135485879389776 {
							parent = 135485879398752
								children:
								reg int t225 <- global int sm_idx
							}
							<class 'ir.StatList'> 135485879390112 {
							parent = 135485879398752
								children:
								reg int t226 <- 4
							}
							reg int32_t t228 <- reg int t225 times reg int t226
						}
						reg &int t230 <- &(global int[128] sm_source_arr)
						reg &int t231 <- reg &int t230 plus reg int32_t t228
						reg int t229 <- [reg &int t231]
					}
					<class 'ir.StatList'> 135485879399424 {
					parent = 135485879399616
						children:
						reg int t232 <- global int sm_idx
					}
					reg int32_t t233 <- reg int t229 plus reg int t232
				}
				<class 'ir.StatList'> 135485879400096 {
				parent = 135485879400432
					children:
					<class 'ir.StatList'> 135485879399760 {
					parent = 135485879400096
						children:
						reg int t234 <- global int sm_idx
					}
					<class 'ir.StatList'> 135485879399904 {
					parent = 135485879400096
						children:
						reg int t235 <- 4
					}
					reg int32_t t236 <- reg int t234 times reg int t235
				}
				reg &int t237 <- &(global int[128] sm_dest_arr)
				reg &int t238 <- reg &int t237 plus reg int32_t t236
				[reg &int t238] <- reg int32_t t233
			}
			<class 'ir.StatList'> 135485879389632 {
			parent = 135485879400960
				children:
				<class 'ir.StatList'> 135485879671488 {
				parent = 135485879389632
					children:
					reg int t222 <- auto int sm_idx
				}
				<class 'ir.StatList'> 135485879389440 {
				parent = 135485879389632
					children:
					reg int t223 <- 1
				}
				reg int32_t t224 <- reg int t222 plus reg int t223
			}
			auto int sm_idx <- reg int32_t t224
			branch  to auto label label38
			label40: <class 'ir.EmptyStat'> 135485879400576 {
			parent = 135485879400960
			}
		}
		<class 'ir.StatList'> 135485879440816 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879401392 {
			parent = 135485879440816
				children:
				<class 'ir.StatList'> 135485879400864 {
				parent = 135485879401392
					children:
					reg int t239 <- 127
				}
				<class 'ir.StatList'> 135485879401200 {
				parent = 135485879401392
					children:
					reg int t240 <- 0
				}
				reg int32_t t241 <- reg int t239 geq reg int t240
			}
			branch on not reg int32_t t241 to auto label label41
			<class 'ir.StatList'> 135485879672208 {
			parent = 135485879440816
				children:
				<class 'ir.StatList'> 135485879401776 {
				parent = 135485879672208
					children:
					<class 'ir.StatList'> 135485879401680 {
					parent = 135485879401776
						children:
						reg int t243 <- 76543
					}
					print reg int t243
				}
				<class 'ir.StatList'> 135485879428432 {
				parent = 135485879672208
					children:
					<class 'ir.StatList'> 135485879428192 {
					parent = 135485879428432
						children:
						<class 'ir.StatList'> 135485879427184 {
						parent = 135485879428192
							children:
							<class 'ir.StatList'> 135485879402016 {
							parent = 135485879427184
								children:
								reg int t244 <- 0
							}
							<class 'ir.StatList'> 135485879402208 {
							parent = 135485879427184
								children:
								reg int t245 <- 4
							}
							reg int32_t t247 <- reg int t244 times reg int t245
						}
						reg &int t252 <- &(global int[128] sm_dest_arr)
						reg &int t253 <- reg &int t252 plus reg int32_t t247
						reg int t251 <- [reg &int t253]
					}
					print reg int t251
				}
				<class 'ir.StatList'> 135485879430400 {
				parent = 135485879672208
					children:
					<class 'ir.StatList'> 135485879430256 {
					parent = 135485879430400
						children:
						<class 'ir.StatList'> 135485879429296 {
						parent = 135485879430256
							children:
							<class 'ir.StatList'> 135485879428624 {
							parent = 135485879429296
								children:
								reg int t254 <- 64
							}
							<class 'ir.StatList'> 135485879428912 {
							parent = 135485879429296
								children:
								reg int t255 <- 4
							}
							reg int32_t t257 <- reg int t254 times reg int t255
						}
						reg &int t262 <- &(global int[128] sm_dest_arr)
						reg &int t263 <- reg &int t262 plus reg int32_t t257
						reg int t261 <- [reg &int t263]
					}
					print reg int t261
				}
				<class 'ir.StatList'> 135485879440672 {
				parent = 135485879672208
					children:
					<class 'ir.StatList'> 135485879440528 {
					parent = 135485879440672
						children:
						<class 'ir.StatList'> 135485879439568 {
						parent = 135485879440528
							children:
							<class 'ir.StatList'> 135485879430640 {
							parent = 135485879439568
								children:
								reg int t264 <- 127
							}
							<class 'ir.StatList'> 135485879430928 {
							parent = 135485879439568
								children:
								reg int t265 <- 4
							}
							reg int32_t t267 <- reg int t264 times reg int t265
						}
						reg &int t272 <- &(global int[128] sm_dest_arr)
						reg &int t273 <- reg &int t272 plus reg int32_t t267
						reg int t271 <- [reg &int t273]
					}
					print reg int t271
				}
			}
			label41: <class 'ir.EmptyStat'> 135485879440864 {
			parent = 135485879440816
			}
		}
		<class 'ir.StatList'> 135485879441440 {
		parent = 135485880108464
			children:
			<class 'ir.StatList'> 135485879441344 {
			parent = 135485879441440
				children:
				reg int t275 <- 888880
			}
			print reg int t275
		}
	}
}
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 2
navigating children of <class 'ir.StatList'> 135485880107936 2
navigating children of <class 'ir.StatList'> 135485879682816 1
navigating children of <class 'ir.StatList'> 135485880108224 2
navigating children of <class 'ir.StatList'> 135485879683296 3
navigating children of <class 'ir.StatList'> 135485879682960 1
navigating children of <class 'ir.StatList'> 135485879683104 1
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 45
navigating children of <class 'ir.StatList'> 135485880108656 2
navigating children of <class 'ir.StatList'> 135485879683632 2
navigating children of <class 'ir.StatList'> 135485879682720 1
navigating children of <class 'ir.StatList'> 135485880056416 2
navigating children of <class 'ir.StatList'> 135485879683728 1
navigating children of <class 'ir.StatList'> 135485879697952 6
navigating children of <class 'ir.StatList'> 135485879684304 3
navigating children of <class 'ir.StatList'> 135485879683968 1
navigating children of <class 'ir.StatList'> 135485879684112 1
navigating children of <class 'ir.StatList'> 135485880109568 1
navigating children of <class 'ir.StatList'> 135485879684688 2
navigating children of <class 'ir.StatList'> 135485879684592 1
navigating children of <class 'ir.StatList'> 135485880109184 1
navigating children of <class 'ir.StatList'> 135485879697520 2
navigating children of <class 'ir.StatList'> 135485880109280 2
navigating children of <class 'ir.StatList'> 135485879684928 1
navigating children of <class 'ir.StatList'> 135485880109904 2
navigating children of <class 'ir.StatList'> 135485879698144 1
navigating children of <class 'ir.StatList'> 135485879699920 5
navigating children of <class 'ir.StatList'> 135485879698672 3
navigating children of <class 'ir.StatList'> 135485879698336 1
navigating children of <class 'ir.StatList'> 135485879698480 1
navigating children of <class 'ir.StatList'> 135485880110336 3
navigating children of <class 'ir.StatList'> 135485880110816 2
navigating children of <class 'ir.StatList'> 135485879699152 3
navigating children of <class 'ir.StatList'> 135485879698816 1
navigating children of <class 'ir.StatList'> 135485879698960 1
navigating children of <class 'ir.StatList'> 135485879699584 2
navigating children of <class 'ir.StatList'> 135485879699488 1
navigating children of <class 'ir.StatList'> 135485879599264 2
navigating children of <class 'ir.StatList'> 135485879700112 1
navigating children of <class 'ir.StatList'> 135485879721456 5
navigating children of <class 'ir.StatList'> 135485879700640 3
navigating children of <class 'ir.StatList'> 135485879700304 1
navigating children of <class 'ir.StatList'> 135485879700448 1
navigating children of <class 'ir.StatList'> 135485879599696 3
navigating children of <class 'ir.StatList'> 135485879718240 5
navigating children of <class 'ir.StatList'> 135485879599648 1
navigating children of <class 'ir.StatList'> 135485879701456 3
navigating children of <class 'ir.StatList'> 135485879701216 3
navigating children of <class 'ir.StatList'> 135485879700832 1
navigating children of <class 'ir.StatList'> 135485879701024 1
navigating children of <class 'ir.StatList'> 135485879600080 1
navigating children of <class 'ir.StatList'> 135485879720544 2
navigating children of <class 'ir.StatList'> 135485879720400 4
navigating children of <class 'ir.StatList'> 135485879718528 3
navigating children of <class 'ir.StatList'> 135485879719008 3
navigating children of <class 'ir.StatList'> 135485879718480 1
navigating children of <class 'ir.StatList'> 135485879718816 1
navigating children of <class 'ir.StatList'> 135485879600656 1
navigating children of <class 'ir.StatList'> 135485879601232 2
navigating children of <class 'ir.StatList'> 135485879721168 3
navigating children of <class 'ir.StatList'> 135485879720784 1
navigating children of <class 'ir.StatList'> 135485879720976 1
navigating children of <class 'ir.StatList'> 135485879601424 2
navigating children of <class 'ir.StatList'> 135485879721648 1
navigating children of <class 'ir.StatList'> 135485879601568 2
navigating children of <class 'ir.StatList'> 135485879721840 1
navigating children of <class 'ir.StatList'> 135485879762656 5
navigating children of <class 'ir.StatList'> 135485879738816 3
navigating children of <class 'ir.StatList'> 135485879738480 1
navigating children of <class 'ir.StatList'> 135485879738624 1
navigating children of <class 'ir.StatList'> 135485879601952 1
navigating children of <class 'ir.StatList'> 135485879762320 5
navigating children of <class 'ir.StatList'> 135485879739248 3
navigating children of <class 'ir.StatList'> 135485879738912 1
navigating children of <class 'ir.StatList'> 135485879739056 1
navigating children of <class 'ir.StatList'> 135485879602336 4
navigating children of <class 'ir.StatList'> 135485879741840 5
navigating children of <class 'ir.StatList'> 135485879740448 4
navigating children of <class 'ir.StatList'> 135485879739920 3
navigating children of <class 'ir.StatList'> 135485879739392 1
navigating children of <class 'ir.StatList'> 135485879739536 1
navigating children of <class 'ir.StatList'> 135485879741552 3
navigating children of <class 'ir.StatList'> 135485879740976 3
navigating children of <class 'ir.StatList'> 135485879740592 1
navigating children of <class 'ir.StatList'> 135485879740784 1
navigating children of <class 'ir.StatList'> 135485879741360 3
navigating children of <class 'ir.StatList'> 135485879602816 1
navigating children of <class 'ir.StatList'> 135485879741072 1
navigating children of <class 'ir.StatList'> 135485879760880 2
navigating children of <class 'ir.StatList'> 135485879760736 4
navigating children of <class 'ir.StatList'> 135485879759776 3
navigating children of <class 'ir.StatList'> 135485879759056 3
navigating children of <class 'ir.StatList'> 135485879742080 1
navigating children of <class 'ir.StatList'> 135485879742416 1
navigating children of <class 'ir.StatList'> 135485879759440 3
navigating children of <class 'ir.StatList'> 135485879603936 1
navigating children of <class 'ir.StatList'> 135485879759152 1
navigating children of <class 'ir.StatList'> 135485879604608 2
navigating children of <class 'ir.StatList'> 135485879761504 3
navigating children of <class 'ir.StatList'> 135485879761120 1
navigating children of <class 'ir.StatList'> 135485879761312 1
navigating children of <class 'ir.StatList'> 135485879604944 2
navigating children of <class 'ir.StatList'> 135485879761984 3
navigating children of <class 'ir.StatList'> 135485879761648 1
navigating children of <class 'ir.StatList'> 135485879761792 1
navigating children of <class 'ir.StatList'> 135485879756400 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605712
navigating children of <class 'ir.StatList'> 135485879755056 3
navigating children of <class 'ir.StatList'> 135485879762848 1
navigating children of <class 'ir.StatList'> 135485879754864 1
navigating children of <class 'ir.StatList'> 135485879755968 2
navigating children of <class 'ir.StatList'> 135485879755824 1
navigating children of <class 'ir.StatList'> 135485879755440 3
navigating children of <class 'ir.StatList'> 135485879605904 1
navigating children of <class 'ir.StatList'> 135485879755248 1
navigating children of <class 'ir.StatList'> 135485879606336 2
navigating children of <class 'ir.StatList'> 135485879756304 1
navigating children of <class 'ir.StatList'> 135485879757024 2
navigating children of <class 'ir.StatList'> 135485879756880 1
navigating children of <class 'ir.StatList'> 135485879804016 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879607152
navigating children of <class 'ir.StatList'> 135485879757552 3
navigating children of <class 'ir.StatList'> 135485879757264 1
navigating children of <class 'ir.StatList'> 135485879757360 1
navigating children of <class 'ir.StatList'> 135485879758464 2
navigating children of <class 'ir.StatList'> 135485879758320 1
navigating children of <class 'ir.StatList'> 135485879757936 3
navigating children of <class 'ir.StatList'> 135485879606768 1
navigating children of <class 'ir.StatList'> 135485879757744 1
navigating children of <class 'ir.StatList'> 135485879804400 2
navigating children of <class 'ir.StatList'> 135485879804304 1
navigating children of <class 'ir.StatList'> 135485879804880 2
navigating children of <class 'ir.StatList'> 135485879804784 1
navigating children of <class 'ir.StatList'> 135485879760256 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625136
navigating children of <class 'ir.StatList'> 135485879805408 3
navigating children of <class 'ir.StatList'> 135485879805120 1
navigating children of <class 'ir.StatList'> 135485879805216 1
navigating children of <class 'ir.StatList'> 135485879758608 2
navigating children of <class 'ir.StatList'> 135485879806176 1
navigating children of <class 'ir.StatList'> 135485879805792 3
navigating children of <class 'ir.StatList'> 135485879625328 1
navigating children of <class 'ir.StatList'> 135485879805600 1
navigating children of <class 'ir.StatList'> 135485879760064 2
navigating children of <class 'ir.StatList'> 135485879760208 1
navigating children of <class 'ir.StatList'> 135485879719968 2
navigating children of <class 'ir.StatList'> 135485879739728 1
navigating children of <class 'ir.StatList'> 135485879604368 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879626864
navigating children of <class 'ir.StatList'> 135485879719152 3
navigating children of <class 'ir.StatList'> 135485879719536 1
navigating children of <class 'ir.StatList'> 135485879719776 1
navigating children of <class 'ir.StatList'> 135485879624944 2
navigating children of <class 'ir.StatList'> 135485879625760 1
navigating children of <class 'ir.StatList'> 135485879605616 2
navigating children of <class 'ir.StatList'> 135485879606960 1
navigating children of <class 'ir.StatList'> 135485879627008 3
navigating children of <class 'ir.StatList'> 135485879699344 1
navigating children of <class 'ir.StatList'> 135485879685072 1
navigating children of <class 'ir.StatList'> 135485880110768 2
navigating children of <class 'ir.StatList'> 135485879600944 1
navigating children of <class 'ir.StatList'> 135485880110528 2
navigating children of <class 'ir.StatList'> 135485880109808 1
navigating children of <class 'ir.StatList'> 135485879807712 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648944
navigating children of <class 'ir.StatList'> 135485879804208 3
navigating children of <class 'ir.StatList'> 135485879806320 1
navigating children of <class 'ir.StatList'> 135485879804592 1
navigating children of <class 'ir.StatList'> 135485879807280 2
navigating children of <class 'ir.StatList'> 135485879807136 1
navigating children of <class 'ir.StatList'> 135485879806752 3
navigating children of <class 'ir.StatList'> 135485879649136 1
navigating children of <class 'ir.StatList'> 135485879806560 1
navigating children of <class 'ir.StatList'> 135485879333024 2
navigating children of <class 'ir.StatList'> 135485879807952 1
navigating children of <class 'ir.StatList'> 135485879333504 2
navigating children of <class 'ir.StatList'> 135485879333408 1
navigating children of <class 'ir.StatList'> 135485879335376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879650480
navigating children of <class 'ir.StatList'> 135485879334032 3
navigating children of <class 'ir.StatList'> 135485879333744 1
navigating children of <class 'ir.StatList'> 135485879333840 1
navigating children of <class 'ir.StatList'> 135485879334944 2
navigating children of <class 'ir.StatList'> 135485879334800 1
navigating children of <class 'ir.StatList'> 135485879334416 3
navigating children of <class 'ir.StatList'> 135485879650672 1
navigating children of <class 'ir.StatList'> 135485879334224 1
navigating children of <class 'ir.StatList'> 135485879335760 2
navigating children of <class 'ir.StatList'> 135485879335664 1
navigating children of <class 'ir.StatList'> 135485879336240 2
navigating children of <class 'ir.StatList'> 135485879336144 1
navigating children of <class 'ir.StatList'> 135485879350464 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879652016
navigating children of <class 'ir.StatList'> 135485879336768 3
navigating children of <class 'ir.StatList'> 135485879336480 1
navigating children of <class 'ir.StatList'> 135485879336576 1
navigating children of <class 'ir.StatList'> 135485879350032 2
navigating children of <class 'ir.StatList'> 135485879349888 1
navigating children of <class 'ir.StatList'> 135485879349504 3
navigating children of <class 'ir.StatList'> 135485879652208 1
navigating children of <class 'ir.StatList'> 135485879336912 1
navigating children of <class 'ir.StatList'> 135485879350848 2
navigating children of <class 'ir.StatList'> 135485879350752 1
navigating children of <class 'ir.StatList'> 135485879644704 2
navigating children of <class 'ir.StatList'> 135485879351040 1
navigating children of <class 'ir.StatList'> 135485879351520 2
navigating children of <class 'ir.StatList'> 135485879351424 1
navigating children of <class 'ir.StatList'> 135485879366752 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646048
navigating children of <class 'ir.StatList'> 135485879352048 3
navigating children of <class 'ir.StatList'> 135485879351760 1
navigating children of <class 'ir.StatList'> 135485879351856 1
navigating children of <class 'ir.StatList'> 135485879645520 2
navigating children of <class 'ir.StatList'> 135485879353008 3
navigating children of <class 'ir.StatList'> 135485879352576 1
navigating children of <class 'ir.StatList'> 135485879352816 1
navigating children of <class 'ir.StatList'> 135485879365840 2
navigating children of <class 'ir.StatList'> 135485879365696 1
navigating children of <class 'ir.StatList'> 135485879366320 2
navigating children of <class 'ir.StatList'> 135485879366224 1
navigating children of <class 'ir.StatList'> 135485879352432 3
navigating children of <class 'ir.StatList'> 135485879646240 1
navigating children of <class 'ir.StatList'> 135485879352240 1
navigating children of <class 'ir.StatList'> 135485879367136 2
navigating children of <class 'ir.StatList'> 135485879367040 1
navigating children of <class 'ir.StatList'> 135485879367616 2
navigating children of <class 'ir.StatList'> 135485879367520 1
navigating children of <class 'ir.StatList'> 135485879647056 2
navigating children of <class 'ir.StatList'> 135485879367808 1
navigating children of <class 'ir.StatList'> 135485879368288 2
navigating children of <class 'ir.StatList'> 135485879368192 1
navigating children of <class 'ir.StatList'> 135485879387136 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879668800
navigating children of <class 'ir.StatList'> 135485879368816 3
navigating children of <class 'ir.StatList'> 135485879368528 1
navigating children of <class 'ir.StatList'> 135485879368624 1
navigating children of <class 'ir.StatList'> 135485879647920 2
navigating children of <class 'ir.StatList'> 135485879386224 3
navigating children of <class 'ir.StatList'> 135485879369344 1
navigating children of <class 'ir.StatList'> 135485879369584 1
navigating children of <class 'ir.StatList'> 135485879386704 2
navigating children of <class 'ir.StatList'> 135485879386608 1
navigating children of <class 'ir.StatList'> 135485879369200 3
navigating children of <class 'ir.StatList'> 135485879647536 1
navigating children of <class 'ir.StatList'> 135485879369008 1
navigating children of <class 'ir.StatList'> 135485879387520 2
navigating children of <class 'ir.StatList'> 135485879387424 1
navigating children of <class 'ir.StatList'> 135485879388000 2
navigating children of <class 'ir.StatList'> 135485879387904 1
navigating children of <class 'ir.StatList'> 135485879388480 2
navigating children of <class 'ir.StatList'> 135485879388384 1
navigating children of <class 'ir.StatList'> 135485879670000 2
navigating children of <class 'ir.StatList'> 135485879388672 1
navigating children of <class 'ir.StatList'> 135485879400960 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880107552
navigating children of <class 'ir.StatList'> 135485879389248 3
navigating children of <class 'ir.StatList'> 135485879388864 1
navigating children of <class 'ir.StatList'> 135485879389056 1
navigating children of <class 'ir.StatList'> 135485879400432 5
navigating children of <class 'ir.StatList'> 135485879399616 3
navigating children of <class 'ir.StatList'> 135485879399280 4
navigating children of <class 'ir.StatList'> 135485879398752 3
navigating children of <class 'ir.StatList'> 135485879389776 1
navigating children of <class 'ir.StatList'> 135485879390112 1
navigating children of <class 'ir.StatList'> 135485879399424 1
navigating children of <class 'ir.StatList'> 135485879400096 3
navigating children of <class 'ir.StatList'> 135485879399760 1
navigating children of <class 'ir.StatList'> 135485879399904 1
navigating children of <class 'ir.StatList'> 135485879389632 3
navigating children of <class 'ir.StatList'> 135485879671488 1
navigating children of <class 'ir.StatList'> 135485879389440 1
navigating children of <class 'ir.StatList'> 135485879440816 4
navigating children of <class 'ir.StatList'> 135485879401392 3
navigating children of <class 'ir.StatList'> 135485879400864 1
navigating children of <class 'ir.StatList'> 135485879401200 1
navigating children of <class 'ir.StatList'> 135485879672208 4
navigating children of <class 'ir.StatList'> 135485879401776 2
navigating children of <class 'ir.StatList'> 135485879401680 1
navigating children of <class 'ir.StatList'> 135485879428432 2
navigating children of <class 'ir.StatList'> 135485879428192 4
navigating children of <class 'ir.StatList'> 135485879427184 3
navigating children of <class 'ir.StatList'> 135485879402016 1
navigating children of <class 'ir.StatList'> 135485879402208 1
navigating children of <class 'ir.StatList'> 135485879430400 2
navigating children of <class 'ir.StatList'> 135485879430256 4
navigating children of <class 'ir.StatList'> 135485879429296 3
navigating children of <class 'ir.StatList'> 135485879428624 1
navigating children of <class 'ir.StatList'> 135485879428912 1
navigating children of <class 'ir.StatList'> 135485879440672 2
navigating children of <class 'ir.StatList'> 135485879440528 4
navigating children of <class 'ir.StatList'> 135485879439568 3
navigating children of <class 'ir.StatList'> 135485879430640 1
navigating children of <class 'ir.StatList'> 135485879430928 1
navigating children of <class 'ir.StatList'> 135485879441440 2
navigating children of <class 'ir.StatList'> 135485879441344 1
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432

--- Navigating: Applying Flattening ---
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 2
navigating children of <class 'ir.StatList'> 135485880107936 2
navigating children of <class 'ir.StatList'> 135485879682816 1
Flattening 135485879682816 into 135485880107936
Flattening <class 'ir.StatList'> 135485879682816
Flattening 135485880107936 into 135485880107792
Flattening <class 'ir.StatList'> 135485880107936
navigating children of <class 'ir.StatList'> 135485880108224 2
navigating children of <class 'ir.StatList'> 135485879683296 3
navigating children of <class 'ir.StatList'> 135485879682960 1
Flattening 135485879682960 into 135485879683296
Flattening <class 'ir.StatList'> 135485879682960
navigating children of <class 'ir.StatList'> 135485879683104 1
Flattening 135485879683104 into 135485879683296
Flattening <class 'ir.StatList'> 135485879683104
Flattening 135485879683296 into 135485880108224
Flattening <class 'ir.StatList'> 135485879683296
Flattening 135485880108224 into 135485880107792
Flattening <class 'ir.StatList'> 135485880108224
Not flattening 135485880107792 into 135485880056608 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 135485880107792
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 45
navigating children of <class 'ir.StatList'> 135485880108656 2
navigating children of <class 'ir.StatList'> 135485879683632 2
navigating children of <class 'ir.StatList'> 135485879682720 1
Flattening 135485879682720 into 135485879683632
Flattening <class 'ir.StatList'> 135485879682720
Flattening 135485879683632 into 135485880108656
Flattening <class 'ir.StatList'> 135485879683632
Flattening 135485880108656 into 135485880108464
Flattening <class 'ir.StatList'> 135485880108656
navigating children of <class 'ir.StatList'> 135485880056416 2
navigating children of <class 'ir.StatList'> 135485879683728 1
Flattening 135485879683728 into 135485880056416
Flattening <class 'ir.StatList'> 135485879683728
Flattening 135485880056416 into 135485880108464
Flattening <class 'ir.StatList'> 135485880056416
navigating children of <class 'ir.StatList'> 135485879697952 6
navigating children of <class 'ir.StatList'> 135485879684304 3
navigating children of <class 'ir.StatList'> 135485879683968 1
Flattening 135485879683968 into 135485879684304
Flattening <class 'ir.StatList'> 135485879683968
navigating children of <class 'ir.StatList'> 135485879684112 1
Flattening 135485879684112 into 135485879684304
Flattening <class 'ir.StatList'> 135485879684112
Flattening 135485879684304 into 135485879697952
Flattening <class 'ir.StatList'> 135485879684304
navigating children of <class 'ir.StatList'> 135485880109568 1
navigating children of <class 'ir.StatList'> 135485879684688 2
navigating children of <class 'ir.StatList'> 135485879684592 1
Flattening 135485879684592 into 135485879684688
Flattening <class 'ir.StatList'> 135485879684592
Flattening 135485879684688 into 135485880109568
Flattening <class 'ir.StatList'> 135485879684688
Flattening 135485880109568 into 135485879697952
Flattening <class 'ir.StatList'> 135485880109568
navigating children of <class 'ir.StatList'> 135485880109184 1
navigating children of <class 'ir.StatList'> 135485879697520 2
navigating children of <class 'ir.StatList'> 135485880109280 2
navigating children of <class 'ir.StatList'> 135485879684928 1
Flattening 135485879684928 into 135485880109280
Flattening <class 'ir.StatList'> 135485879684928
Flattening 135485880109280 into 135485879697520
Flattening <class 'ir.StatList'> 135485880109280
Flattening 135485879697520 into 135485880109184
Flattening <class 'ir.StatList'> 135485879697520
Flattening 135485880109184 into 135485879697952
Flattening <class 'ir.StatList'> 135485880109184
Flattening 135485879697952 into 135485880108464
Flattening <class 'ir.StatList'> 135485879697952
navigating children of <class 'ir.StatList'> 135485880109904 2
navigating children of <class 'ir.StatList'> 135485879698144 1
Flattening 135485879698144 into 135485880109904
Flattening <class 'ir.StatList'> 135485879698144
Flattening 135485880109904 into 135485880108464
Flattening <class 'ir.StatList'> 135485880109904
navigating children of <class 'ir.StatList'> 135485879699920 5
navigating children of <class 'ir.StatList'> 135485879698672 3
navigating children of <class 'ir.StatList'> 135485879698336 1
Flattening 135485879698336 into 135485879698672
Flattening <class 'ir.StatList'> 135485879698336
navigating children of <class 'ir.StatList'> 135485879698480 1
Flattening 135485879698480 into 135485879698672
Flattening <class 'ir.StatList'> 135485879698480
Flattening 135485879698672 into 135485879699920
Flattening <class 'ir.StatList'> 135485879698672
navigating children of <class 'ir.StatList'> 135485880110336 3
navigating children of <class 'ir.StatList'> 135485880110816 2
navigating children of <class 'ir.StatList'> 135485879699152 3
navigating children of <class 'ir.StatList'> 135485879698816 1
Flattening 135485879698816 into 135485879699152
Flattening <class 'ir.StatList'> 135485879698816
navigating children of <class 'ir.StatList'> 135485879698960 1
Flattening 135485879698960 into 135485879699152
Flattening <class 'ir.StatList'> 135485879698960
Flattening 135485879699152 into 135485880110816
Flattening <class 'ir.StatList'> 135485879699152
Flattening 135485880110816 into 135485880110336
Flattening <class 'ir.StatList'> 135485880110816
navigating children of <class 'ir.StatList'> 135485879699584 2
navigating children of <class 'ir.StatList'> 135485879699488 1
Flattening 135485879699488 into 135485879699584
Flattening <class 'ir.StatList'> 135485879699488
Flattening 135485879699584 into 135485880110336
Flattening <class 'ir.StatList'> 135485879699584
Flattening 135485880110336 into 135485879699920
Flattening <class 'ir.StatList'> 135485880110336
Flattening 135485879699920 into 135485880108464
Flattening <class 'ir.StatList'> 135485879699920
navigating children of <class 'ir.StatList'> 135485879599264 2
navigating children of <class 'ir.StatList'> 135485879700112 1
Flattening 135485879700112 into 135485879599264
Flattening <class 'ir.StatList'> 135485879700112
Flattening 135485879599264 into 135485880108464
Flattening <class 'ir.StatList'> 135485879599264
navigating children of <class 'ir.StatList'> 135485879721456 5
navigating children of <class 'ir.StatList'> 135485879700640 3
navigating children of <class 'ir.StatList'> 135485879700304 1
Flattening 135485879700304 into 135485879700640
Flattening <class 'ir.StatList'> 135485879700304
navigating children of <class 'ir.StatList'> 135485879700448 1
Flattening 135485879700448 into 135485879700640
Flattening <class 'ir.StatList'> 135485879700448
Flattening 135485879700640 into 135485879721456
Flattening <class 'ir.StatList'> 135485879700640
navigating children of <class 'ir.StatList'> 135485879599696 3
navigating children of <class 'ir.StatList'> 135485879718240 5
navigating children of <class 'ir.StatList'> 135485879599648 1
Flattening 135485879599648 into 135485879718240
Flattening <class 'ir.StatList'> 135485879599648
navigating children of <class 'ir.StatList'> 135485879701456 3
navigating children of <class 'ir.StatList'> 135485879701216 3
navigating children of <class 'ir.StatList'> 135485879700832 1
Flattening 135485879700832 into 135485879701216
Flattening <class 'ir.StatList'> 135485879700832
navigating children of <class 'ir.StatList'> 135485879701024 1
Flattening 135485879701024 into 135485879701216
Flattening <class 'ir.StatList'> 135485879701024
Flattening 135485879701216 into 135485879701456
Flattening <class 'ir.StatList'> 135485879701216
navigating children of <class 'ir.StatList'> 135485879600080 1
Flattening 135485879600080 into 135485879701456
Flattening <class 'ir.StatList'> 135485879600080
Flattening 135485879701456 into 135485879718240
Flattening <class 'ir.StatList'> 135485879701456
Flattening 135485879718240 into 135485879599696
Flattening <class 'ir.StatList'> 135485879718240
navigating children of <class 'ir.StatList'> 135485879720544 2
navigating children of <class 'ir.StatList'> 135485879720400 4
navigating children of <class 'ir.StatList'> 135485879718528 3
navigating children of <class 'ir.StatList'> 135485879719008 3
navigating children of <class 'ir.StatList'> 135485879718480 1
Flattening 135485879718480 into 135485879719008
Flattening <class 'ir.StatList'> 135485879718480
navigating children of <class 'ir.StatList'> 135485879718816 1
Flattening 135485879718816 into 135485879719008
Flattening <class 'ir.StatList'> 135485879718816
Flattening 135485879719008 into 135485879718528
Flattening <class 'ir.StatList'> 135485879719008
navigating children of <class 'ir.StatList'> 135485879600656 1
Flattening 135485879600656 into 135485879718528
Flattening <class 'ir.StatList'> 135485879600656
Flattening 135485879718528 into 135485879720400
Flattening <class 'ir.StatList'> 135485879718528
Flattening 135485879720400 into 135485879720544
Flattening <class 'ir.StatList'> 135485879720400
Flattening 135485879720544 into 135485879599696
Flattening <class 'ir.StatList'> 135485879720544
navigating children of <class 'ir.StatList'> 135485879601232 2
navigating children of <class 'ir.StatList'> 135485879721168 3
navigating children of <class 'ir.StatList'> 135485879720784 1
Flattening 135485879720784 into 135485879721168
Flattening <class 'ir.StatList'> 135485879720784
navigating children of <class 'ir.StatList'> 135485879720976 1
Flattening 135485879720976 into 135485879721168
Flattening <class 'ir.StatList'> 135485879720976
Flattening 135485879721168 into 135485879601232
Flattening <class 'ir.StatList'> 135485879721168
Flattening 135485879601232 into 135485879599696
Flattening <class 'ir.StatList'> 135485879601232
Flattening 135485879599696 into 135485879721456
Flattening <class 'ir.StatList'> 135485879599696
Flattening 135485879721456 into 135485880108464
Flattening <class 'ir.StatList'> 135485879721456
navigating children of <class 'ir.StatList'> 135485879601424 2
navigating children of <class 'ir.StatList'> 135485879721648 1
Flattening 135485879721648 into 135485879601424
Flattening <class 'ir.StatList'> 135485879721648
Flattening 135485879601424 into 135485880108464
Flattening <class 'ir.StatList'> 135485879601424
navigating children of <class 'ir.StatList'> 135485879601568 2
navigating children of <class 'ir.StatList'> 135485879721840 1
Flattening 135485879721840 into 135485879601568
Flattening <class 'ir.StatList'> 135485879721840
Flattening 135485879601568 into 135485880108464
Flattening <class 'ir.StatList'> 135485879601568
navigating children of <class 'ir.StatList'> 135485879762656 5
navigating children of <class 'ir.StatList'> 135485879738816 3
navigating children of <class 'ir.StatList'> 135485879738480 1
Flattening 135485879738480 into 135485879738816
Flattening <class 'ir.StatList'> 135485879738480
navigating children of <class 'ir.StatList'> 135485879738624 1
Flattening 135485879738624 into 135485879738816
Flattening <class 'ir.StatList'> 135485879738624
Flattening 135485879738816 into 135485879762656
Flattening <class 'ir.StatList'> 135485879738816
navigating children of <class 'ir.StatList'> 135485879601952 1
navigating children of <class 'ir.StatList'> 135485879762320 5
navigating children of <class 'ir.StatList'> 135485879739248 3
navigating children of <class 'ir.StatList'> 135485879738912 1
Flattening 135485879738912 into 135485879739248
Flattening <class 'ir.StatList'> 135485879738912
navigating children of <class 'ir.StatList'> 135485879739056 1
Flattening 135485879739056 into 135485879739248
Flattening <class 'ir.StatList'> 135485879739056
Flattening 135485879739248 into 135485879762320
Flattening <class 'ir.StatList'> 135485879739248
navigating children of <class 'ir.StatList'> 135485879602336 4
navigating children of <class 'ir.StatList'> 135485879741840 5
navigating children of <class 'ir.StatList'> 135485879740448 4
navigating children of <class 'ir.StatList'> 135485879739920 3
navigating children of <class 'ir.StatList'> 135485879739392 1
Flattening 135485879739392 into 135485879739920
Flattening <class 'ir.StatList'> 135485879739392
navigating children of <class 'ir.StatList'> 135485879739536 1
Flattening 135485879739536 into 135485879739920
Flattening <class 'ir.StatList'> 135485879739536
Flattening 135485879739920 into 135485879740448
Flattening <class 'ir.StatList'> 135485879739920
Flattening 135485879740448 into 135485879741840
Flattening <class 'ir.StatList'> 135485879740448
navigating children of <class 'ir.StatList'> 135485879741552 3
navigating children of <class 'ir.StatList'> 135485879740976 3
navigating children of <class 'ir.StatList'> 135485879740592 1
Flattening 135485879740592 into 135485879740976
Flattening <class 'ir.StatList'> 135485879740592
navigating children of <class 'ir.StatList'> 135485879740784 1
Flattening 135485879740784 into 135485879740976
Flattening <class 'ir.StatList'> 135485879740784
Flattening 135485879740976 into 135485879741552
Flattening <class 'ir.StatList'> 135485879740976
navigating children of <class 'ir.StatList'> 135485879741360 3
navigating children of <class 'ir.StatList'> 135485879602816 1
Flattening 135485879602816 into 135485879741360
Flattening <class 'ir.StatList'> 135485879602816
navigating children of <class 'ir.StatList'> 135485879741072 1
Flattening 135485879741072 into 135485879741360
Flattening <class 'ir.StatList'> 135485879741072
Flattening 135485879741360 into 135485879741552
Flattening <class 'ir.StatList'> 135485879741360
Flattening 135485879741552 into 135485879741840
Flattening <class 'ir.StatList'> 135485879741552
Flattening 135485879741840 into 135485879602336
Flattening <class 'ir.StatList'> 135485879741840
navigating children of <class 'ir.StatList'> 135485879760880 2
navigating children of <class 'ir.StatList'> 135485879760736 4
navigating children of <class 'ir.StatList'> 135485879759776 3
navigating children of <class 'ir.StatList'> 135485879759056 3
navigating children of <class 'ir.StatList'> 135485879742080 1
Flattening 135485879742080 into 135485879759056
Flattening <class 'ir.StatList'> 135485879742080
navigating children of <class 'ir.StatList'> 135485879742416 1
Flattening 135485879742416 into 135485879759056
Flattening <class 'ir.StatList'> 135485879742416
Flattening 135485879759056 into 135485879759776
Flattening <class 'ir.StatList'> 135485879759056
navigating children of <class 'ir.StatList'> 135485879759440 3
navigating children of <class 'ir.StatList'> 135485879603936 1
Flattening 135485879603936 into 135485879759440
Flattening <class 'ir.StatList'> 135485879603936
navigating children of <class 'ir.StatList'> 135485879759152 1
Flattening 135485879759152 into 135485879759440
Flattening <class 'ir.StatList'> 135485879759152
Flattening 135485879759440 into 135485879759776
Flattening <class 'ir.StatList'> 135485879759440
Flattening 135485879759776 into 135485879760736
Flattening <class 'ir.StatList'> 135485879759776
Flattening 135485879760736 into 135485879760880
Flattening <class 'ir.StatList'> 135485879760736
Flattening 135485879760880 into 135485879602336
Flattening <class 'ir.StatList'> 135485879760880
navigating children of <class 'ir.StatList'> 135485879604608 2
navigating children of <class 'ir.StatList'> 135485879761504 3
navigating children of <class 'ir.StatList'> 135485879761120 1
Flattening 135485879761120 into 135485879761504
Flattening <class 'ir.StatList'> 135485879761120
navigating children of <class 'ir.StatList'> 135485879761312 1
Flattening 135485879761312 into 135485879761504
Flattening <class 'ir.StatList'> 135485879761312
Flattening 135485879761504 into 135485879604608
Flattening <class 'ir.StatList'> 135485879761504
Flattening 135485879604608 into 135485879602336
Flattening <class 'ir.StatList'> 135485879604608
navigating children of <class 'ir.StatList'> 135485879604944 2
navigating children of <class 'ir.StatList'> 135485879761984 3
navigating children of <class 'ir.StatList'> 135485879761648 1
Flattening 135485879761648 into 135485879761984
Flattening <class 'ir.StatList'> 135485879761648
navigating children of <class 'ir.StatList'> 135485879761792 1
Flattening 135485879761792 into 135485879761984
Flattening <class 'ir.StatList'> 135485879761792
Flattening 135485879761984 into 135485879604944
Flattening <class 'ir.StatList'> 135485879761984
Flattening 135485879604944 into 135485879602336
Flattening <class 'ir.StatList'> 135485879604944
Flattening 135485879602336 into 135485879762320
Flattening <class 'ir.StatList'> 135485879602336
Flattening 135485879762320 into 135485879601952
Flattening <class 'ir.StatList'> 135485879762320
Flattening 135485879601952 into 135485879762656
Flattening <class 'ir.StatList'> 135485879601952
Flattening 135485879762656 into 135485880108464
Flattening <class 'ir.StatList'> 135485879762656
navigating children of <class 'ir.StatList'> 135485879756400 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605712
navigating children of <class 'ir.StatList'> 135485879755056 3
navigating children of <class 'ir.StatList'> 135485879762848 1
Flattening 135485879762848 into 135485879755056
Flattening <class 'ir.StatList'> 135485879762848
navigating children of <class 'ir.StatList'> 135485879754864 1
Flattening 135485879754864 into 135485879755056
Flattening <class 'ir.StatList'> 135485879754864
Flattening 135485879755056 into 135485879756400
Flattening <class 'ir.StatList'> 135485879755056
navigating children of <class 'ir.StatList'> 135485879755968 2
navigating children of <class 'ir.StatList'> 135485879755824 1
Flattening 135485879755824 into 135485879755968
Flattening <class 'ir.StatList'> 135485879755824
Flattening 135485879755968 into 135485879756400
Flattening <class 'ir.StatList'> 135485879755968
navigating children of <class 'ir.StatList'> 135485879755440 3
navigating children of <class 'ir.StatList'> 135485879605904 1
Flattening 135485879605904 into 135485879755440
Flattening <class 'ir.StatList'> 135485879605904
navigating children of <class 'ir.StatList'> 135485879755248 1
Flattening 135485879755248 into 135485879755440
Flattening <class 'ir.StatList'> 135485879755248
Flattening 135485879755440 into 135485879756400
Flattening <class 'ir.StatList'> 135485879755440
Flattening 135485879756400 into 135485880108464
Flattening <class 'ir.StatList'> 135485879756400
navigating children of <class 'ir.StatList'> 135485879606336 2
navigating children of <class 'ir.StatList'> 135485879756304 1
Flattening 135485879756304 into 135485879606336
Flattening <class 'ir.StatList'> 135485879756304
Flattening 135485879606336 into 135485880108464
Flattening <class 'ir.StatList'> 135485879606336
navigating children of <class 'ir.StatList'> 135485879757024 2
navigating children of <class 'ir.StatList'> 135485879756880 1
Flattening 135485879756880 into 135485879757024
Flattening <class 'ir.StatList'> 135485879756880
Flattening 135485879757024 into 135485880108464
Flattening <class 'ir.StatList'> 135485879757024
navigating children of <class 'ir.StatList'> 135485879804016 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879607152
navigating children of <class 'ir.StatList'> 135485879757552 3
navigating children of <class 'ir.StatList'> 135485879757264 1
Flattening 135485879757264 into 135485879757552
Flattening <class 'ir.StatList'> 135485879757264
navigating children of <class 'ir.StatList'> 135485879757360 1
Flattening 135485879757360 into 135485879757552
Flattening <class 'ir.StatList'> 135485879757360
Flattening 135485879757552 into 135485879804016
Flattening <class 'ir.StatList'> 135485879757552
navigating children of <class 'ir.StatList'> 135485879758464 2
navigating children of <class 'ir.StatList'> 135485879758320 1
Flattening 135485879758320 into 135485879758464
Flattening <class 'ir.StatList'> 135485879758320
Flattening 135485879758464 into 135485879804016
Flattening <class 'ir.StatList'> 135485879758464
navigating children of <class 'ir.StatList'> 135485879757936 3
navigating children of <class 'ir.StatList'> 135485879606768 1
Flattening 135485879606768 into 135485879757936
Flattening <class 'ir.StatList'> 135485879606768
navigating children of <class 'ir.StatList'> 135485879757744 1
Flattening 135485879757744 into 135485879757936
Flattening <class 'ir.StatList'> 135485879757744
Flattening 135485879757936 into 135485879804016
Flattening <class 'ir.StatList'> 135485879757936
Flattening 135485879804016 into 135485880108464
Flattening <class 'ir.StatList'> 135485879804016
navigating children of <class 'ir.StatList'> 135485879804400 2
navigating children of <class 'ir.StatList'> 135485879804304 1
Flattening 135485879804304 into 135485879804400
Flattening <class 'ir.StatList'> 135485879804304
Flattening 135485879804400 into 135485880108464
Flattening <class 'ir.StatList'> 135485879804400
navigating children of <class 'ir.StatList'> 135485879804880 2
navigating children of <class 'ir.StatList'> 135485879804784 1
Flattening 135485879804784 into 135485879804880
Flattening <class 'ir.StatList'> 135485879804784
Flattening 135485879804880 into 135485880108464
Flattening <class 'ir.StatList'> 135485879804880
navigating children of <class 'ir.StatList'> 135485879760256 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625136
navigating children of <class 'ir.StatList'> 135485879805408 3
navigating children of <class 'ir.StatList'> 135485879805120 1
Flattening 135485879805120 into 135485879805408
Flattening <class 'ir.StatList'> 135485879805120
navigating children of <class 'ir.StatList'> 135485879805216 1
Flattening 135485879805216 into 135485879805408
Flattening <class 'ir.StatList'> 135485879805216
Flattening 135485879805408 into 135485879760256
Flattening <class 'ir.StatList'> 135485879805408
navigating children of <class 'ir.StatList'> 135485879758608 2
navigating children of <class 'ir.StatList'> 135485879806176 1
Flattening 135485879806176 into 135485879758608
Flattening <class 'ir.StatList'> 135485879806176
Flattening 135485879758608 into 135485879760256
Flattening <class 'ir.StatList'> 135485879758608
navigating children of <class 'ir.StatList'> 135485879805792 3
navigating children of <class 'ir.StatList'> 135485879625328 1
Flattening 135485879625328 into 135485879805792
Flattening <class 'ir.StatList'> 135485879625328
navigating children of <class 'ir.StatList'> 135485879805600 1
Flattening 135485879805600 into 135485879805792
Flattening <class 'ir.StatList'> 135485879805600
Flattening 135485879805792 into 135485879760256
Flattening <class 'ir.StatList'> 135485879805792
Flattening 135485879760256 into 135485880108464
Flattening <class 'ir.StatList'> 135485879760256
navigating children of <class 'ir.StatList'> 135485879760064 2
navigating children of <class 'ir.StatList'> 135485879760208 1
Flattening 135485879760208 into 135485879760064
Flattening <class 'ir.StatList'> 135485879760208
Flattening 135485879760064 into 135485880108464
Flattening <class 'ir.StatList'> 135485879760064
navigating children of <class 'ir.StatList'> 135485879719968 2
navigating children of <class 'ir.StatList'> 135485879739728 1
Flattening 135485879739728 into 135485879719968
Flattening <class 'ir.StatList'> 135485879739728
Flattening 135485879719968 into 135485880108464
Flattening <class 'ir.StatList'> 135485879719968
navigating children of <class 'ir.StatList'> 135485879604368 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879626864
navigating children of <class 'ir.StatList'> 135485879719152 3
navigating children of <class 'ir.StatList'> 135485879719536 1
Flattening 135485879719536 into 135485879719152
Flattening <class 'ir.StatList'> 135485879719536
navigating children of <class 'ir.StatList'> 135485879719776 1
Flattening 135485879719776 into 135485879719152
Flattening <class 'ir.StatList'> 135485879719776
Flattening 135485879719152 into 135485879604368
Flattening <class 'ir.StatList'> 135485879719152
navigating children of <class 'ir.StatList'> 135485879624944 2
navigating children of <class 'ir.StatList'> 135485879625760 1
Flattening 135485879625760 into 135485879624944
Flattening <class 'ir.StatList'> 135485879625760
Flattening 135485879624944 into 135485879604368
Flattening <class 'ir.StatList'> 135485879624944
navigating children of <class 'ir.StatList'> 135485879605616 2
navigating children of <class 'ir.StatList'> 135485879606960 1
Flattening 135485879606960 into 135485879605616
Flattening <class 'ir.StatList'> 135485879606960
Flattening 135485879605616 into 135485879604368
Flattening <class 'ir.StatList'> 135485879605616
navigating children of <class 'ir.StatList'> 135485879627008 3
navigating children of <class 'ir.StatList'> 135485879699344 1
Flattening 135485879699344 into 135485879627008
Flattening <class 'ir.StatList'> 135485879699344
navigating children of <class 'ir.StatList'> 135485879685072 1
Flattening 135485879685072 into 135485879627008
Flattening <class 'ir.StatList'> 135485879685072
Flattening 135485879627008 into 135485879604368
Flattening <class 'ir.StatList'> 135485879627008
Flattening 135485879604368 into 135485880108464
Flattening <class 'ir.StatList'> 135485879604368
navigating children of <class 'ir.StatList'> 135485880110768 2
navigating children of <class 'ir.StatList'> 135485879600944 1
Flattening 135485879600944 into 135485880110768
Flattening <class 'ir.StatList'> 135485879600944
Flattening 135485880110768 into 135485880108464
Flattening <class 'ir.StatList'> 135485880110768
navigating children of <class 'ir.StatList'> 135485880110528 2
navigating children of <class 'ir.StatList'> 135485880109808 1
Flattening 135485880109808 into 135485880110528
Flattening <class 'ir.StatList'> 135485880109808
Flattening 135485880110528 into 135485880108464
Flattening <class 'ir.StatList'> 135485880110528
navigating children of <class 'ir.StatList'> 135485879807712 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648944
navigating children of <class 'ir.StatList'> 135485879804208 3
navigating children of <class 'ir.StatList'> 135485879806320 1
Flattening 135485879806320 into 135485879804208
Flattening <class 'ir.StatList'> 135485879806320
navigating children of <class 'ir.StatList'> 135485879804592 1
Flattening 135485879804592 into 135485879804208
Flattening <class 'ir.StatList'> 135485879804592
Flattening 135485879804208 into 135485879807712
Flattening <class 'ir.StatList'> 135485879804208
navigating children of <class 'ir.StatList'> 135485879807280 2
navigating children of <class 'ir.StatList'> 135485879807136 1
Flattening 135485879807136 into 135485879807280
Flattening <class 'ir.StatList'> 135485879807136
Flattening 135485879807280 into 135485879807712
Flattening <class 'ir.StatList'> 135485879807280
navigating children of <class 'ir.StatList'> 135485879806752 3
navigating children of <class 'ir.StatList'> 135485879649136 1
Flattening 135485879649136 into 135485879806752
Flattening <class 'ir.StatList'> 135485879649136
navigating children of <class 'ir.StatList'> 135485879806560 1
Flattening 135485879806560 into 135485879806752
Flattening <class 'ir.StatList'> 135485879806560
Flattening 135485879806752 into 135485879807712
Flattening <class 'ir.StatList'> 135485879806752
Flattening 135485879807712 into 135485880108464
Flattening <class 'ir.StatList'> 135485879807712
navigating children of <class 'ir.StatList'> 135485879333024 2
navigating children of <class 'ir.StatList'> 135485879807952 1
Flattening 135485879807952 into 135485879333024
Flattening <class 'ir.StatList'> 135485879807952
Flattening 135485879333024 into 135485880108464
Flattening <class 'ir.StatList'> 135485879333024
navigating children of <class 'ir.StatList'> 135485879333504 2
navigating children of <class 'ir.StatList'> 135485879333408 1
Flattening 135485879333408 into 135485879333504
Flattening <class 'ir.StatList'> 135485879333408
Flattening 135485879333504 into 135485880108464
Flattening <class 'ir.StatList'> 135485879333504
navigating children of <class 'ir.StatList'> 135485879335376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879650480
navigating children of <class 'ir.StatList'> 135485879334032 3
navigating children of <class 'ir.StatList'> 135485879333744 1
Flattening 135485879333744 into 135485879334032
Flattening <class 'ir.StatList'> 135485879333744
navigating children of <class 'ir.StatList'> 135485879333840 1
Flattening 135485879333840 into 135485879334032
Flattening <class 'ir.StatList'> 135485879333840
Flattening 135485879334032 into 135485879335376
Flattening <class 'ir.StatList'> 135485879334032
navigating children of <class 'ir.StatList'> 135485879334944 2
navigating children of <class 'ir.StatList'> 135485879334800 1
Flattening 135485879334800 into 135485879334944
Flattening <class 'ir.StatList'> 135485879334800
Flattening 135485879334944 into 135485879335376
Flattening <class 'ir.StatList'> 135485879334944
navigating children of <class 'ir.StatList'> 135485879334416 3
navigating children of <class 'ir.StatList'> 135485879650672 1
Flattening 135485879650672 into 135485879334416
Flattening <class 'ir.StatList'> 135485879650672
navigating children of <class 'ir.StatList'> 135485879334224 1
Flattening 135485879334224 into 135485879334416
Flattening <class 'ir.StatList'> 135485879334224
Flattening 135485879334416 into 135485879335376
Flattening <class 'ir.StatList'> 135485879334416
Flattening 135485879335376 into 135485880108464
Flattening <class 'ir.StatList'> 135485879335376
navigating children of <class 'ir.StatList'> 135485879335760 2
navigating children of <class 'ir.StatList'> 135485879335664 1
Flattening 135485879335664 into 135485879335760
Flattening <class 'ir.StatList'> 135485879335664
Flattening 135485879335760 into 135485880108464
Flattening <class 'ir.StatList'> 135485879335760
navigating children of <class 'ir.StatList'> 135485879336240 2
navigating children of <class 'ir.StatList'> 135485879336144 1
Flattening 135485879336144 into 135485879336240
Flattening <class 'ir.StatList'> 135485879336144
Flattening 135485879336240 into 135485880108464
Flattening <class 'ir.StatList'> 135485879336240
navigating children of <class 'ir.StatList'> 135485879350464 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879652016
navigating children of <class 'ir.StatList'> 135485879336768 3
navigating children of <class 'ir.StatList'> 135485879336480 1
Flattening 135485879336480 into 135485879336768
Flattening <class 'ir.StatList'> 135485879336480
navigating children of <class 'ir.StatList'> 135485879336576 1
Flattening 135485879336576 into 135485879336768
Flattening <class 'ir.StatList'> 135485879336576
Flattening 135485879336768 into 135485879350464
Flattening <class 'ir.StatList'> 135485879336768
navigating children of <class 'ir.StatList'> 135485879350032 2
navigating children of <class 'ir.StatList'> 135485879349888 1
Flattening 135485879349888 into 135485879350032
Flattening <class 'ir.StatList'> 135485879349888
Flattening 135485879350032 into 135485879350464
Flattening <class 'ir.StatList'> 135485879350032
navigating children of <class 'ir.StatList'> 135485879349504 3
navigating children of <class 'ir.StatList'> 135485879652208 1
Flattening 135485879652208 into 135485879349504
Flattening <class 'ir.StatList'> 135485879652208
navigating children of <class 'ir.StatList'> 135485879336912 1
Flattening 135485879336912 into 135485879349504
Flattening <class 'ir.StatList'> 135485879336912
Flattening 135485879349504 into 135485879350464
Flattening <class 'ir.StatList'> 135485879349504
Flattening 135485879350464 into 135485880108464
Flattening <class 'ir.StatList'> 135485879350464
navigating children of <class 'ir.StatList'> 135485879350848 2
navigating children of <class 'ir.StatList'> 135485879350752 1
Flattening 135485879350752 into 135485879350848
Flattening <class 'ir.StatList'> 135485879350752
Flattening 135485879350848 into 135485880108464
Flattening <class 'ir.StatList'> 135485879350848
navigating children of <class 'ir.StatList'> 135485879644704 2
navigating children of <class 'ir.StatList'> 135485879351040 1
Flattening 135485879351040 into 135485879644704
Flattening <class 'ir.StatList'> 135485879351040
Flattening 135485879644704 into 135485880108464
Flattening <class 'ir.StatList'> 135485879644704
navigating children of <class 'ir.StatList'> 135485879351520 2
navigating children of <class 'ir.StatList'> 135485879351424 1
Flattening 135485879351424 into 135485879351520
Flattening <class 'ir.StatList'> 135485879351424
Flattening 135485879351520 into 135485880108464
Flattening <class 'ir.StatList'> 135485879351520
navigating children of <class 'ir.StatList'> 135485879366752 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646048
navigating children of <class 'ir.StatList'> 135485879352048 3
navigating children of <class 'ir.StatList'> 135485879351760 1
Flattening 135485879351760 into 135485879352048
Flattening <class 'ir.StatList'> 135485879351760
navigating children of <class 'ir.StatList'> 135485879351856 1
Flattening 135485879351856 into 135485879352048
Flattening <class 'ir.StatList'> 135485879351856
Flattening 135485879352048 into 135485879366752
Flattening <class 'ir.StatList'> 135485879352048
navigating children of <class 'ir.StatList'> 135485879645520 2
navigating children of <class 'ir.StatList'> 135485879353008 3
navigating children of <class 'ir.StatList'> 135485879352576 1
Flattening 135485879352576 into 135485879353008
Flattening <class 'ir.StatList'> 135485879352576
navigating children of <class 'ir.StatList'> 135485879352816 1
Flattening 135485879352816 into 135485879353008
Flattening <class 'ir.StatList'> 135485879352816
Flattening 135485879353008 into 135485879645520
Flattening <class 'ir.StatList'> 135485879353008
Flattening 135485879645520 into 135485879366752
Flattening <class 'ir.StatList'> 135485879645520
navigating children of <class 'ir.StatList'> 135485879365840 2
navigating children of <class 'ir.StatList'> 135485879365696 1
Flattening 135485879365696 into 135485879365840
Flattening <class 'ir.StatList'> 135485879365696
Flattening 135485879365840 into 135485879366752
Flattening <class 'ir.StatList'> 135485879365840
navigating children of <class 'ir.StatList'> 135485879366320 2
navigating children of <class 'ir.StatList'> 135485879366224 1
Flattening 135485879366224 into 135485879366320
Flattening <class 'ir.StatList'> 135485879366224
Flattening 135485879366320 into 135485879366752
Flattening <class 'ir.StatList'> 135485879366320
navigating children of <class 'ir.StatList'> 135485879352432 3
navigating children of <class 'ir.StatList'> 135485879646240 1
Flattening 135485879646240 into 135485879352432
Flattening <class 'ir.StatList'> 135485879646240
navigating children of <class 'ir.StatList'> 135485879352240 1
Flattening 135485879352240 into 135485879352432
Flattening <class 'ir.StatList'> 135485879352240
Flattening 135485879352432 into 135485879366752
Flattening <class 'ir.StatList'> 135485879352432
Flattening 135485879366752 into 135485880108464
Flattening <class 'ir.StatList'> 135485879366752
navigating children of <class 'ir.StatList'> 135485879367136 2
navigating children of <class 'ir.StatList'> 135485879367040 1
Flattening 135485879367040 into 135485879367136
Flattening <class 'ir.StatList'> 135485879367040
Flattening 135485879367136 into 135485880108464
Flattening <class 'ir.StatList'> 135485879367136
navigating children of <class 'ir.StatList'> 135485879367616 2
navigating children of <class 'ir.StatList'> 135485879367520 1
Flattening 135485879367520 into 135485879367616
Flattening <class 'ir.StatList'> 135485879367520
Flattening 135485879367616 into 135485880108464
Flattening <class 'ir.StatList'> 135485879367616
navigating children of <class 'ir.StatList'> 135485879647056 2
navigating children of <class 'ir.StatList'> 135485879367808 1
Flattening 135485879367808 into 135485879647056
Flattening <class 'ir.StatList'> 135485879367808
Flattening 135485879647056 into 135485880108464
Flattening <class 'ir.StatList'> 135485879647056
navigating children of <class 'ir.StatList'> 135485879368288 2
navigating children of <class 'ir.StatList'> 135485879368192 1
Flattening 135485879368192 into 135485879368288
Flattening <class 'ir.StatList'> 135485879368192
Flattening 135485879368288 into 135485880108464
Flattening <class 'ir.StatList'> 135485879368288
navigating children of <class 'ir.StatList'> 135485879387136 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879668800
navigating children of <class 'ir.StatList'> 135485879368816 3
navigating children of <class 'ir.StatList'> 135485879368528 1
Flattening 135485879368528 into 135485879368816
Flattening <class 'ir.StatList'> 135485879368528
navigating children of <class 'ir.StatList'> 135485879368624 1
Flattening 135485879368624 into 135485879368816
Flattening <class 'ir.StatList'> 135485879368624
Flattening 135485879368816 into 135485879387136
Flattening <class 'ir.StatList'> 135485879368816
navigating children of <class 'ir.StatList'> 135485879647920 2
navigating children of <class 'ir.StatList'> 135485879386224 3
navigating children of <class 'ir.StatList'> 135485879369344 1
Flattening 135485879369344 into 135485879386224
Flattening <class 'ir.StatList'> 135485879369344
navigating children of <class 'ir.StatList'> 135485879369584 1
Flattening 135485879369584 into 135485879386224
Flattening <class 'ir.StatList'> 135485879369584
Flattening 135485879386224 into 135485879647920
Flattening <class 'ir.StatList'> 135485879386224
Flattening 135485879647920 into 135485879387136
Flattening <class 'ir.StatList'> 135485879647920
navigating children of <class 'ir.StatList'> 135485879386704 2
navigating children of <class 'ir.StatList'> 135485879386608 1
Flattening 135485879386608 into 135485879386704
Flattening <class 'ir.StatList'> 135485879386608
Flattening 135485879386704 into 135485879387136
Flattening <class 'ir.StatList'> 135485879386704
navigating children of <class 'ir.StatList'> 135485879369200 3
navigating children of <class 'ir.StatList'> 135485879647536 1
Flattening 135485879647536 into 135485879369200
Flattening <class 'ir.StatList'> 135485879647536
navigating children of <class 'ir.StatList'> 135485879369008 1
Flattening 135485879369008 into 135485879369200
Flattening <class 'ir.StatList'> 135485879369008
Flattening 135485879369200 into 135485879387136
Flattening <class 'ir.StatList'> 135485879369200
Flattening 135485879387136 into 135485880108464
Flattening <class 'ir.StatList'> 135485879387136
navigating children of <class 'ir.StatList'> 135485879387520 2
navigating children of <class 'ir.StatList'> 135485879387424 1
Flattening 135485879387424 into 135485879387520
Flattening <class 'ir.StatList'> 135485879387424
Flattening 135485879387520 into 135485880108464
Flattening <class 'ir.StatList'> 135485879387520
navigating children of <class 'ir.StatList'> 135485879388000 2
navigating children of <class 'ir.StatList'> 135485879387904 1
Flattening 135485879387904 into 135485879388000
Flattening <class 'ir.StatList'> 135485879387904
Flattening 135485879388000 into 135485880108464
Flattening <class 'ir.StatList'> 135485879388000
navigating children of <class 'ir.StatList'> 135485879388480 2
navigating children of <class 'ir.StatList'> 135485879388384 1
Flattening 135485879388384 into 135485879388480
Flattening <class 'ir.StatList'> 135485879388384
Flattening 135485879388480 into 135485880108464
Flattening <class 'ir.StatList'> 135485879388480
navigating children of <class 'ir.StatList'> 135485879670000 2
navigating children of <class 'ir.StatList'> 135485879388672 1
Flattening 135485879388672 into 135485879670000
Flattening <class 'ir.StatList'> 135485879388672
Flattening 135485879670000 into 135485880108464
Flattening <class 'ir.StatList'> 135485879670000
navigating children of <class 'ir.StatList'> 135485879400960 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880107552
navigating children of <class 'ir.StatList'> 135485879389248 3
navigating children of <class 'ir.StatList'> 135485879388864 1
Flattening 135485879388864 into 135485879389248
Flattening <class 'ir.StatList'> 135485879388864
navigating children of <class 'ir.StatList'> 135485879389056 1
Flattening 135485879389056 into 135485879389248
Flattening <class 'ir.StatList'> 135485879389056
Flattening 135485879389248 into 135485879400960
Flattening <class 'ir.StatList'> 135485879389248
navigating children of <class 'ir.StatList'> 135485879400432 5
navigating children of <class 'ir.StatList'> 135485879399616 3
navigating children of <class 'ir.StatList'> 135485879399280 4
navigating children of <class 'ir.StatList'> 135485879398752 3
navigating children of <class 'ir.StatList'> 135485879389776 1
Flattening 135485879389776 into 135485879398752
Flattening <class 'ir.StatList'> 135485879389776
navigating children of <class 'ir.StatList'> 135485879390112 1
Flattening 135485879390112 into 135485879398752
Flattening <class 'ir.StatList'> 135485879390112
Flattening 135485879398752 into 135485879399280
Flattening <class 'ir.StatList'> 135485879398752
Flattening 135485879399280 into 135485879399616
Flattening <class 'ir.StatList'> 135485879399280
navigating children of <class 'ir.StatList'> 135485879399424 1
Flattening 135485879399424 into 135485879399616
Flattening <class 'ir.StatList'> 135485879399424
Flattening 135485879399616 into 135485879400432
Flattening <class 'ir.StatList'> 135485879399616
navigating children of <class 'ir.StatList'> 135485879400096 3
navigating children of <class 'ir.StatList'> 135485879399760 1
Flattening 135485879399760 into 135485879400096
Flattening <class 'ir.StatList'> 135485879399760
navigating children of <class 'ir.StatList'> 135485879399904 1
Flattening 135485879399904 into 135485879400096
Flattening <class 'ir.StatList'> 135485879399904
Flattening 135485879400096 into 135485879400432
Flattening <class 'ir.StatList'> 135485879400096
Flattening 135485879400432 into 135485879400960
Flattening <class 'ir.StatList'> 135485879400432
navigating children of <class 'ir.StatList'> 135485879389632 3
navigating children of <class 'ir.StatList'> 135485879671488 1
Flattening 135485879671488 into 135485879389632
Flattening <class 'ir.StatList'> 135485879671488
navigating children of <class 'ir.StatList'> 135485879389440 1
Flattening 135485879389440 into 135485879389632
Flattening <class 'ir.StatList'> 135485879389440
Flattening 135485879389632 into 135485879400960
Flattening <class 'ir.StatList'> 135485879389632
Flattening 135485879400960 into 135485880108464
Flattening <class 'ir.StatList'> 135485879400960
navigating children of <class 'ir.StatList'> 135485879440816 4
navigating children of <class 'ir.StatList'> 135485879401392 3
navigating children of <class 'ir.StatList'> 135485879400864 1
Flattening 135485879400864 into 135485879401392
Flattening <class 'ir.StatList'> 135485879400864
navigating children of <class 'ir.StatList'> 135485879401200 1
Flattening 135485879401200 into 135485879401392
Flattening <class 'ir.StatList'> 135485879401200
Flattening 135485879401392 into 135485879440816
Flattening <class 'ir.StatList'> 135485879401392
navigating children of <class 'ir.StatList'> 135485879672208 4
navigating children of <class 'ir.StatList'> 135485879401776 2
navigating children of <class 'ir.StatList'> 135485879401680 1
Flattening 135485879401680 into 135485879401776
Flattening <class 'ir.StatList'> 135485879401680
Flattening 135485879401776 into 135485879672208
Flattening <class 'ir.StatList'> 135485879401776
navigating children of <class 'ir.StatList'> 135485879428432 2
navigating children of <class 'ir.StatList'> 135485879428192 4
navigating children of <class 'ir.StatList'> 135485879427184 3
navigating children of <class 'ir.StatList'> 135485879402016 1
Flattening 135485879402016 into 135485879427184
Flattening <class 'ir.StatList'> 135485879402016
navigating children of <class 'ir.StatList'> 135485879402208 1
Flattening 135485879402208 into 135485879427184
Flattening <class 'ir.StatList'> 135485879402208
Flattening 135485879427184 into 135485879428192
Flattening <class 'ir.StatList'> 135485879427184
Flattening 135485879428192 into 135485879428432
Flattening <class 'ir.StatList'> 135485879428192
Flattening 135485879428432 into 135485879672208
Flattening <class 'ir.StatList'> 135485879428432
navigating children of <class 'ir.StatList'> 135485879430400 2
navigating children of <class 'ir.StatList'> 135485879430256 4
navigating children of <class 'ir.StatList'> 135485879429296 3
navigating children of <class 'ir.StatList'> 135485879428624 1
Flattening 135485879428624 into 135485879429296
Flattening <class 'ir.StatList'> 135485879428624
navigating children of <class 'ir.StatList'> 135485879428912 1
Flattening 135485879428912 into 135485879429296
Flattening <class 'ir.StatList'> 135485879428912
Flattening 135485879429296 into 135485879430256
Flattening <class 'ir.StatList'> 135485879429296
Flattening 135485879430256 into 135485879430400
Flattening <class 'ir.StatList'> 135485879430256
Flattening 135485879430400 into 135485879672208
Flattening <class 'ir.StatList'> 135485879430400
navigating children of <class 'ir.StatList'> 135485879440672 2
navigating children of <class 'ir.StatList'> 135485879440528 4
navigating children of <class 'ir.StatList'> 135485879439568 3
navigating children of <class 'ir.StatList'> 135485879430640 1
Flattening 135485879430640 into 135485879439568
Flattening <class 'ir.StatList'> 135485879430640
navigating children of <class 'ir.StatList'> 135485879430928 1
Flattening 135485879430928 into 135485879439568
Flattening <class 'ir.StatList'> 135485879430928
Flattening 135485879439568 into 135485879440528
Flattening <class 'ir.StatList'> 135485879439568
Flattening 135485879440528 into 135485879440672
Flattening <class 'ir.StatList'> 135485879440528
Flattening 135485879440672 into 135485879672208
Flattening <class 'ir.StatList'> 135485879440672
Flattening 135485879672208 into 135485879440816
Flattening <class 'ir.StatList'> 135485879672208
Flattening 135485879440816 into 135485880108464
Flattening <class 'ir.StatList'> 135485879440816
navigating children of <class 'ir.StatList'> 135485879441440 2
navigating children of <class 'ir.StatList'> 135485879441344 1
Flattening 135485879441344 into 135485879441440
Flattening <class 'ir.StatList'> 135485879441344
Flattening 135485879441440 into 135485880108464
Flattening <class 'ir.StatList'> 135485879441440
Not flattening 135485880108464 into 135485879682432 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 135485880108464
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432

--- IR Tree After Flattening ---
<class 'ir.Block'> 135485879682432 {
                                                                      <<<<<----- BUG? MISSING PARENT
	global_symtab: 	SymbolTable:
	
	defs: 	<class 'ir.DefinitionList'> 135485880629952 {
	parent = 135485879682432
		children:
		<class 'ir.FunctionDef'> 135485880108368 {
		parent = 135485880629952
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 135485880056608 {
			parent = 135485880108368
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
				defs: 	<class 'ir.DefinitionList'> 135485880107648 {
				parent = 135485880056608
				}
				body: 	<class 'ir.StatList'> 135485880107792 {
				parent = 135485880056608
					children:
					reg int t0 <- 1234
					auto int test <- reg int t0
					reg int t1 <- global int x
					reg int t2 <- global int x
					reg int32_t t3 <- reg int t1 times reg int t2
					global int squ <- reg int32_t t3
				}
			}
		}
	}
	body: 	<class 'ir.StatList'> 135485880108464 {
	parent = 135485879682432
		children:
		reg int t4 <- 1
		reg int t5 <- minus reg int t4
		global int x <- reg int t5
		read reg int t6
		global int x <- reg int t6
		reg int t7 <- global int x
		reg int t8 <- 100
		reg int32_t t9 <- reg int t7 gtr reg int t8
		branch on reg int32_t t9 to auto label label2
		reg int t11 <- global int x
		print reg int t11
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 135485880109280 {
		parent = 135485880108464
		}
		reg int t12 <- global int x
		reg int t14 <- minus reg int t12
		print reg int t14
		label1: <class 'ir.EmptyStat'> 135485880109376 {
		parent = 135485880108464
		}
		reg int t15 <- 1
		global int x <- reg int t15
		label3: <class 'ir.EmptyStat'> 135485880109616 {
		parent = 135485880108464
		}
		reg int t16 <- global int x
		reg int t17 <- 10
		reg int32_t t18 <- reg int t16 leq reg int t17
		branch on not reg int32_t t18 to auto label label4
		call  to auto function square
		reg int t19 <- global int x
		reg int t20 <- 1
		reg int32_t t21 <- reg int t19 plus reg int t20
		global int x <- reg int32_t t21
		reg int t23 <- global int squ
		print reg int t23
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 135485880111008 {
		parent = 135485880108464
		}
		reg int t24 <- 101
		global int x <- reg int t24
		label5: <class 'ir.EmptyStat'> 135485880110336 {
		parent = 135485880108464
		}
		reg int t25 <- global int x
		reg int t26 <- 105
		reg int32_t t27 <- reg int t25 leq reg int t26
		branch on not reg int32_t t27 to auto label label6
		reg int t28 <- global int x
		reg int t29 <- global int x
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t33 <- reg int32_t t31 times reg int t32
		reg &char t34 <- &(global char[5] arr)
		reg &char t35 <- reg &char t34 plus reg int32_t t33
		[reg &char t35] <- reg int t28
		reg int t36 <- global int x
		reg int t37 <- 100
		reg int32_t t38 <- reg int t36 minus reg int t37
		reg int t39 <- 1
		reg int32_t t41 <- reg int32_t t38 times reg int t39
		reg &char t46 <- &(global char[5] arr)
		reg &char t47 <- reg &char t46 plus reg int32_t t41
		reg char t45 <- [reg &char t47]
		print reg char t45
		reg int t48 <- global int x
		reg int t49 <- 1
		reg int32_t t50 <- reg int t48 plus reg int t49
		global int x <- reg int32_t t50
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 135485879601184 {
		parent = 135485880108464
		}
		reg int t51 <- 1
		global int x <- reg int t51
		reg int t52 <- 1
		global int y <- reg int t52
		label9: <class 'ir.EmptyStat'> 135485879738480 {
		parent = 135485880108464
		}
		reg int t53 <- global int x
		reg int t54 <- 5
		reg int32_t t55 <- reg int t53 leq reg int t54
		branch on not reg int32_t t55 to auto label label10
		label7: <class 'ir.EmptyStat'> 135485879738912 {
		parent = 135485880108464
		}
		reg int t56 <- global int y
		reg int t57 <- 5
		reg int32_t t58 <- reg int t56 leq reg int t57
		branch on not reg int32_t t58 to auto label label8
		reg int t59 <- global int x
		reg int t60 <- 1
		reg int32_t t62 <- reg int t59 times reg int t60
		reg &char t64 <- &(global char[5] arr)
		reg &char t65 <- reg &char t64 plus reg int32_t t62
		reg char t63 <- [reg &char t65]
		reg int t66 <- global int x
		reg int t67 <- 10
		reg int32_t t68 <- reg int t66 times reg int t67
		reg int t69 <- global int y
		reg int t70 <- 2
		reg int32_t t71 <- reg int t69 times reg int t70
		reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
		reg &short t73 <- &(global short[5, 5] multid)
		reg &short t74 <- reg &short t73 plus reg int32_t t72
		[reg &short t74] <- reg char t63
		reg int t75 <- global int x
		reg int t76 <- 10
		reg int32_t t77 <- reg int t75 times reg int t76
		reg int t78 <- global int y
		reg int t79 <- 2
		reg int32_t t80 <- reg int t78 times reg int t79
		reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
		reg &short t87 <- &(global short[5, 5] multid)
		reg &short t88 <- reg &short t87 plus reg int32_t t82
		reg short t86 <- [reg &short t88]
		print reg short t86
		reg int t89 <- global int x
		reg int t90 <- 1
		reg int32_t t91 <- reg int t89 plus reg int t90
		global int x <- reg int32_t t91
		reg int t92 <- global int y
		reg int t93 <- 1
		reg int32_t t94 <- reg int t92 plus reg int t93
		global int y <- reg int32_t t94
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 135485879762080 {
		parent = 135485880108464
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 135485879762464 {
		parent = 135485880108464
		}
		<class 'ir.AssignStat'> 135485879605712 {
		parent = 135485880108464
			symbol: 	auto int a
			expr: 	<class 'ir.Const'> 135485879605232 {
			parent = 135485879605712
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label11: <class 'ir.EmptyStat'> 135485879754864 {
		parent = 135485880108464
		}
		reg int t95 <- auto int a
		reg int t96 <- 20
		reg int32_t t97 <- reg int t95 leq reg int t96
		branch on not reg int32_t t97 to auto label label13
		reg int t102 <- auto int a
		print reg int t102
		reg int t98 <- auto int a
		reg int t99 <- 1
		reg int32_t t100 <- reg int t98 plus reg int t99
		auto int a <- reg int32_t t100
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 135485879756160 {
		parent = 135485880108464
		}
		reg int t103 <- 10
		global int i <- reg int t103
		reg int t105 <- 99991
		print reg int t105
		<class 'ir.AssignStat'> 135485879607152 {
		parent = 135485880108464
			symbol: 	auto int i
			expr: 	<class 'ir.Const'> 135485879606672 {
			parent = 135485879607152
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label14: <class 'ir.EmptyStat'> 135485879756880 {
		parent = 135485880108464
		}
		reg int t106 <- auto int i
		reg int t107 <- 15
		reg int32_t t108 <- reg int t106 leq reg int t107
		branch on not reg int32_t t108 to auto label label16
		reg int t113 <- global int i
		print reg int t113
		reg int t109 <- auto int i
		reg int t110 <- 1
		reg int32_t t111 <- reg int t109 plus reg int t110
		auto int i <- reg int32_t t111
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 135485879758656 {
		parent = 135485880108464
		}
		reg int t115 <- 88881
		print reg int t115
		reg int t117 <- 99992
		print reg int t117
		<class 'ir.AssignStat'> 135485879625136 {
		parent = 135485880108464
			symbol: 	auto int j
			expr: 	<class 'ir.Const'> 135485879624656 {
			parent = 135485879625136
				value: 	5
				symbol: 	None
			}
			offset: 	None
		}
		label17: <class 'ir.EmptyStat'> 135485879804784 {
		parent = 135485880108464
		}
		reg int t118 <- auto int j
		reg int t119 <- 5
		reg int32_t t120 <- reg int t118 leq reg int t119
		branch on not reg int32_t t120 to auto label label19
		reg int t125 <- global int j
		print reg int t125
		reg int t121 <- auto int j
		reg int t122 <- 1
		reg int32_t t123 <- reg int t121 plus reg int t122
		auto int j <- reg int32_t t123
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 135485879756688 {
		parent = 135485880108464
		}
		reg int t127 <- 88882
		print reg int t127
		reg int t129 <- 99993
		print reg int t129
		<class 'ir.AssignStat'> 135485879626864 {
		parent = 135485880108464
			symbol: 	auto int k
			expr: 	<class 'ir.Const'> 135485879626192 {
			parent = 135485879626864
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label20: <class 'ir.EmptyStat'> 135485879804688 {
		parent = 135485880108464
		}
		reg int t130 <- auto int k
		reg int t131 <- 5
		reg int32_t t132 <- reg int t130 leq reg int t131
		branch on not reg int32_t t132 to auto label label22
		reg int t137 <- 77777
		print reg int t137
		reg int t139 <- global int k
		print reg int t139
		reg int t133 <- auto int k
		reg int t134 <- 1
		reg int32_t t135 <- reg int t133 plus reg int t134
		auto int k <- reg int32_t t135
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 135485879603984 {
		parent = 135485880108464
		}
		reg int t141 <- 88883
		print reg int t141
		reg int t143 <- 99994
		print reg int t143
		<class 'ir.AssignStat'> 135485879648944 {
		parent = 135485880108464
			symbol: 	auto int m
			expr: 	<class 'ir.Const'> 135485879648464 {
			parent = 135485879648944
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label23: <class 'ir.EmptyStat'> 135485879805648 {
		parent = 135485880108464
		}
		reg int t144 <- auto int m
		reg int t145 <- 6
		reg int32_t t146 <- reg int t144 leq reg int t145
		branch on not reg int32_t t146 to auto label label25
		reg int t151 <- global int m
		print reg int t151
		reg int t147 <- auto int m
		reg int t148 <- 1
		reg int32_t t149 <- reg int t147 plus reg int t148
		auto int m <- reg int32_t t149
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 135485879807472 {
		parent = 135485880108464
		}
		reg int t153 <- 88884
		print reg int t153
		reg int t155 <- 99995
		print reg int t155
		<class 'ir.AssignStat'> 135485879650480 {
		parent = 135485880108464
			symbol: 	auto int n
			expr: 	<class 'ir.Const'> 135485879650000 {
			parent = 135485879650480
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label26: <class 'ir.EmptyStat'> 135485879649136 {
		parent = 135485880108464
		}
		reg int t156 <- auto int n
		reg int t157 <- 7
		reg int32_t t158 <- reg int t156 leq reg int t157
		branch on not reg int32_t t158 to auto label label28
		reg int t163 <- global int n
		print reg int t163
		reg int t159 <- auto int n
		reg int t160 <- 1
		reg int32_t t161 <- reg int t159 plus reg int t160
		auto int n <- reg int32_t t161
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 135485879335136 {
		parent = 135485880108464
		}
		reg int t165 <- 88885
		print reg int t165
		reg int t167 <- 99996
		print reg int t167
		<class 'ir.AssignStat'> 135485879652016 {
		parent = 135485880108464
			symbol: 	auto int p
			expr: 	<class 'ir.Const'> 135485879651536 {
			parent = 135485879652016
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label29: <class 'ir.EmptyStat'> 135485879650672 {
		parent = 135485880108464
		}
		reg int t168 <- auto int p
		reg int t169 <- 12
		reg int32_t t170 <- reg int t168 leq reg int t169
		branch on not reg int32_t t170 to auto label label31
		reg int t175 <- global int p
		print reg int t175
		reg int t171 <- auto int p
		reg int t172 <- 1
		reg int32_t t173 <- reg int t171 plus reg int t172
		auto int p <- reg int32_t t173
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 135485879350224 {
		parent = 135485880108464
		}
		reg int t177 <- 88886
		print reg int t177
		reg int t178 <- 0
		global int sum <- reg int t178
		reg int t180 <- 99997
		print reg int t180
		<class 'ir.AssignStat'> 135485879646048 {
		parent = 135485880108464
			symbol: 	auto int q
			expr: 	<class 'ir.Const'> 135485879645040 {
			parent = 135485879646048
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label32: <class 'ir.EmptyStat'> 135485879349312 {
		parent = 135485880108464
		}
		reg int t181 <- auto int q
		reg int t182 <- 5
		reg int32_t t183 <- reg int t181 leq reg int t182
		branch on not reg int32_t t183 to auto label label34
		reg int t187 <- global int sum
		reg int t188 <- global int q
		reg int32_t t189 <- reg int t187 plus reg int t188
		global int sum <- reg int32_t t189
		reg int t191 <- global int q
		print reg int t191
		reg int t193 <- global int sum
		print reg int t193
		reg int t184 <- auto int q
		reg int t185 <- 1
		reg int32_t t186 <- reg int t184 plus reg int t185
		auto int q <- reg int32_t t186
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 135485879366512 {
		parent = 135485880108464
		}
		reg int t195 <- global int sum
		print reg int t195
		reg int t197 <- 88887
		print reg int t197
		reg int t198 <- 100
		global int x <- reg int t198
		reg int t200 <- 99998
		print reg int t200
		<class 'ir.AssignStat'> 135485879668800 {
		parent = 135485880108464
			symbol: 	auto int r
			expr: 	<class 'ir.Const'> 135485879647440 {
			parent = 135485879668800
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label35: <class 'ir.EmptyStat'> 135485879367808 {
		parent = 135485880108464
		}
		reg int t201 <- auto int r
		reg int t202 <- 3
		reg int32_t t203 <- reg int t201 leq reg int t202
		branch on not reg int32_t t203 to auto label label37
		reg int t207 <- global int x
		reg int t208 <- global int r
		reg int32_t t209 <- reg int t207 plus reg int t208
		global int x <- reg int32_t t209
		reg int t211 <- global int x
		print reg int t211
		reg int t204 <- auto int r
		reg int t205 <- 1
		reg int32_t t206 <- reg int t204 plus reg int t205
		auto int r <- reg int32_t t206
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 135485879386896 {
		parent = 135485880108464
		}
		reg int t213 <- global int x
		print reg int t213
		reg int t215 <- 88888
		print reg int t215
		reg int t217 <- 999990
		print reg int t217
		reg int t218 <- 0
		global int sm_idx <- reg int t218
		<class 'ir.AssignStat'> 135485880107552 {
		parent = 135485880108464
			symbol: 	auto int sm_idx
			expr: 	<class 'ir.Const'> 135485879670144 {
			parent = 135485880107552
				value: 	0
				symbol: 	None
			}
			offset: 	None
		}
		label38: <class 'ir.EmptyStat'> 135485879388864 {
		parent = 135485880108464
		}
		reg int t219 <- auto int sm_idx
		reg int t220 <- 127
		reg int32_t t221 <- reg int t219 leq reg int t220
		branch on not reg int32_t t221 to auto label label40
		reg int t225 <- global int sm_idx
		reg int t226 <- 4
		reg int32_t t228 <- reg int t225 times reg int t226
		reg &int t230 <- &(global int[128] sm_source_arr)
		reg &int t231 <- reg &int t230 plus reg int32_t t228
		reg int t229 <- [reg &int t231]
		reg int t232 <- global int sm_idx
		reg int32_t t233 <- reg int t229 plus reg int t232
		reg int t234 <- global int sm_idx
		reg int t235 <- 4
		reg int32_t t236 <- reg int t234 times reg int t235
		reg &int t237 <- &(global int[128] sm_dest_arr)
		reg &int t238 <- reg &int t237 plus reg int32_t t236
		[reg &int t238] <- reg int32_t t233
		reg int t222 <- auto int sm_idx
		reg int t223 <- 1
		reg int32_t t224 <- reg int t222 plus reg int t223
		auto int sm_idx <- reg int32_t t224
		branch  to auto label label38
		label40: <class 'ir.EmptyStat'> 135485879400576 {
		parent = 135485880108464
		}
		reg int t239 <- 127
		reg int t240 <- 0
		reg int32_t t241 <- reg int t239 geq reg int t240
		branch on not reg int32_t t241 to auto label label41
		reg int t243 <- 76543
		print reg int t243
		reg int t244 <- 0
		reg int t245 <- 4
		reg int32_t t247 <- reg int t244 times reg int t245
		reg &int t252 <- &(global int[128] sm_dest_arr)
		reg &int t253 <- reg &int t252 plus reg int32_t t247
		reg int t251 <- [reg &int t253]
		print reg int t251
		reg int t254 <- 64
		reg int t255 <- 4
		reg int32_t t257 <- reg int t254 times reg int t255
		reg &int t262 <- &(global int[128] sm_dest_arr)
		reg &int t263 <- reg &int t262 plus reg int32_t t257
		reg int t261 <- [reg &int t263]
		print reg int t261
		reg int t264 <- 127
		reg int t265 <- 4
		reg int32_t t267 <- reg int t264 times reg int t265
		reg &int t272 <- &(global int[128] sm_dest_arr)
		reg &int t273 <- reg &int t272 plus reg int32_t t267
		reg int t271 <- [reg &int t273]
		print reg int t271
		label41: <class 'ir.EmptyStat'> 135485879440864 {
		parent = 135485880108464
		}
		reg int t275 <- 888880
		print reg int t275
	}
}
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 6
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 357
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605712
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879607152
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625136
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879626864
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648944
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879650480
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879652016
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646048
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879668800
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880107552
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432

--- Performing Data Layout ---

--- IR Tree After Data Layout (Symbols might have allocinfo) ---
<class 'ir.Block'> 135485879682432 {
                                                                      <<<<<----- BUG? MISSING PARENT
	global_symtab: 	SymbolTable:
	
	defs: 	<class 'ir.DefinitionList'> 135485880629952 {
	parent = 135485879682432
		children:
		<class 'ir.FunctionDef'> 135485880108368 {
		parent = 135485880629952
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 135485880056608 {
			parent = 135485880108368
				global_symtab: 	SymbolTable:
				global int x; _g_x: def byte 4
				global int y; _g_y: def byte 4
				global int squ; _g_squ: def byte 4
				global char[5] arr; _g_arr: def byte 5
				global short[5, 5] multid; _g_multid: def byte 50
				global int i; _g_i: def byte 4
				global int j; _g_j: def byte 4
				global int k; _g_k: def byte 4
				global int m; _g_m: def byte 4
				global int n; _g_n: def byte 4
				global int p; _g_p: def byte 4
				global int q; _g_q: def byte 4
				global int sum; _g_sum: def byte 4
				global int r; _g_r: def byte 4
				global int sm_idx; _g_sm_idx: def byte 4
				global int[128] sm_source_arr; _g_sm_source_arr: def byte 512
				global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512
				auto function square
				
				defs: 	<class 'ir.DefinitionList'> 135485880107648 {
				parent = 135485880056608
				}
				body: 	<class 'ir.StatList'> 135485880107792 {
				parent = 135485880056608
					children:
					reg int t0 <- 1234
					auto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t0
					reg int t1 <- global int x; _g_x: def byte 4
					reg int t2 <- global int x; _g_x: def byte 4
					reg int32_t t3 <- reg int t1 times reg int t2
					global int squ; _g_squ: def byte 4 <- reg int32_t t3
				}
			}
		}
	}
	body: 	<class 'ir.StatList'> 135485880108464 {
	parent = 135485879682432
		children:
		reg int t4 <- 1
		reg int t5 <- minus reg int t4
		global int x; _g_x: def byte 4 <- reg int t5
		read reg int t6
		global int x; _g_x: def byte 4 <- reg int t6
		reg int t7 <- global int x; _g_x: def byte 4
		reg int t8 <- 100
		reg int32_t t9 <- reg int t7 gtr reg int t8
		branch on reg int32_t t9 to auto label label2
		reg int t11 <- global int x; _g_x: def byte 4
		print reg int t11
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 135485880109280 {
		parent = 135485880108464
		}
		reg int t12 <- global int x; _g_x: def byte 4
		reg int t14 <- minus reg int t12
		print reg int t14
		label1: <class 'ir.EmptyStat'> 135485880109376 {
		parent = 135485880108464
		}
		reg int t15 <- 1
		global int x; _g_x: def byte 4 <- reg int t15
		label3: <class 'ir.EmptyStat'> 135485880109616 {
		parent = 135485880108464
		}
		reg int t16 <- global int x; _g_x: def byte 4
		reg int t17 <- 10
		reg int32_t t18 <- reg int t16 leq reg int t17
		branch on not reg int32_t t18 to auto label label4
		call  to auto function square
		reg int t19 <- global int x; _g_x: def byte 4
		reg int t20 <- 1
		reg int32_t t21 <- reg int t19 plus reg int t20
		global int x; _g_x: def byte 4 <- reg int32_t t21
		reg int t23 <- global int squ; _g_squ: def byte 4
		print reg int t23
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 135485880111008 {
		parent = 135485880108464
		}
		reg int t24 <- 101
		global int x; _g_x: def byte 4 <- reg int t24
		label5: <class 'ir.EmptyStat'> 135485880110336 {
		parent = 135485880108464
		}
		reg int t25 <- global int x; _g_x: def byte 4
		reg int t26 <- 105
		reg int32_t t27 <- reg int t25 leq reg int t26
		branch on not reg int32_t t27 to auto label label6
		reg int t28 <- global int x; _g_x: def byte 4
		reg int t29 <- global int x; _g_x: def byte 4
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t33 <- reg int32_t t31 times reg int t32
		reg &char t34 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t35 <- reg &char t34 plus reg int32_t t33
		[reg &char t35] <- reg int t28
		reg int t36 <- global int x; _g_x: def byte 4
		reg int t37 <- 100
		reg int32_t t38 <- reg int t36 minus reg int t37
		reg int t39 <- 1
		reg int32_t t41 <- reg int32_t t38 times reg int t39
		reg &char t46 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t47 <- reg &char t46 plus reg int32_t t41
		reg char t45 <- [reg &char t47]
		print reg char t45
		reg int t48 <- global int x; _g_x: def byte 4
		reg int t49 <- 1
		reg int32_t t50 <- reg int t48 plus reg int t49
		global int x; _g_x: def byte 4 <- reg int32_t t50
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 135485879601184 {
		parent = 135485880108464
		}
		reg int t51 <- 1
		global int x; _g_x: def byte 4 <- reg int t51
		reg int t52 <- 1
		global int y; _g_y: def byte 4 <- reg int t52
		label9: <class 'ir.EmptyStat'> 135485879738480 {
		parent = 135485880108464
		}
		reg int t53 <- global int x; _g_x: def byte 4
		reg int t54 <- 5
		reg int32_t t55 <- reg int t53 leq reg int t54
		branch on not reg int32_t t55 to auto label label10
		label7: <class 'ir.EmptyStat'> 135485879738912 {
		parent = 135485880108464
		}
		reg int t56 <- global int y; _g_y: def byte 4
		reg int t57 <- 5
		reg int32_t t58 <- reg int t56 leq reg int t57
		branch on not reg int32_t t58 to auto label label8
		reg int t59 <- global int x; _g_x: def byte 4
		reg int t60 <- 1
		reg int32_t t62 <- reg int t59 times reg int t60
		reg &char t64 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t65 <- reg &char t64 plus reg int32_t t62
		reg char t63 <- [reg &char t65]
		reg int t66 <- global int x; _g_x: def byte 4
		reg int t67 <- 10
		reg int32_t t68 <- reg int t66 times reg int t67
		reg int t69 <- global int y; _g_y: def byte 4
		reg int t70 <- 2
		reg int32_t t71 <- reg int t69 times reg int t70
		reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
		reg &short t73 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t74 <- reg &short t73 plus reg int32_t t72
		[reg &short t74] <- reg char t63
		reg int t75 <- global int x; _g_x: def byte 4
		reg int t76 <- 10
		reg int32_t t77 <- reg int t75 times reg int t76
		reg int t78 <- global int y; _g_y: def byte 4
		reg int t79 <- 2
		reg int32_t t80 <- reg int t78 times reg int t79
		reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
		reg &short t87 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t88 <- reg &short t87 plus reg int32_t t82
		reg short t86 <- [reg &short t88]
		print reg short t86
		reg int t89 <- global int x; _g_x: def byte 4
		reg int t90 <- 1
		reg int32_t t91 <- reg int t89 plus reg int t90
		global int x; _g_x: def byte 4 <- reg int32_t t91
		reg int t92 <- global int y; _g_y: def byte 4
		reg int t93 <- 1
		reg int32_t t94 <- reg int t92 plus reg int t93
		global int y; _g_y: def byte 4 <- reg int32_t t94
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 135485879762080 {
		parent = 135485880108464
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 135485879762464 {
		parent = 135485880108464
		}
		<class 'ir.AssignStat'> 135485879605712 {
		parent = 135485880108464
			symbol: 	auto int a
			expr: 	<class 'ir.Const'> 135485879605232 {
			parent = 135485879605712
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label11: <class 'ir.EmptyStat'> 135485879754864 {
		parent = 135485880108464
		}
		reg int t95 <- auto int a
		reg int t96 <- 20
		reg int32_t t97 <- reg int t95 leq reg int t96
		branch on not reg int32_t t97 to auto label label13
		reg int t102 <- auto int a
		print reg int t102
		reg int t98 <- auto int a
		reg int t99 <- 1
		reg int32_t t100 <- reg int t98 plus reg int t99
		auto int a <- reg int32_t t100
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 135485879756160 {
		parent = 135485880108464
		}
		reg int t103 <- 10
		global int i; _g_i: def byte 4 <- reg int t103
		reg int t105 <- 99991
		print reg int t105
		<class 'ir.AssignStat'> 135485879607152 {
		parent = 135485880108464
			symbol: 	auto int i
			expr: 	<class 'ir.Const'> 135485879606672 {
			parent = 135485879607152
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label14: <class 'ir.EmptyStat'> 135485879756880 {
		parent = 135485880108464
		}
		reg int t106 <- auto int i
		reg int t107 <- 15
		reg int32_t t108 <- reg int t106 leq reg int t107
		branch on not reg int32_t t108 to auto label label16
		reg int t113 <- global int i; _g_i: def byte 4
		print reg int t113
		reg int t109 <- auto int i
		reg int t110 <- 1
		reg int32_t t111 <- reg int t109 plus reg int t110
		auto int i <- reg int32_t t111
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 135485879758656 {
		parent = 135485880108464
		}
		reg int t115 <- 88881
		print reg int t115
		reg int t117 <- 99992
		print reg int t117
		<class 'ir.AssignStat'> 135485879625136 {
		parent = 135485880108464
			symbol: 	auto int j
			expr: 	<class 'ir.Const'> 135485879624656 {
			parent = 135485879625136
				value: 	5
				symbol: 	None
			}
			offset: 	None
		}
		label17: <class 'ir.EmptyStat'> 135485879804784 {
		parent = 135485880108464
		}
		reg int t118 <- auto int j
		reg int t119 <- 5
		reg int32_t t120 <- reg int t118 leq reg int t119
		branch on not reg int32_t t120 to auto label label19
		reg int t125 <- global int j; _g_j: def byte 4
		print reg int t125
		reg int t121 <- auto int j
		reg int t122 <- 1
		reg int32_t t123 <- reg int t121 plus reg int t122
		auto int j <- reg int32_t t123
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 135485879756688 {
		parent = 135485880108464
		}
		reg int t127 <- 88882
		print reg int t127
		reg int t129 <- 99993
		print reg int t129
		<class 'ir.AssignStat'> 135485879626864 {
		parent = 135485880108464
			symbol: 	auto int k
			expr: 	<class 'ir.Const'> 135485879626192 {
			parent = 135485879626864
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label20: <class 'ir.EmptyStat'> 135485879804688 {
		parent = 135485880108464
		}
		reg int t130 <- auto int k
		reg int t131 <- 5
		reg int32_t t132 <- reg int t130 leq reg int t131
		branch on not reg int32_t t132 to auto label label22
		reg int t137 <- 77777
		print reg int t137
		reg int t139 <- global int k; _g_k: def byte 4
		print reg int t139
		reg int t133 <- auto int k
		reg int t134 <- 1
		reg int32_t t135 <- reg int t133 plus reg int t134
		auto int k <- reg int32_t t135
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 135485879603984 {
		parent = 135485880108464
		}
		reg int t141 <- 88883
		print reg int t141
		reg int t143 <- 99994
		print reg int t143
		<class 'ir.AssignStat'> 135485879648944 {
		parent = 135485880108464
			symbol: 	auto int m
			expr: 	<class 'ir.Const'> 135485879648464 {
			parent = 135485879648944
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label23: <class 'ir.EmptyStat'> 135485879805648 {
		parent = 135485880108464
		}
		reg int t144 <- auto int m
		reg int t145 <- 6
		reg int32_t t146 <- reg int t144 leq reg int t145
		branch on not reg int32_t t146 to auto label label25
		reg int t151 <- global int m; _g_m: def byte 4
		print reg int t151
		reg int t147 <- auto int m
		reg int t148 <- 1
		reg int32_t t149 <- reg int t147 plus reg int t148
		auto int m <- reg int32_t t149
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 135485879807472 {
		parent = 135485880108464
		}
		reg int t153 <- 88884
		print reg int t153
		reg int t155 <- 99995
		print reg int t155
		<class 'ir.AssignStat'> 135485879650480 {
		parent = 135485880108464
			symbol: 	auto int n
			expr: 	<class 'ir.Const'> 135485879650000 {
			parent = 135485879650480
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label26: <class 'ir.EmptyStat'> 135485879649136 {
		parent = 135485880108464
		}
		reg int t156 <- auto int n
		reg int t157 <- 7
		reg int32_t t158 <- reg int t156 leq reg int t157
		branch on not reg int32_t t158 to auto label label28
		reg int t163 <- global int n; _g_n: def byte 4
		print reg int t163
		reg int t159 <- auto int n
		reg int t160 <- 1
		reg int32_t t161 <- reg int t159 plus reg int t160
		auto int n <- reg int32_t t161
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 135485879335136 {
		parent = 135485880108464
		}
		reg int t165 <- 88885
		print reg int t165
		reg int t167 <- 99996
		print reg int t167
		<class 'ir.AssignStat'> 135485879652016 {
		parent = 135485880108464
			symbol: 	auto int p
			expr: 	<class 'ir.Const'> 135485879651536 {
			parent = 135485879652016
				value: 	10
				symbol: 	None
			}
			offset: 	None
		}
		label29: <class 'ir.EmptyStat'> 135485879650672 {
		parent = 135485880108464
		}
		reg int t168 <- auto int p
		reg int t169 <- 12
		reg int32_t t170 <- reg int t168 leq reg int t169
		branch on not reg int32_t t170 to auto label label31
		reg int t175 <- global int p; _g_p: def byte 4
		print reg int t175
		reg int t171 <- auto int p
		reg int t172 <- 1
		reg int32_t t173 <- reg int t171 plus reg int t172
		auto int p <- reg int32_t t173
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 135485879350224 {
		parent = 135485880108464
		}
		reg int t177 <- 88886
		print reg int t177
		reg int t178 <- 0
		global int sum; _g_sum: def byte 4 <- reg int t178
		reg int t180 <- 99997
		print reg int t180
		<class 'ir.AssignStat'> 135485879646048 {
		parent = 135485880108464
			symbol: 	auto int q
			expr: 	<class 'ir.Const'> 135485879645040 {
			parent = 135485879646048
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label32: <class 'ir.EmptyStat'> 135485879349312 {
		parent = 135485880108464
		}
		reg int t181 <- auto int q
		reg int t182 <- 5
		reg int32_t t183 <- reg int t181 leq reg int t182
		branch on not reg int32_t t183 to auto label label34
		reg int t187 <- global int sum; _g_sum: def byte 4
		reg int t188 <- global int q; _g_q: def byte 4
		reg int32_t t189 <- reg int t187 plus reg int t188
		global int sum; _g_sum: def byte 4 <- reg int32_t t189
		reg int t191 <- global int q; _g_q: def byte 4
		print reg int t191
		reg int t193 <- global int sum; _g_sum: def byte 4
		print reg int t193
		reg int t184 <- auto int q
		reg int t185 <- 1
		reg int32_t t186 <- reg int t184 plus reg int t185
		auto int q <- reg int32_t t186
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 135485879366512 {
		parent = 135485880108464
		}
		reg int t195 <- global int sum; _g_sum: def byte 4
		print reg int t195
		reg int t197 <- 88887
		print reg int t197
		reg int t198 <- 100
		global int x; _g_x: def byte 4 <- reg int t198
		reg int t200 <- 99998
		print reg int t200
		<class 'ir.AssignStat'> 135485879668800 {
		parent = 135485880108464
			symbol: 	auto int r
			expr: 	<class 'ir.Const'> 135485879647440 {
			parent = 135485879668800
				value: 	1
				symbol: 	None
			}
			offset: 	None
		}
		label35: <class 'ir.EmptyStat'> 135485879367808 {
		parent = 135485880108464
		}
		reg int t201 <- auto int r
		reg int t202 <- 3
		reg int32_t t203 <- reg int t201 leq reg int t202
		branch on not reg int32_t t203 to auto label label37
		reg int t207 <- global int x; _g_x: def byte 4
		reg int t208 <- global int r; _g_r: def byte 4
		reg int32_t t209 <- reg int t207 plus reg int t208
		global int x; _g_x: def byte 4 <- reg int32_t t209
		reg int t211 <- global int x; _g_x: def byte 4
		print reg int t211
		reg int t204 <- auto int r
		reg int t205 <- 1
		reg int32_t t206 <- reg int t204 plus reg int t205
		auto int r <- reg int32_t t206
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 135485879386896 {
		parent = 135485880108464
		}
		reg int t213 <- global int x; _g_x: def byte 4
		print reg int t213
		reg int t215 <- 88888
		print reg int t215
		reg int t217 <- 999990
		print reg int t217
		reg int t218 <- 0
		global int sm_idx; _g_sm_idx: def byte 4 <- reg int t218
		<class 'ir.AssignStat'> 135485880107552 {
		parent = 135485880108464
			symbol: 	auto int sm_idx
			expr: 	<class 'ir.Const'> 135485879670144 {
			parent = 135485880107552
				value: 	0
				symbol: 	None
			}
			offset: 	None
		}
		label38: <class 'ir.EmptyStat'> 135485879388864 {
		parent = 135485880108464
		}
		reg int t219 <- auto int sm_idx
		reg int t220 <- 127
		reg int32_t t221 <- reg int t219 leq reg int t220
		branch on not reg int32_t t221 to auto label label40
		reg int t225 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int t226 <- 4
		reg int32_t t228 <- reg int t225 times reg int t226
		reg &int t230 <- &(global int[128] sm_source_arr; _g_sm_source_arr: def byte 512)
		reg &int t231 <- reg &int t230 plus reg int32_t t228
		reg int t229 <- [reg &int t231]
		reg int t232 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int32_t t233 <- reg int t229 plus reg int t232
		reg int t234 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int t235 <- 4
		reg int32_t t236 <- reg int t234 times reg int t235
		reg &int t237 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t238 <- reg &int t237 plus reg int32_t t236
		[reg &int t238] <- reg int32_t t233
		reg int t222 <- auto int sm_idx
		reg int t223 <- 1
		reg int32_t t224 <- reg int t222 plus reg int t223
		auto int sm_idx <- reg int32_t t224
		branch  to auto label label38
		label40: <class 'ir.EmptyStat'> 135485879400576 {
		parent = 135485880108464
		}
		reg int t239 <- 127
		reg int t240 <- 0
		reg int32_t t241 <- reg int t239 geq reg int t240
		branch on not reg int32_t t241 to auto label label41
		reg int t243 <- 76543
		print reg int t243
		reg int t244 <- 0
		reg int t245 <- 4
		reg int32_t t247 <- reg int t244 times reg int t245
		reg &int t252 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t253 <- reg &int t252 plus reg int32_t t247
		reg int t251 <- [reg &int t253]
		print reg int t251
		reg int t254 <- 64
		reg int t255 <- 4
		reg int32_t t257 <- reg int t254 times reg int t255
		reg &int t262 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t263 <- reg &int t262 plus reg int32_t t257
		reg int t261 <- [reg &int t263]
		print reg int t261
		reg int t264 <- 127
		reg int t265 <- 4
		reg int32_t t267 <- reg int t264 times reg int t265
		reg &int t272 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t273 <- reg &int t272 plus reg int32_t t267
		reg int t271 <- [reg &int t273]
		print reg int t271
		label41: <class 'ir.EmptyStat'> 135485879440864 {
		parent = 135485880108464
		}
		reg int t275 <- 888880
		print reg int t275
	}
}

--- Constructing CFG ---
navigating children of <class 'ir.DefinitionList'> 135485880629952 1
successfully navigated attr  defs  of <class 'ir.Block'> 135485880056608
navigating children of <class 'ir.StatList'> 135485880107792 6
successfully navigated attr  body  of <class 'ir.Block'> 135485880056608
successfully navigated attr  body  of <class 'ir.FunctionDef'> 135485880108368
successfully navigated attr  defs  of <class 'ir.Block'> 135485879682432
navigating children of <class 'ir.StatList'> 135485880108464 357
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879605712
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879607152
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879625136
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879626864
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879648944
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879650480
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879652016
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879646048
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485879668800
successfully navigated attr  expr  of <class 'ir.AssignStat'> 135485880107552
successfully navigated attr  body  of <class 'ir.Block'> 135485879682432
Initial CFG constructed with 48 basic blocks.
CFG graph saved to cfg_initial.dot

--- OPTIMIZATION: Attempting Loop Strip Mining ---

--- Starting Loop Strip Mining Pass (Default Strip Size: 4) ---
   Attempting loop detection using DFS...
   Starting DFS from entry point BB 135485879352864
   Starting DFS from entry point BB 135485879351040
      Found back edge: BB 135485879757360 -> BB 135485879755248 (Header)
      Found back edge: BB 135485879757168 -> BB 135485879758320 (Header)
      Found back edge: BB 135485879756832 -> BB 135485879757648 (Header)
      Found back edge: BB 135485879758272 -> BB 135485879757120 (Header)
      Found back edge: BB 135485879804304 -> BB 135485879805264 (Header)
      Found back edge: BB 135485879805600 -> BB 135485879805024 (Header)
      Found back edge: BB 135485879804592 -> BB 135485879806272 (Header)
      Found back edge: BB 135485879804112 -> BB 135485879806560 (Header)
      Found back edge: BB 135485879804976 -> BB 135485879804880 (Header)
      Found back edge: BB 135485879804400 -> BB 135485879333840 (Header)
      Found back edge: BB 135485879334272 -> BB 135485879336624 (Header)
      Found back edge: BB 135485879333648 -> BB 135485879334224 (Header)
      Found back edge: BB 135485879336384 -> BB 135485879336912 (Header)
      Found back edge: BB 135485879334128 -> BB 135485879625328 (Header)
      Loop body nodes for header 135485879755248: [135485879757360, 135485879755248]
      Loop body nodes for header 135485879758320: [135485879757168, 135485879758320]
      Loop body nodes for header 135485879757648: [135485879756832, 135485879757648]
      Loop body nodes for header 135485879757120: [135485879758272, 135485879757120]
      Loop body nodes for header 135485879805264: [135485879804304, 135485879805264]
      Loop body nodes for header 135485879805024: [135485879805600, 135485879805024]
      Loop body nodes for header 135485879806272: [135485879804592, 135485879806272]
      Loop body nodes for header 135485879806560: [135485879804112, 135485879806560]
      Loop body nodes for header 135485879804880: [135485879804976, 135485879804880]
      Loop body nodes for header 135485879333840: [135485879333840, 135485879804400]
      Loop body nodes for header 135485879336624: [135485879334272, 135485879333648, 135485879336624, 135485879334224]
      Loop body nodes for header 135485879334224: [135485879333648, 135485879334224]
      Loop body nodes for header 135485879336912: [135485879336384, 135485879336912]
      Loop body nodes for header 135485879625328: [135485879334128, 135485879625328]
   Loop detection complete. Found 14 unique loop header(s).
   Detected 14 initial loop(s). Analyzing for strip mining...
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879755248...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879755248. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879755248 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879758320...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879758320. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879758320 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879757648...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879757648. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879757648 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879757120...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879757120. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879757120 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879805264...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879805264. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879805264 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879805024...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879805024. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879805024 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879806272...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879806272. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879806272 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879806560...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879806560. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879806560 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879804880...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879804880. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879804880 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879333840...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879333840. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879333840 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879336624...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879336624. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879336624 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879334224...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879334224. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879334224 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879336912...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879336912. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879336912 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 135485879625328...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 135485879625328. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 135485879625328 not suitable for strip mining.
   STRIP_MINE_DEBUG: No suitable loops were strip-mined or transformation placeholder failed.
--- Loop Strip Mining Pass Complete ---

--- CFG After Attempting Strip Mining ---
CFG graph saved to cfg_after_strip_mining_attempt.dot

--- OPTIMIZATION: Attempting Loop Unrolling ---

--- Starting Loop Unrolling Pass (Factor: 2) ---
   Step 1: Detecting loops...
   Attempting loop detection using DFS...
   Starting DFS from entry point BB 135485879352864
   Starting DFS from entry point BB 135485879351040
      Found back edge: BB 135485879757360 -> BB 135485879755248 (Header)
      Found back edge: BB 135485879757168 -> BB 135485879758320 (Header)
      Found back edge: BB 135485879756832 -> BB 135485879757648 (Header)
      Found back edge: BB 135485879758272 -> BB 135485879757120 (Header)
      Found back edge: BB 135485879804304 -> BB 135485879805264 (Header)
      Found back edge: BB 135485879805600 -> BB 135485879805024 (Header)
      Found back edge: BB 135485879804592 -> BB 135485879806272 (Header)
      Found back edge: BB 135485879804112 -> BB 135485879806560 (Header)
      Found back edge: BB 135485879804976 -> BB 135485879804880 (Header)
      Found back edge: BB 135485879804400 -> BB 135485879333840 (Header)
      Found back edge: BB 135485879334272 -> BB 135485879336624 (Header)
      Found back edge: BB 135485879333648 -> BB 135485879334224 (Header)
      Found back edge: BB 135485879336384 -> BB 135485879336912 (Header)
      Found back edge: BB 135485879334128 -> BB 135485879625328 (Header)
      Loop body nodes for header 135485879755248: [135485879757360, 135485879755248]
      Loop body nodes for header 135485879758320: [135485879757168, 135485879758320]
      Loop body nodes for header 135485879757648: [135485879756832, 135485879757648]
      Loop body nodes for header 135485879757120: [135485879758272, 135485879757120]
      Loop body nodes for header 135485879805264: [135485879804304, 135485879805264]
      Loop body nodes for header 135485879805024: [135485879805600, 135485879805024]
      Loop body nodes for header 135485879806272: [135485879804592, 135485879806272]
      Loop body nodes for header 135485879806560: [135485879804112, 135485879806560]
      Loop body nodes for header 135485879804880: [135485879804976, 135485879804880]
      Loop body nodes for header 135485879333840: [135485879333840, 135485879804400]
      Loop body nodes for header 135485879336624: [135485879334272, 135485879333648, 135485879336624, 135485879334224]
      Loop body nodes for header 135485879334224: [135485879333648, 135485879334224]
      Loop body nodes for header 135485879336912: [135485879336384, 135485879336912]
      Loop body nodes for header 135485879625328: [135485879334128, 135485879625328]
   Loop detection complete. Found 14 unique loop header(s).
   Detected 14 loop(s). Analyzing for unrolling...
   Analyzing loop with header BB 135485879755248...
      Checking suitability for loop with header 135485879755248 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879758320...
      Checking suitability for loop with header 135485879758320 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879757648...
      Checking suitability for loop with header 135485879757648 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879757120...
      Checking suitability for loop with header 135485879757120 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879805264...
      Checking suitability for loop with header 135485879805264 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879805024...
      Checking suitability for loop with header 135485879805024 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879806272...
      Checking suitability for loop with header 135485879806272 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879806560...
      Checking suitability for loop with header 135485879806560 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879804880...
      Checking suitability for loop with header 135485879804880 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879333840...
      Checking suitability for loop with header 135485879333840 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879336624...
      Checking suitability for loop with header 135485879336624 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879334224...
      Checking suitability for loop with header 135485879334224 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879336912...
      Checking suitability for loop with header 135485879336912 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 135485879625328...
      Checking suitability for loop with header 135485879625328 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   No suitable loops were unrolled.
--- Loop Unrolling Pass Complete ---

--- CFG After Attempting Unrolling ---
CFG graph saved to cfg_after_unrolling_attempt.dot

--- Performing Liveness Analysis (on potentially modified CFG) ---
--- Starting Liveness Analysis ---
Liveness analysis converged after 4 iterations.
--- Liveness Analysis Complete ---
CFG graph saved to cfg_final_with_liveness.dot

--- Performing Register Allocation ---
LIVENESS INTERVALS:
[]

--- Register Allocation Map ---
vartoreg = {}

--- Generating Code ---

--- Generated Assembly Code ---
	.text
	.arch armv6
	.syntax unified
@ block
	.comm _g_x, 4
	.comm _g_y, 4
	.comm _g_squ, 4
	.comm _g_arr, 5
	.comm _g_multid, 50
	.comm _g_i, 4
	.comm _g_j, 4
	.comm _g_k, 4
	.comm _g_m, 4
	.comm _g_n, 4
	.comm _g_p, 4
	.comm _g_q, 4
	.comm _g_sum, 4
	.comm _g_r, 4
	.comm _g_sm_idx, 4
	.comm _g_sm_source_arr, 512
	.comm _g_sm_dest_arr, 512
	.global __pl0_start
__pl0_start:
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #0
	@ irnode 135485880108464 type <class 'ir.StatList'>
	@ node 135485879682576 did not generate any code
	@ exc: KeyError(reg int t4)
	@ node 135485879683392 did not generate any code
	@ exc: KeyError(reg int t4)
	@ node 135485880108704 did not generate any code
	@ exc: KeyError(reg int t5)
	@ node 135485880108608 did not generate any code
	@ exc: KeyError(reg int t6)
	@ node 135485880108800 did not generate any code
	@ exc: KeyError(reg int t6)
	@ node 135485879683920 did not generate any code
	@ exc: KeyError(reg int t7)
	@ node 135485880108944 did not generate any code
	@ exc: KeyError(reg int t8)
	@ node 135485879684064 did not generate any code
	@ exc: KeyError(reg int t7)
	@ node 135485879697760 did not generate any code
	@ exc: KeyError(reg int32_t t9)
	@ node 135485879684544 did not generate any code
	@ exc: KeyError(reg int t11)
	@ node 135485879684640 did not generate any code
	@ exc: KeyError(reg int t11)
	b label1
label2:
	@ emptystat
	@ node 135485879684880 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 135485880109328 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 135485879697616 did not generate any code
	@ exc: KeyError(reg int t14)
label1:
	@ emptystat
	@ node 135485879698096 did not generate any code
	@ exc: KeyError(reg int t15)
	@ node 135485880109952 did not generate any code
	@ exc: KeyError(reg int t15)
label3:
	@ emptystat
	@ node 135485879698288 did not generate any code
	@ exc: KeyError(reg int t16)
	@ node 135485880110096 did not generate any code
	@ exc: KeyError(reg int t17)
	@ node 135485879698432 did not generate any code
	@ exc: KeyError(reg int t16)
	@ node 135485879699728 did not generate any code
	@ exc: KeyError(reg int32_t t18)
	push {r0, r1, r2, r3}
	bl square
	pop {r0, r1, r2, r3}
	@ node 135485879698768 did not generate any code
	@ exc: KeyError(reg int t19)
	@ node 135485880110672 did not generate any code
	@ exc: KeyError(reg int t20)
	@ node 135485879698912 did not generate any code
	@ exc: KeyError(reg int t19)
	@ node 135485880110864 did not generate any code
	@ exc: KeyError(reg int32_t t21)
	@ node 135485879699440 did not generate any code
	@ exc: KeyError(reg int t23)
	@ node 135485879699536 did not generate any code
	@ exc: KeyError(reg int t23)
	b label3
label4:
	@ emptystat
	@ node 135485879700064 did not generate any code
	@ exc: KeyError(reg int t24)
	@ node 135485879599312 did not generate any code
	@ exc: KeyError(reg int t24)
label5:
	@ emptystat
	@ node 135485879700256 did not generate any code
	@ exc: KeyError(reg int t25)
	@ node 135485879599456 did not generate any code
	@ exc: KeyError(reg int t26)
	@ node 135485879700400 did not generate any code
	@ exc: KeyError(reg int t25)
	@ node 135485879721360 did not generate any code
	@ exc: KeyError(reg int32_t t27)
	@ node 135485879599600 did not generate any code
	@ exc: KeyError(reg int t28)
	@ node 135485879700784 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 135485879599888 did not generate any code
	@ exc: KeyError(reg int t30)
	@ node 135485879700976 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 135485879600032 did not generate any code
	@ exc: KeyError(reg int t32)
	@ node 135485879701360 did not generate any code
	@ exc: KeyError(reg int32_t t31)
	@ node 135485879600176 did not generate any code
	@ exc: KeyError(reg &char t34)
	@ node 135485879718144 did not generate any code
	@ exc: KeyError(reg &char t34)
	@ node 135485879718192 did not generate any code
	@ exc: KeyError(reg &char t35)
	@ node 135485879718432 did not generate any code
	@ exc: KeyError(reg int t36)
	@ node 135485879600464 did not generate any code
	@ exc: KeyError(reg int t37)
	@ node 135485879718768 did not generate any code
	@ exc: KeyError(reg int t36)
	@ node 135485879600608 did not generate any code
	@ exc: KeyError(reg int t39)
	@ node 135485879719440 did not generate any code
	@ exc: KeyError(reg int32_t t38)
	@ node 135485879720064 did not generate any code
	@ exc: KeyError(reg &char t46)
	@ node 135485879720304 did not generate any code
	@ exc: KeyError(reg &char t46)
	@ node 135485879720352 did not generate any code
	@ exc: KeyError(reg &char t47)
	@ node 135485879720496 did not generate any code
	@ exc: KeyError(reg char t45)
	@ node 135485879720736 did not generate any code
	@ exc: KeyError(reg int t48)
	@ node 135485879601088 did not generate any code
	@ exc: KeyError(reg int t49)
	@ node 135485879720928 did not generate any code
	@ exc: KeyError(reg int t48)
	@ node 135485879601280 did not generate any code
	@ exc: KeyError(reg int32_t t50)
	b label5
label6:
	@ emptystat
	@ node 135485879721600 did not generate any code
	@ exc: KeyError(reg int t51)
	@ node 135485879601472 did not generate any code
	@ exc: KeyError(reg int t51)
	@ node 135485879721792 did not generate any code
	@ exc: KeyError(reg int t52)
	@ node 135485879601616 did not generate any code
	@ exc: KeyError(reg int t52)
label9:
	@ emptystat
	@ node 135485879738432 did not generate any code
	@ exc: KeyError(reg int t53)
	@ node 135485879601712 did not generate any code
	@ exc: KeyError(reg int t54)
	@ node 135485879738576 did not generate any code
	@ exc: KeyError(reg int t53)
	@ node 135485879762560 did not generate any code
	@ exc: KeyError(reg int32_t t55)
label7:
	@ emptystat
	@ node 135485879601904 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 135485879602096 did not generate any code
	@ exc: KeyError(reg int t57)
	@ node 135485879739008 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 135485879762224 did not generate any code
	@ exc: KeyError(reg int32_t t58)
	@ node 135485879739344 did not generate any code
	@ exc: KeyError(reg int t59)
	@ node 135485879603264 did not generate any code
	@ exc: KeyError(reg int t60)
	@ node 135485879739872 did not generate any code
	@ exc: KeyError(reg int t59)
	@ node 135485879740160 did not generate any code
	@ exc: KeyError(reg &char t64)
	@ node 135485879740352 did not generate any code
	@ exc: KeyError(reg &char t64)
	@ node 135485879740400 did not generate any code
	@ exc: KeyError(reg &char t65)
	@ node 135485879740544 did not generate any code
	@ exc: KeyError(reg int t66)
	@ node 135485879602528 did not generate any code
	@ exc: KeyError(reg int t67)
	@ node 135485879740736 did not generate any code
	@ exc: KeyError(reg int t66)
	@ node 135485879602768 did not generate any code
	@ exc: KeyError(reg int t69)
	@ node 135485879602624 did not generate any code
	@ exc: KeyError(reg int t70)
	@ node 135485879741168 did not generate any code
	@ exc: KeyError(reg int t69)
	@ node 135485879741504 did not generate any code
	@ exc: KeyError(reg int32_t t68)
	@ node 135485879603008 did not generate any code
	@ exc: KeyError(reg &short t73)
	@ node 135485879741744 did not generate any code
	@ exc: KeyError(reg &short t73)
	@ node 135485879741792 did not generate any code
	@ exc: KeyError(reg &short t74)
	@ node 135485879742032 did not generate any code
	@ exc: KeyError(reg int t75)
	@ node 135485879603648 did not generate any code
	@ exc: KeyError(reg int t76)
	@ node 135485879758912 did not generate any code
	@ exc: KeyError(reg int t75)
	@ node 135485879603888 did not generate any code
	@ exc: KeyError(reg int t78)
	@ node 135485879603744 did not generate any code
	@ exc: KeyError(reg int t79)
	@ node 135485879759248 did not generate any code
	@ exc: KeyError(reg int t78)
	@ node 135485879759728 did not generate any code
	@ exc: KeyError(reg int32_t t77)
	@ node 135485879760448 did not generate any code
	@ exc: KeyError(reg &short t87)
	@ node 135485879760640 did not generate any code
	@ exc: KeyError(reg &short t87)
	@ node 135485879760688 did not generate any code
	@ exc: KeyError(reg &short t88)
	@ node 135485879760832 did not generate any code
	@ exc: KeyError(reg short t86)
	@ node 135485879761072 did not generate any code
	@ exc: KeyError(reg int t89)
	@ node 135485879604464 did not generate any code
	@ exc: KeyError(reg int t90)
	@ node 135485879761264 did not generate any code
	@ exc: KeyError(reg int t89)
	@ node 135485879604656 did not generate any code
	@ exc: KeyError(reg int32_t t91)
	@ node 135485879761600 did not generate any code
	@ exc: KeyError(reg int t92)
	@ node 135485879604800 did not generate any code
	@ exc: KeyError(reg int t93)
	@ node 135485879761744 did not generate any code
	@ exc: KeyError(reg int t92)
	@ node 135485879604992 did not generate any code
	@ exc: KeyError(reg int32_t t94)
	b label7
label8:
	@ emptystat
	b label9
label10:
	@ emptystat
	@ irnode 135485879605712 type <class 'ir.AssignStat'>
label11:
	@ emptystat
	@ node 135485879762800 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879605808 did not generate any code
	@ exc: KeyError(reg int t96)
	@ node 135485879754816 did not generate any code
	@ exc: KeyError(reg int t95)
	@ node 135485879756256 did not generate any code
	@ exc: KeyError(reg int32_t t97)
	@ node 135485879755632 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879755920 did not generate any code
	@ exc: KeyError(reg int t102)
	@ node 135485879605856 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879606000 did not generate any code
	@ exc: KeyError(reg int t99)
	@ node 135485879755200 did not generate any code
	@ exc: KeyError(reg int t98)
	@ node 135485879606192 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label11
label13:
	@ emptystat
	@ node 135485879756112 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 135485879606384 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 135485879756496 did not generate any code
	@ exc: KeyError(reg int t105)
	@ node 135485879756976 did not generate any code
	@ exc: KeyError(reg int t105)
	@ irnode 135485879607152 type <class 'ir.AssignStat'>
label14:
	@ emptystat
	@ node 135485879757216 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879607248 did not generate any code
	@ exc: KeyError(reg int t107)
	@ node 135485879757312 did not generate any code
	@ exc: KeyError(reg int t106)
	@ node 135485879758752 did not generate any code
	@ exc: KeyError(reg int32_t t108)
	@ node 135485879758128 did not generate any code
	@ exc: KeyError(reg int t113)
	@ node 135485879758416 did not generate any code
	@ exc: KeyError(reg int t113)
	@ node 135485879606816 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879623888 did not generate any code
	@ exc: KeyError(reg int t110)
	@ node 135485879757696 did not generate any code
	@ exc: KeyError(reg int t109)
	@ node 135485879624080 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label14
label16:
	@ emptystat
	@ node 135485879804256 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 135485879804352 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 135485879804736 did not generate any code
	@ exc: KeyError(reg int t117)
	@ node 135485879804832 did not generate any code
	@ exc: KeyError(reg int t117)
	@ irnode 135485879625136 type <class 'ir.AssignStat'>
label17:
	@ emptystat
	@ node 135485879805072 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879625232 did not generate any code
	@ exc: KeyError(reg int t119)
	@ node 135485879805168 did not generate any code
	@ exc: KeyError(reg int t118)
	@ node 135485879755680 did not generate any code
	@ exc: KeyError(reg int32_t t120)
	@ node 135485879805984 did not generate any code
	@ exc: KeyError(reg int t125)
	@ node 135485879758176 did not generate any code
	@ exc: KeyError(reg int t125)
	@ node 135485879625280 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879625424 did not generate any code
	@ exc: KeyError(reg int t122)
	@ node 135485879805552 did not generate any code
	@ exc: KeyError(reg int t121)
	@ node 135485879625616 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label17
label19:
	@ emptystat
	@ node 135485879760016 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 135485879759968 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 135485879739680 did not generate any code
	@ exc: KeyError(reg int t129)
	@ node 135485879739632 did not generate any code
	@ exc: KeyError(reg int t129)
	@ irnode 135485879626864 type <class 'ir.AssignStat'>
label20:
	@ emptystat
	@ node 135485879719632 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879719728 did not generate any code
	@ exc: KeyError(reg int t131)
	@ node 135485879719584 did not generate any code
	@ exc: KeyError(reg int t130)
	@ node 135485879604320 did not generate any code
	@ exc: KeyError(reg int32_t t132)
	@ node 135485879626912 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 135485879625520 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 135485879624368 did not generate any code
	@ exc: KeyError(reg int t139)
	@ node 135485879606528 did not generate any code
	@ exc: KeyError(reg int t139)
	@ node 135485879699296 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879685024 did not generate any code
	@ exc: KeyError(reg int t134)
	@ node 135485879627152 did not generate any code
	@ exc: KeyError(reg int t133)
	@ node 135485879627344 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label20
label22:
	@ emptystat
	@ node 135485879600704 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 135485879599168 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 135485880109760 did not generate any code
	@ exc: KeyError(reg int t143)
	@ node 135485880109520 did not generate any code
	@ exc: KeyError(reg int t143)
	@ irnode 135485879648944 type <class 'ir.AssignStat'>
label23:
	@ emptystat
	@ node 135485880110480 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879649040 did not generate any code
	@ exc: KeyError(reg int t145)
	@ node 135485879806368 did not generate any code
	@ exc: KeyError(reg int t144)
	@ node 135485879807568 did not generate any code
	@ exc: KeyError(reg int32_t t146)
	@ node 135485879806944 did not generate any code
	@ exc: KeyError(reg int t151)
	@ node 135485879807232 did not generate any code
	@ exc: KeyError(reg int t151)
	@ node 135485879649088 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879649232 did not generate any code
	@ exc: KeyError(reg int t148)
	@ node 135485879806512 did not generate any code
	@ exc: KeyError(reg int t147)
	@ node 135485879649424 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label23
label25:
	@ emptystat
	@ node 135485879807808 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 135485879332976 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 135485879333360 did not generate any code
	@ exc: KeyError(reg int t155)
	@ node 135485879333456 did not generate any code
	@ exc: KeyError(reg int t155)
	@ irnode 135485879650480 type <class 'ir.AssignStat'>
label26:
	@ emptystat
	@ node 135485879333696 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879650576 did not generate any code
	@ exc: KeyError(reg int t157)
	@ node 135485879333792 did not generate any code
	@ exc: KeyError(reg int t156)
	@ node 135485879335232 did not generate any code
	@ exc: KeyError(reg int32_t t158)
	@ node 135485879334608 did not generate any code
	@ exc: KeyError(reg int t163)
	@ node 135485879334896 did not generate any code
	@ exc: KeyError(reg int t163)
	@ node 135485879650624 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879650768 did not generate any code
	@ exc: KeyError(reg int t160)
	@ node 135485879334176 did not generate any code
	@ exc: KeyError(reg int t159)
	@ node 135485879650960 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label26
label28:
	@ emptystat
	@ node 135485879335616 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 135485879335712 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 135485879336096 did not generate any code
	@ exc: KeyError(reg int t167)
	@ node 135485879336192 did not generate any code
	@ exc: KeyError(reg int t167)
	@ irnode 135485879652016 type <class 'ir.AssignStat'>
label29:
	@ emptystat
	@ node 135485879336432 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879652112 did not generate any code
	@ exc: KeyError(reg int t169)
	@ node 135485879336528 did not generate any code
	@ exc: KeyError(reg int t168)
	@ node 135485879350320 did not generate any code
	@ exc: KeyError(reg int32_t t170)
	@ node 135485879349696 did not generate any code
	@ exc: KeyError(reg int t175)
	@ node 135485879349984 did not generate any code
	@ exc: KeyError(reg int t175)
	@ node 135485879652160 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879652256 did not generate any code
	@ exc: KeyError(reg int t172)
	@ node 135485879349360 did not generate any code
	@ exc: KeyError(reg int t171)
	@ node 135485879644368 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label29
label31:
	@ emptystat
	@ node 135485879350704 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 135485879350800 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 135485879644560 did not generate any code
	@ exc: KeyError(reg int t178)
	@ node 135485879644752 did not generate any code
	@ exc: KeyError(reg int t178)
	@ node 135485879351376 did not generate any code
	@ exc: KeyError(reg int t180)
	@ node 135485879351472 did not generate any code
	@ exc: KeyError(reg int t180)
	@ irnode 135485879646048 type <class 'ir.AssignStat'>
label32:
	@ emptystat
	@ node 135485879351712 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879646144 did not generate any code
	@ exc: KeyError(reg int t182)
	@ node 135485879351808 did not generate any code
	@ exc: KeyError(reg int t181)
	@ node 135485879366608 did not generate any code
	@ exc: KeyError(reg int32_t t183)
	@ node 135485879352528 did not generate any code
	@ exc: KeyError(reg int t187)
	@ node 135485879645376 did not generate any code
	@ exc: KeyError(reg int t188)
	@ node 135485879352768 did not generate any code
	@ exc: KeyError(reg int t187)
	@ node 135485879645568 did not generate any code
	@ exc: KeyError(reg int32_t t189)
	@ node 135485879353296 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 135485879365792 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 135485879366176 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 135485879366272 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 135485879646192 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879646336 did not generate any code
	@ exc: KeyError(reg int t185)
	@ node 135485879352192 did not generate any code
	@ exc: KeyError(reg int t184)
	@ node 135485879646528 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label32
label34:
	@ emptystat
	@ node 135485879366992 did not generate any code
	@ exc: KeyError(reg int t195)
	@ node 135485879367088 did not generate any code
	@ exc: KeyError(reg int t195)
	@ node 135485879367472 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 135485879367568 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 135485879646912 did not generate any code
	@ exc: KeyError(reg int t198)
	@ node 135485879647104 did not generate any code
	@ exc: KeyError(reg int t198)
	@ node 135485879368144 did not generate any code
	@ exc: KeyError(reg int t200)
	@ node 135485879368240 did not generate any code
	@ exc: KeyError(reg int t200)
	@ irnode 135485879668800 type <class 'ir.AssignStat'>
label35:
	@ emptystat
	@ node 135485879368480 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879668896 did not generate any code
	@ exc: KeyError(reg int t202)
	@ node 135485879368576 did not generate any code
	@ exc: KeyError(reg int t201)
	@ node 135485879386992 did not generate any code
	@ exc: KeyError(reg int32_t t203)
	@ node 135485879369296 did not generate any code
	@ exc: KeyError(reg int t207)
	@ node 135485879647776 did not generate any code
	@ exc: KeyError(reg int t208)
	@ node 135485879386176 did not generate any code
	@ exc: KeyError(reg int t207)
	@ node 135485879647968 did not generate any code
	@ exc: KeyError(reg int32_t t209)
	@ node 135485879386560 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 135485879386656 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 135485879647584 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879669088 did not generate any code
	@ exc: KeyError(reg int t205)
	@ node 135485879368960 did not generate any code
	@ exc: KeyError(reg int t204)
	@ node 135485879669280 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label35
label37:
	@ emptystat
	@ node 135485879387376 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 135485879387472 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 135485879387856 did not generate any code
	@ exc: KeyError(reg int t215)
	@ node 135485879387952 did not generate any code
	@ exc: KeyError(reg int t215)
	@ node 135485879388336 did not generate any code
	@ exc: KeyError(reg int t217)
	@ node 135485879388432 did not generate any code
	@ exc: KeyError(reg int t217)
	@ node 135485879669856 did not generate any code
	@ exc: KeyError(reg int t218)
	@ node 135485879670048 did not generate any code
	@ exc: KeyError(reg int t218)
	@ irnode 135485880107552 type <class 'ir.AssignStat'>
label38:
	@ emptystat
	@ node 135485879388816 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879671392 did not generate any code
	@ exc: KeyError(reg int t220)
	@ node 135485879389008 did not generate any code
	@ exc: KeyError(reg int t219)
	@ node 135485879400816 did not generate any code
	@ exc: KeyError(reg int32_t t221)
	@ node 135485879389728 did not generate any code
	@ exc: KeyError(reg int t225)
	@ node 135485879670816 did not generate any code
	@ exc: KeyError(reg int t226)
	@ node 135485879398704 did not generate any code
	@ exc: KeyError(reg int t225)
	@ node 135485879398992 did not generate any code
	@ exc: KeyError(reg &int t230)
	@ node 135485879399184 did not generate any code
	@ exc: KeyError(reg &int t230)
	@ node 135485879399232 did not generate any code
	@ exc: KeyError(reg &int t231)
	@ node 135485879671008 did not generate any code
	@ exc: KeyError(reg int t232)
	@ node 135485879399376 did not generate any code
	@ exc: KeyError(reg int t229)
	@ node 135485879399712 did not generate any code
	@ exc: KeyError(reg int t234)
	@ node 135485879670528 did not generate any code
	@ exc: KeyError(reg int t235)
	@ node 135485879399856 did not generate any code
	@ exc: KeyError(reg int t234)
	@ node 135485879670624 did not generate any code
	@ exc: KeyError(reg &int t237)
	@ node 135485879400336 did not generate any code
	@ exc: KeyError(reg &int t237)
	@ node 135485879400384 did not generate any code
	@ exc: KeyError(reg &int t238)
	@ node 135485879671440 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 135485879671584 did not generate any code
	@ exc: KeyError(reg int t223)
	@ node 135485879389392 did not generate any code
	@ exc: KeyError(reg int t222)
	@ node 135485879671776 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label38
label40:
	@ emptystat
	@ node 135485879400768 did not generate any code
	@ exc: KeyError(reg int t239)
	@ node 135485879671968 did not generate any code
	@ exc: KeyError(reg int t240)
	@ node 135485879401056 did not generate any code
	@ exc: KeyError(reg int t239)
	@ node 135485879440960 did not generate any code
	@ exc: KeyError(reg int32_t t241)
	@ node 135485879401632 did not generate any code
	@ exc: KeyError(reg int t243)
	@ node 135485879401728 did not generate any code
	@ exc: KeyError(reg int t243)
	@ node 135485879401968 did not generate any code
	@ exc: KeyError(reg int t244)
	@ node 135485879672592 did not generate any code
	@ exc: KeyError(reg int t245)
	@ node 135485879427136 did not generate any code
	@ exc: KeyError(reg int t244)
	@ node 135485879427952 did not generate any code
	@ exc: KeyError(reg &int t252)
	@ node 135485879428096 did not generate any code
	@ exc: KeyError(reg &int t252)
	@ node 135485879428144 did not generate any code
	@ exc: KeyError(reg &int t253)
	@ node 135485879428288 did not generate any code
	@ exc: KeyError(reg int t251)
	@ node 135485879428576 did not generate any code
	@ exc: KeyError(reg int t254)
	@ node 135485879681328 did not generate any code
	@ exc: KeyError(reg int t255)
	@ node 135485879429248 did not generate any code
	@ exc: KeyError(reg int t254)
	@ node 135485879428528 did not generate any code
	@ exc: KeyError(reg &int t262)
	@ node 135485879430160 did not generate any code
	@ exc: KeyError(reg &int t262)
	@ node 135485879430208 did not generate any code
	@ exc: KeyError(reg &int t263)
	@ node 135485879430352 did not generate any code
	@ exc: KeyError(reg int t261)
	@ node 135485879430592 did not generate any code
	@ exc: KeyError(reg int t264)
	@ node 135485879681808 did not generate any code
	@ exc: KeyError(reg int t265)
	@ node 135485879439520 did not generate any code
	@ exc: KeyError(reg int t264)
	@ node 135485879440288 did not generate any code
	@ exc: KeyError(reg &int t272)
	@ node 135485879440432 did not generate any code
	@ exc: KeyError(reg &int t272)
	@ node 135485879440480 did not generate any code
	@ exc: KeyError(reg &int t273)
	@ node 135485879440624 did not generate any code
	@ exc: KeyError(reg int t271)
label41:
	@ emptystat
	@ node 135485879441296 did not generate any code
	@ exc: KeyError(reg int t275)
	@ node 135485879441392 did not generate any code
	@ exc: KeyError(reg int t275)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

square:
@ block
	.equ _l_square_test, -4
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #4
	@ irnode 135485880107792 type <class 'ir.StatList'>
	@ node 135485879682624 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 135485880107984 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 135485879682672 did not generate any code
	@ exc: KeyError(reg int t1)
	@ node 135485880108128 did not generate any code
	@ exc: KeyError(reg int t2)
	@ node 135485879682528 did not generate any code
	@ exc: KeyError(reg int t1)
	@ node 135485880108272 did not generate any code
	@ exc: KeyError(reg int32_t t3)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

--- Compilation Complete ---
