Compiler arguments: ['main.py']

--- Compiling Program ---
Input Program Snippet:
--------------------
VAR x, y, squ;
VAR arr[5]: char;
var multid[5][5]: short;
{ New variables for loop tests }
VAR i, j, k, m, n, p, q, sum, r;

{This is a comment. You can write anything you want in a comment}

PROCEDUR...
--------------------
--- Starting Compilation ---

--- Parsing Program ---
start <function Parser.program at 0x79b51a513790>
getsym: varsym var
start <function Parser.block at 0x79b51a513430>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident x
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident y
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident squ
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x79b51a513670>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident arr
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident char
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x79b51a513670>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident multid
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident short
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x79b51a513670>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident i
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident j
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident k
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident m
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident n
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident p
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident q
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident sum
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x79b51a513670>
accepting comma == comma
getsym: ident r
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x79b51a513670>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: procsym procedure
accepting constsym == procsym
accepting varsym == procsym
accepting procsym == procsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
start <function Parser.block at 0x79b51a513430>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident test
start <function Parser.vardef at 0x79b51a513670>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x79b51a513670>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
accepting constsym == beginsym
accepting varsym == beginsym
accepting procsym == beginsym
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident test
StatList : new 133818737585648
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up test
Looking up test
expecting becomes
accepting becomes == becomes
getsym: number 1234
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737585888 of type <class 'ir.AssignStat'> to 133818737585648
accepting semicolon == semicolon
getsym: ident squ
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up squ
Looking up squ
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: times *
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
getsym: ident x
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737647680 of type <class 'ir.AssignStat'> to 133818737585648
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737585648 : [ 133818737585888 133818737647680 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.block at 0x79b51a513430>
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
Looking up square
accepting procsym == beginsym
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 133818737647824
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: minus -
start <function Parser.expression at 0x79b51a5130d0>
getsym: number 1
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737648112 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: read read
start <function Parser.statement at 0x79b51a513310>
accepting ident == read
accepting callsym == read
accepting beginsym == read
accepting ifsym == read
accepting whilesym == read
accepting forsym == read
accepting print == read
accepting read == read
getsym: ident x
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737648208 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ifsym if
start <function Parser.statement at 0x79b51a513310>
accepting ident == ifsym
accepting callsym == ifsym
accepting beginsym == ifsym
accepting ifsym == ifsym
getsym: ident x
start <function Parser.condition at 0x79b51a5131f0>
accepting oddsym == ident
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: gtr >
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
getsym: number 100
condition operator gtr number
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: thensym then
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.condition at 0x79b51a5131f0>
expecting thensym
accepting thensym == thensym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737648544
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: minus -
start <function Parser.expression at 0x79b51a5130d0>
getsym: ident x
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737648832 of type <class 'ir.PrintStat'> to 133818737648544
expecting endsym
accepting endsym == endsym
getsym: elsesym else
StatList 133818737648544 : [ 133818737648832 ]
end <function Parser.statement at 0x79b51a513310>
accepting elsesym == elsesym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737648928
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737649120 of type <class 'ir.PrintStat'> to 133818737648928
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737648928 : [ 133818737649120 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737649216 of type <class 'ir.IfStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737649360 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x79b51a513310>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x79b51a5131f0>
accepting oddsym == ident
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
getsym: number 10
condition operator leq number
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.condition at 0x79b51a5131f0>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: callsym call
StatList : new 133818737649696
start <function Parser.statement at 0x79b51a513310>
accepting ident == callsym
accepting callsym == callsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up square
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737649888 of type <class 'ir.CallStat'> to 133818737649696
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 1
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737650272 of type <class 'ir.AssignStat'> to 133818737649696
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident squ
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: endsym end
Looking up squ
Looking up squ
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737650416 of type <class 'ir.PrintStat'> to 133818737649696
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737649696 : [ 133818737649888 133818737650272 133818737650416 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737650512 of type <class 'ir.WhileStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 101
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737650656 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x79b51a513310>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x79b51a5131f0>
accepting oddsym == ident
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
getsym: number 105
condition operator leq number
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.condition at 0x79b51a5131f0>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident arr
StatList : new 133818737650992
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 100
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737651664 of type <class 'ir.AssignStat'> to 133818737650992
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident arr
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 100
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737664544 of type <class 'ir.PrintStat'> to 133818737650992
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 1
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737664976 of type <class 'ir.AssignStat'> to 133818737650992
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737650992 : [ 133818737651664 133818737664544 133818737664976 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737665024 of type <class 'ir.WhileStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737665168 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737665312 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x79b51a513310>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x79b51a5131f0>
accepting oddsym == ident
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.condition at 0x79b51a5131f0>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: whilesym while
StatList : new 133818737665600
start <function Parser.statement at 0x79b51a513310>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident y
start <function Parser.condition at 0x79b51a5131f0>
accepting oddsym == ident
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: leq <=
Looking up y
Looking up y
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.condition at 0x79b51a5131f0>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident multid
StatList : new 133818737665984
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident arr
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737667088 of type <class 'ir.AssignStat'> to 133818737665984
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident multid
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737667856 of type <class 'ir.PrintStat'> to 133818737665984
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 1
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737639680 of type <class 'ir.AssignStat'> to 133818737665984
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: ident y
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up y
Looking up y
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: number 1
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737640016 of type <class 'ir.AssignStat'> to 133818737665984
expecting endsym
accepting endsym == endsym
getsym: endsym end
StatList 133818737665984 : [ 133818737667088 133818737667856 133818737639680 133818737640016 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737640064 of type <class 'ir.WhileStat'> to 133818737665600
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737665600 : [ 133818737640064 ]
end <function Parser.statement at 0x79b51a513310>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737640112 of type <class 'ir.WhileStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident a
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int a' and body_symtab for 'a'
FOR LOOP - Variable symbol: auto int a
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 20
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737640400
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident a
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up a
Looking up a
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737640592 of type <class 'ir.PrintStat'> to 133818737640400
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737640400 : [ 133818737640592 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737641264 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident i
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up i
Looking up i
expecting becomes
accepting becomes == becomes
getsym: number 10
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737641408 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99991
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737641504 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident i
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int i' and body_symtab for 'i'
FOR LOOP - Variable symbol: auto int i
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 15
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737641840
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident i
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up i
Looking up i
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737642032 of type <class 'ir.PrintStat'> to 133818737641840
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737641840 : [ 133818737642032 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737642704 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88881
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737642848 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99992
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737643040 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident j
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int j' and body_symtab for 'j'
FOR LOOP - Variable symbol: auto int j
expecting becomes
accepting becomes == becomes
getsym: number 5
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737643376
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident j
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up j
Looking up j
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737696880 of type <class 'ir.PrintStat'> to 133818737643376
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737643376 : [ 133818737696880 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737697552 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88882
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737697696 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99993
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737697888 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident k
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int k' and body_symtab for 'k'
FOR LOOP - Variable symbol: auto int k
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737698224
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 77777
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737698416 of type <class 'ir.PrintStat'> to 133818737698224
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident k
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up k
Looking up k
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737698608 of type <class 'ir.PrintStat'> to 133818737698224
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737698224 : [ 133818737698416 133818737698608 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737699280 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88883
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737699424 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99994
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737699616 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident m
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int m' and body_symtab for 'm'
FOR LOOP - Variable symbol: auto int m
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 6
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737699952
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident m
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up m
Looking up m
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737700144 of type <class 'ir.PrintStat'> to 133818737699952
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737699952 : [ 133818737700144 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737700816 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88884
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737705120 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99995
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737705312 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident n
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int n' and body_symtab for 'n'
FOR LOOP - Variable symbol: auto int n
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 7
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737705648
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident n
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up n
Looking up n
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737705840 of type <class 'ir.PrintStat'> to 133818737705648
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737705648 : [ 133818737705840 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737706512 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88885
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737706656 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99996
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737706848 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident p
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int p' and body_symtab for 'p'
FOR LOOP - Variable symbol: auto int p
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 12
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 133818737707184
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident p
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up p
Looking up p
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737707376 of type <class 'ir.PrintStat'> to 133818737707184
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737707184 : [ 133818737707376 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737708048 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88886
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737708192 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident sum
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: number 0
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737708384 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99997
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737708480 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident q
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int q' and body_symtab for 'q'
FOR LOOP - Variable symbol: auto int q
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident sum
StatList : new 133818737708816
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: ident sum
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up sum
Looking up sum
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: ident q
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737717456 of type <class 'ir.AssignStat'> to 133818737708816
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident q
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737717600 of type <class 'ir.PrintStat'> to 133818737708816
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737717792 of type <class 'ir.PrintStat'> to 133818737708816
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737708816 : [ 133818737717456 133818737717600 133818737717792 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737718464 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737718608 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88887
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737718800 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 100
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737718992 of type <class 'ir.AssignStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99998
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737719136 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x79b51a513310>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident r
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int r' and body_symtab for 'r'
FOR LOOP - Variable symbol: auto int r
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 3
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x79b51a513310>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 133818737719472
start <function Parser.statement at 0x79b51a513310>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
getsym: ident r
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up r
Looking up r
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737719856 of type <class 'ir.AssignStat'> to 133818737719472
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737720000 of type <class 'ir.PrintStat'> to 133818737719472
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 133818737719472 : [ 133818737719856 133818737720000 ]
end <function Parser.statement at 0x79b51a513310>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737720672 of type <class 'ir.ForStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737720816 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x79b51a513310>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88888
start <function Parser.expression at 0x79b51a5130d0>
start <function Parser.term at 0x79b51a518f70>
start <function Parser.factor at 0x79b51a518e50>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x79b51a518e50>
end <function Parser.term at 0x79b51a518f70>
end <function Parser.expression at 0x79b51a5130d0>
end <function Parser.statement at 0x79b51a513310>
StatList: appending 133818737721008 of type <class 'ir.PrintStat'> to 133818737647824
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: period .
StatList
end <function Parser.statement at 0x79b51a513310>
end <function Parser.block at 0x79b51a513430>
expecting period
accepting period == period
end <function Parser.program at 0x79b51a513790>

--- Initial IR Tree (from Parser) ---
<class 'ir.Block'> 133818737721104 {
                                                                      <<<<<----- BUG? MISSING PARENT
	defs: 	<class 'ir.DefinitionList'> 133818738260672 {
	parent = 133818737721104
		children:
		<class 'ir.FunctionDef'> 133818737647728 {
		parent = 133818738260672
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 133818737584160 {
			parent = 133818737647728
				defs: 	<class 'ir.DefinitionList'> 133818737585504 {
				parent = 133818737584160
				}
				body: 	<class 'ir.StatList'> 133818737585648 {
				parent = 133818737584160
					children:
					<class 'ir.AssignStat'> 133818737585888 {
					parent = 133818737585648
						expr: 	<class 'ir.Const'> 133818737585792 {
						parent = 133818737585888
							symbol: 	None
							value: 	1234
						}
						symbol: 	auto int test
						offset: 	None
					}
					<class 'ir.AssignStat'> 133818737647680 {
					parent = 133818737585648
						expr: 	<class 'ir.BinExpr'> 133818737586080 {
						parent = 133818737647680
							children:
							'times'
							<class 'ir.Var'> 133818737585936 {
							parent = 133818737586080
								symbol: 	global int x
							}
							<class 'ir.Var'> 133818737585696 {
							parent = 133818737586080
								symbol: 	global int x
							}
						}
						symbol: 	global int squ
						offset: 	None
					}
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				auto function square
				
			}
		}
	}
	body: 	<class 'ir.StatList'> 133818737647824 {
	parent = 133818737721104
		children:
		<class 'ir.AssignStat'> 133818737648112 {
		parent = 133818737647824
			expr: 	<class 'ir.UnExpr'> 133818737648016 {
			parent = 133818737648112
				children:
				'minus'
				<class 'ir.Const'> 133818737647920 {
				parent = 133818737648016
					symbol: 	None
					value: 	1
				}
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.AssignStat'> 133818737648208 {
		parent = 133818737647824
			expr: 	<class 'ir.ReadStat'> 133818737583968 {
			parent = 133818737648208
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.IfStat'> 133818737649216 {
		parent = 133818737647824
			cond: 	<class 'ir.BinExpr'> 133818737648448 {
			parent = 133818737649216
				children:
				'gtr'
				<class 'ir.Var'> 133818737648256 {
				parent = 133818737648448
					symbol: 	global int x
				}
				<class 'ir.Const'> 133818737648352 {
				parent = 133818737648448
					symbol: 	None
					value: 	100
				}
			}
			elsepart: 	<class 'ir.StatList'> 133818737648928 {
			parent = 133818737649216
				children:
				<class 'ir.PrintStat'> 133818737649120 {
				parent = 133818737648928
					children:
					<class 'ir.Var'> 133818737649024 {
					parent = 133818737649120
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 133818737649024 {
					parent = 133818737649120
						symbol: 	global int x
					}
				}
			}
			thenpart: 	<class 'ir.StatList'> 133818737648544 {
			parent = 133818737649216
				children:
				<class 'ir.PrintStat'> 133818737648832 {
				parent = 133818737648544
					children:
					<class 'ir.UnExpr'> 133818737648736 {
					parent = 133818737648832
						children:
						'minus'
						<class 'ir.Var'> 133818737648640 {
						parent = 133818737648736
							symbol: 	global int x
						}
					}
					expr: 	<class 'ir.UnExpr'> 133818737648736 {
					parent = 133818737648832
						children:
						'minus'
						<class 'ir.Var'> 133818737648640 {
						parent = 133818737648736
							symbol: 	global int x
						}
					}
				}
			}
		}
		<class 'ir.AssignStat'> 133818737649360 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737649264 {
			parent = 133818737649360
				symbol: 	None
				value: 	1
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.WhileStat'> 133818737650512 {
		parent = 133818737647824
			cond: 	<class 'ir.BinExpr'> 133818737649600 {
			parent = 133818737650512
				children:
				'leq'
				<class 'ir.Var'> 133818737649408 {
				parent = 133818737649600
					symbol: 	global int x
				}
				<class 'ir.Const'> 133818737649504 {
				parent = 133818737649600
					symbol: 	None
					value: 	10
				}
			}
			body: 	<class 'ir.StatList'> 133818737649696 {
			parent = 133818737650512
				children:
				<class 'ir.CallStat'> 133818737649888 {
				parent = 133818737649696
					call: 	<class 'ir.CallExpr'> 133818737649792 {
					parent = 133818737649888
						symbol: 	auto function square
					}
				}
				<class 'ir.AssignStat'> 133818737650272 {
				parent = 133818737649696
					expr: 	<class 'ir.BinExpr'> 133818737650176 {
					parent = 133818737650272
						children:
						'plus'
						<class 'ir.Var'> 133818737649984 {
						parent = 133818737650176
							symbol: 	global int x
						}
						<class 'ir.Const'> 133818737650080 {
						parent = 133818737650176
							symbol: 	None
							value: 	1
						}
					}
					symbol: 	global int x
					offset: 	None
				}
				<class 'ir.PrintStat'> 133818737650416 {
				parent = 133818737649696
					children:
					<class 'ir.Var'> 133818737650320 {
					parent = 133818737650416
						symbol: 	global int squ
					}
					expr: 	<class 'ir.Var'> 133818737650320 {
					parent = 133818737650416
						symbol: 	global int squ
					}
				}
			}
		}
		<class 'ir.AssignStat'> 133818737650656 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737650560 {
			parent = 133818737650656
				symbol: 	None
				value: 	101
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.WhileStat'> 133818737665024 {
		parent = 133818737647824
			cond: 	<class 'ir.BinExpr'> 133818737650896 {
			parent = 133818737665024
				children:
				'leq'
				<class 'ir.Var'> 133818737650704 {
				parent = 133818737650896
					symbol: 	global int x
				}
				<class 'ir.Const'> 133818737650800 {
				parent = 133818737650896
					symbol: 	None
					value: 	105
				}
			}
			body: 	<class 'ir.StatList'> 133818737650992 {
			parent = 133818737665024
				children:
				<class 'ir.AssignStat'> 133818737651664 {
				parent = 133818737650992
					expr: 	<class 'ir.Var'> 133818737651424 {
					parent = 133818737651664
						symbol: 	global int x
					}
					symbol: 	global char[5] arr
					offset: 	<class 'ir.BinExpr'> 133818737651520 {
					parent = 133818737651664
						children:
						'times'
						<class 'ir.BinExpr'> 133818737651328 {
						parent = 133818737651520
							children:
							'minus'
							<class 'ir.Var'> 133818737651088 {
							parent = 133818737651328
								symbol: 	global int x
							}
							<class 'ir.Const'> 133818737651232 {
							parent = 133818737651328
								symbol: 	None
								value: 	100
							}
						}
						<class 'ir.Const'> 133818737651136 {
						parent = 133818737651520
							symbol: 	None
							value: 	1
						}
					}
				}
				<class 'ir.PrintStat'> 133818737664544 {
				parent = 133818737650992
					children:
					<class 'ir.ArrayElement'> 133818737664352 {
					parent = 133818737664544
						children:
						<class 'ir.BinExpr'> 133818737664448 {
						parent = 133818737664352
							children:
							'times'
							<class 'ir.BinExpr'> 133818737664256 {
							parent = 133818737664448
								children:
								'minus'
								<class 'ir.Var'> 133818737584352 {
								parent = 133818737664256
									symbol: 	global int x
								}
								<class 'ir.Const'> 133818737664160 {
								parent = 133818737664256
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 133818737664064 {
							parent = 133818737664448
								symbol: 	None
								value: 	1
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 133818737664448 {
						parent = 133818737664352
							children:
							'times'
							<class 'ir.BinExpr'> 133818737664256 {
							parent = 133818737664448
								children:
								'minus'
								<class 'ir.Var'> 133818737584352 {
								parent = 133818737664256
									symbol: 	global int x
								}
								<class 'ir.Const'> 133818737664160 {
								parent = 133818737664256
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 133818737664064 {
							parent = 133818737664448
								symbol: 	None
								value: 	1
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 133818737664352 {
					parent = 133818737664544
						children:
						<class 'ir.BinExpr'> 133818737664448 {
						parent = 133818737664352
							children:
							'times'
							<class 'ir.BinExpr'> 133818737664256 {
							parent = 133818737664448
								children:
								'minus'
								<class 'ir.Var'> 133818737584352 {
								parent = 133818737664256
									symbol: 	global int x
								}
								<class 'ir.Const'> 133818737664160 {
								parent = 133818737664256
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 133818737664064 {
							parent = 133818737664448
								symbol: 	None
								value: 	1
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 133818737664448 {
						parent = 133818737664352
							children:
							'times'
							<class 'ir.BinExpr'> 133818737664256 {
							parent = 133818737664448
								children:
								'minus'
								<class 'ir.Var'> 133818737584352 {
								parent = 133818737664256
									symbol: 	global int x
								}
								<class 'ir.Const'> 133818737664160 {
								parent = 133818737664256
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 133818737664064 {
							parent = 133818737664448
								symbol: 	None
								value: 	1
							}
						}
					}
				}
				<class 'ir.AssignStat'> 133818737664976 {
				parent = 133818737650992
					expr: 	<class 'ir.BinExpr'> 133818737664880 {
					parent = 133818737664976
						children:
						'plus'
						<class 'ir.Var'> 133818737664688 {
						parent = 133818737664880
							symbol: 	global int x
						}
						<class 'ir.Const'> 133818737664784 {
						parent = 133818737664880
							symbol: 	None
							value: 	1
						}
					}
					symbol: 	global int x
					offset: 	None
				}
			}
		}
		<class 'ir.AssignStat'> 133818737665168 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737665072 {
			parent = 133818737665168
				symbol: 	None
				value: 	1
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.AssignStat'> 133818737665312 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737665216 {
			parent = 133818737665312
				symbol: 	None
				value: 	1
			}
			symbol: 	global int y
			offset: 	None
		}
		<class 'ir.WhileStat'> 133818737640112 {
		parent = 133818737647824
			cond: 	<class 'ir.BinExpr'> 133818737665504 {
			parent = 133818737640112
				children:
				'leq'
				<class 'ir.Var'> 133818737583872 {
				parent = 133818737665504
					symbol: 	global int x
				}
				<class 'ir.Const'> 133818737665408 {
				parent = 133818737665504
					symbol: 	None
					value: 	5
				}
			}
			body: 	<class 'ir.StatList'> 133818737665600 {
			parent = 133818737640112
				children:
				<class 'ir.WhileStat'> 133818737640064 {
				parent = 133818737665600
					cond: 	<class 'ir.BinExpr'> 133818737665888 {
					parent = 133818737640064
						children:
						'leq'
						<class 'ir.Var'> 133818737665696 {
						parent = 133818737665888
							symbol: 	global int y
						}
						<class 'ir.Const'> 133818737665792 {
						parent = 133818737665888
							symbol: 	None
							value: 	5
						}
					}
					body: 	<class 'ir.StatList'> 133818737665984 {
					parent = 133818737640064
						children:
						<class 'ir.AssignStat'> 133818737667088 {
						parent = 133818737665984
							expr: 	<class 'ir.ArrayElement'> 133818737666896 {
							parent = 133818737667088
								children:
								<class 'ir.BinExpr'> 133818737666992 {
								parent = 133818737666896
									children:
									'times'
									<class 'ir.Var'> 133818737666320 {
									parent = 133818737666992
										symbol: 	global int x
									}
									<class 'ir.Const'> 133818737666800 {
									parent = 133818737666992
										symbol: 	None
										value: 	1
									}
								}
								symbol: 	global char[5] arr
								offset: 	<class 'ir.BinExpr'> 133818737666992 {
								parent = 133818737666896
									children:
									'times'
									<class 'ir.Var'> 133818737666320 {
									parent = 133818737666992
										symbol: 	global int x
									}
									<class 'ir.Const'> 133818737666800 {
									parent = 133818737666992
										symbol: 	None
										value: 	1
									}
								}
							}
							symbol: 	global short[5, 5] multid
							offset: 	<class 'ir.BinExpr'> 133818737666704 {
							parent = 133818737667088
								children:
								'plus'
								<class 'ir.BinExpr'> 133818737666416 {
								parent = 133818737666704
									children:
									'times'
									<class 'ir.Var'> 133818737666080 {
									parent = 133818737666416
										symbol: 	global int x
									}
									<class 'ir.Const'> 133818737666128 {
									parent = 133818737666416
										symbol: 	None
										value: 	10
									}
								}
								<class 'ir.BinExpr'> 133818737666608 {
								parent = 133818737666704
									children:
									'times'
									<class 'ir.Var'> 133818737666224 {
									parent = 133818737666608
										symbol: 	global int y
									}
									<class 'ir.Const'> 133818737666512 {
									parent = 133818737666608
										symbol: 	None
										value: 	2
									}
								}
							}
						}
						<class 'ir.PrintStat'> 133818737667856 {
						parent = 133818737665984
							children:
							<class 'ir.ArrayElement'> 133818737667376 {
							parent = 133818737667856
								children:
								<class 'ir.BinExpr'> 133818737667760 {
								parent = 133818737667376
									children:
									'plus'
									<class 'ir.BinExpr'> 133818737667472 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737584544 {
										parent = 133818737667472
											symbol: 	global int x
										}
										<class 'ir.Const'> 133818737667184 {
										parent = 133818737667472
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 133818737667664 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737667280 {
										parent = 133818737667664
											symbol: 	global int y
										}
										<class 'ir.Const'> 133818737667568 {
										parent = 133818737667664
											symbol: 	None
											value: 	2
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 133818737667760 {
								parent = 133818737667376
									children:
									'plus'
									<class 'ir.BinExpr'> 133818737667472 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737584544 {
										parent = 133818737667472
											symbol: 	global int x
										}
										<class 'ir.Const'> 133818737667184 {
										parent = 133818737667472
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 133818737667664 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737667280 {
										parent = 133818737667664
											symbol: 	global int y
										}
										<class 'ir.Const'> 133818737667568 {
										parent = 133818737667664
											symbol: 	None
											value: 	2
										}
									}
								}
							}
							expr: 	<class 'ir.ArrayElement'> 133818737667376 {
							parent = 133818737667856
								children:
								<class 'ir.BinExpr'> 133818737667760 {
								parent = 133818737667376
									children:
									'plus'
									<class 'ir.BinExpr'> 133818737667472 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737584544 {
										parent = 133818737667472
											symbol: 	global int x
										}
										<class 'ir.Const'> 133818737667184 {
										parent = 133818737667472
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 133818737667664 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737667280 {
										parent = 133818737667664
											symbol: 	global int y
										}
										<class 'ir.Const'> 133818737667568 {
										parent = 133818737667664
											symbol: 	None
											value: 	2
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 133818737667760 {
								parent = 133818737667376
									children:
									'plus'
									<class 'ir.BinExpr'> 133818737667472 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737584544 {
										parent = 133818737667472
											symbol: 	global int x
										}
										<class 'ir.Const'> 133818737667184 {
										parent = 133818737667472
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 133818737667664 {
									parent = 133818737667760
										children:
										'times'
										<class 'ir.Var'> 133818737667280 {
										parent = 133818737667664
											symbol: 	global int y
										}
										<class 'ir.Const'> 133818737667568 {
										parent = 133818737667664
											symbol: 	None
											value: 	2
										}
									}
								}
							}
						}
						<class 'ir.AssignStat'> 133818737639680 {
						parent = 133818737665984
							expr: 	<class 'ir.BinExpr'> 133818737639584 {
							parent = 133818737639680
								children:
								'plus'
								<class 'ir.Var'> 133818737668000 {
								parent = 133818737639584
									symbol: 	global int x
								}
								<class 'ir.Const'> 133818737639488 {
								parent = 133818737639584
									symbol: 	None
									value: 	1
								}
							}
							symbol: 	global int x
							offset: 	None
						}
						<class 'ir.AssignStat'> 133818737640016 {
						parent = 133818737665984
							expr: 	<class 'ir.BinExpr'> 133818737639920 {
							parent = 133818737640016
								children:
								'plus'
								<class 'ir.Var'> 133818737639728 {
								parent = 133818737639920
									symbol: 	global int y
								}
								<class 'ir.Const'> 133818737639824 {
								parent = 133818737639920
									symbol: 	None
									value: 	1
								}
							}
							symbol: 	global int y
							offset: 	None
						}
					}
				}
			}
		}
		<class 'ir.ForStat'> 133818737641264 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737641216 {
			parent = 133818737641264
				expr: 	<class 'ir.BinExpr'> 133818737641120 {
				parent = 133818737641216
					children:
					'plus'
					<class 'ir.Var'> 133818737640928 {
					parent = 133818737641120
						symbol: 	auto int a
					}
					<class 'ir.Const'> 133818737641024 {
					parent = 133818737641120
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int a
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737640832 {
			parent = 133818737641264
				children:
				'leq'
				<class 'ir.Var'> 133818737640736 {
				parent = 133818737640832
					symbol: 	auto int a
				}
				<class 'ir.Const'> 133818737640304 {
				parent = 133818737640832
					symbol: 	None
					value: 	20
				}
			}
			body: 	<class 'ir.StatList'> 133818737640400 {
			parent = 133818737641264
				children:
				<class 'ir.PrintStat'> 133818737640592 {
				parent = 133818737640400
					children:
					<class 'ir.Var'> 133818737640496 {
					parent = 133818737640592
						symbol: 	auto int a
					}
					expr: 	<class 'ir.Var'> 133818737640496 {
					parent = 133818737640592
						symbol: 	auto int a
					}
				}
			}
		}
		<class 'ir.AssignStat'> 133818737641408 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737641312 {
			parent = 133818737641408
				symbol: 	None
				value: 	10
			}
			symbol: 	global int i
			offset: 	None
		}
		<class 'ir.PrintStat'> 133818737641504 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737584640 {
			parent = 133818737641504
				symbol: 	None
				value: 	99991
			}
			expr: 	<class 'ir.Const'> 133818737584640 {
			parent = 133818737641504
				symbol: 	None
				value: 	99991
			}
		}
		<class 'ir.ForStat'> 133818737642704 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737642656 {
			parent = 133818737642704
				expr: 	<class 'ir.BinExpr'> 133818737642560 {
				parent = 133818737642656
					children:
					'plus'
					<class 'ir.Var'> 133818737642368 {
					parent = 133818737642560
						symbol: 	auto int i
					}
					<class 'ir.Const'> 133818737642464 {
					parent = 133818737642560
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int i
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737642272 {
			parent = 133818737642704
				children:
				'leq'
				<class 'ir.Var'> 133818737642176 {
				parent = 133818737642272
					symbol: 	auto int i
				}
				<class 'ir.Const'> 133818737641744 {
				parent = 133818737642272
					symbol: 	None
					value: 	15
				}
			}
			body: 	<class 'ir.StatList'> 133818737641840 {
			parent = 133818737642704
				children:
				<class 'ir.PrintStat'> 133818737642032 {
				parent = 133818737641840
					children:
					<class 'ir.Var'> 133818737641936 {
					parent = 133818737642032
						symbol: 	global int i
					}
					expr: 	<class 'ir.Var'> 133818737641936 {
					parent = 133818737642032
						symbol: 	global int i
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737642848 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737642752 {
			parent = 133818737642848
				symbol: 	None
				value: 	88881
			}
			expr: 	<class 'ir.Const'> 133818737642752 {
			parent = 133818737642848
				symbol: 	None
				value: 	88881
			}
		}
		<class 'ir.PrintStat'> 133818737643040 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737642944 {
			parent = 133818737643040
				symbol: 	None
				value: 	99992
			}
			expr: 	<class 'ir.Const'> 133818737642944 {
			parent = 133818737643040
				symbol: 	None
				value: 	99992
			}
		}
		<class 'ir.ForStat'> 133818737697552 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737697504 {
			parent = 133818737697552
				expr: 	<class 'ir.BinExpr'> 133818737697408 {
				parent = 133818737697504
					children:
					'plus'
					<class 'ir.Var'> 133818737697216 {
					parent = 133818737697408
						symbol: 	auto int j
					}
					<class 'ir.Const'> 133818737697312 {
					parent = 133818737697408
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int j
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737697120 {
			parent = 133818737697552
				children:
				'leq'
				<class 'ir.Var'> 133818737697024 {
				parent = 133818737697120
					symbol: 	auto int j
				}
				<class 'ir.Const'> 133818737643280 {
				parent = 133818737697120
					symbol: 	None
					value: 	5
				}
			}
			body: 	<class 'ir.StatList'> 133818737643376 {
			parent = 133818737697552
				children:
				<class 'ir.PrintStat'> 133818737696880 {
				parent = 133818737643376
					children:
					<class 'ir.Var'> 133818737643472 {
					parent = 133818737696880
						symbol: 	global int j
					}
					expr: 	<class 'ir.Var'> 133818737643472 {
					parent = 133818737696880
						symbol: 	global int j
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737697696 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737697600 {
			parent = 133818737697696
				symbol: 	None
				value: 	88882
			}
			expr: 	<class 'ir.Const'> 133818737697600 {
			parent = 133818737697696
				symbol: 	None
				value: 	88882
			}
		}
		<class 'ir.PrintStat'> 133818737697888 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737697792 {
			parent = 133818737697888
				symbol: 	None
				value: 	99993
			}
			expr: 	<class 'ir.Const'> 133818737697792 {
			parent = 133818737697888
				symbol: 	None
				value: 	99993
			}
		}
		<class 'ir.ForStat'> 133818737699280 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737699232 {
			parent = 133818737699280
				expr: 	<class 'ir.BinExpr'> 133818737699136 {
				parent = 133818737699232
					children:
					'plus'
					<class 'ir.Var'> 133818737698944 {
					parent = 133818737699136
						symbol: 	auto int k
					}
					<class 'ir.Const'> 133818737699040 {
					parent = 133818737699136
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int k
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737698848 {
			parent = 133818737699280
				children:
				'leq'
				<class 'ir.Var'> 133818737698752 {
				parent = 133818737698848
					symbol: 	auto int k
				}
				<class 'ir.Const'> 133818737698128 {
				parent = 133818737698848
					symbol: 	None
					value: 	5
				}
			}
			body: 	<class 'ir.StatList'> 133818737698224 {
			parent = 133818737699280
				children:
				<class 'ir.PrintStat'> 133818737698416 {
				parent = 133818737698224
					children:
					<class 'ir.Const'> 133818737698320 {
					parent = 133818737698416
						symbol: 	None
						value: 	77777
					}
					expr: 	<class 'ir.Const'> 133818737698320 {
					parent = 133818737698416
						symbol: 	None
						value: 	77777
					}
				}
				<class 'ir.PrintStat'> 133818737698608 {
				parent = 133818737698224
					children:
					<class 'ir.Var'> 133818737698512 {
					parent = 133818737698608
						symbol: 	global int k
					}
					expr: 	<class 'ir.Var'> 133818737698512 {
					parent = 133818737698608
						symbol: 	global int k
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737699424 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737699328 {
			parent = 133818737699424
				symbol: 	None
				value: 	88883
			}
			expr: 	<class 'ir.Const'> 133818737699328 {
			parent = 133818737699424
				symbol: 	None
				value: 	88883
			}
		}
		<class 'ir.PrintStat'> 133818737699616 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737699520 {
			parent = 133818737699616
				symbol: 	None
				value: 	99994
			}
			expr: 	<class 'ir.Const'> 133818737699520 {
			parent = 133818737699616
				symbol: 	None
				value: 	99994
			}
		}
		<class 'ir.ForStat'> 133818737700816 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737700768 {
			parent = 133818737700816
				expr: 	<class 'ir.BinExpr'> 133818737700672 {
				parent = 133818737700768
					children:
					'plus'
					<class 'ir.Var'> 133818737700480 {
					parent = 133818737700672
						symbol: 	auto int m
					}
					<class 'ir.Const'> 133818737700576 {
					parent = 133818737700672
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int m
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737700384 {
			parent = 133818737700816
				children:
				'leq'
				<class 'ir.Var'> 133818737700288 {
				parent = 133818737700384
					symbol: 	auto int m
				}
				<class 'ir.Const'> 133818737699856 {
				parent = 133818737700384
					symbol: 	None
					value: 	6
				}
			}
			body: 	<class 'ir.StatList'> 133818737699952 {
			parent = 133818737700816
				children:
				<class 'ir.PrintStat'> 133818737700144 {
				parent = 133818737699952
					children:
					<class 'ir.Var'> 133818737700048 {
					parent = 133818737700144
						symbol: 	global int m
					}
					expr: 	<class 'ir.Var'> 133818737700048 {
					parent = 133818737700144
						symbol: 	global int m
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737705120 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737705024 {
			parent = 133818737705120
				symbol: 	None
				value: 	88884
			}
			expr: 	<class 'ir.Const'> 133818737705024 {
			parent = 133818737705120
				symbol: 	None
				value: 	88884
			}
		}
		<class 'ir.PrintStat'> 133818737705312 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737705216 {
			parent = 133818737705312
				symbol: 	None
				value: 	99995
			}
			expr: 	<class 'ir.Const'> 133818737705216 {
			parent = 133818737705312
				symbol: 	None
				value: 	99995
			}
		}
		<class 'ir.ForStat'> 133818737706512 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737706464 {
			parent = 133818737706512
				expr: 	<class 'ir.BinExpr'> 133818737706368 {
				parent = 133818737706464
					children:
					'plus'
					<class 'ir.Var'> 133818737706176 {
					parent = 133818737706368
						symbol: 	auto int n
					}
					<class 'ir.Const'> 133818737706272 {
					parent = 133818737706368
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int n
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737706080 {
			parent = 133818737706512
				children:
				'leq'
				<class 'ir.Var'> 133818737705984 {
				parent = 133818737706080
					symbol: 	auto int n
				}
				<class 'ir.Const'> 133818737705552 {
				parent = 133818737706080
					symbol: 	None
					value: 	7
				}
			}
			body: 	<class 'ir.StatList'> 133818737705648 {
			parent = 133818737706512
				children:
				<class 'ir.PrintStat'> 133818737705840 {
				parent = 133818737705648
					children:
					<class 'ir.Var'> 133818737705744 {
					parent = 133818737705840
						symbol: 	global int n
					}
					expr: 	<class 'ir.Var'> 133818737705744 {
					parent = 133818737705840
						symbol: 	global int n
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737706656 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737706560 {
			parent = 133818737706656
				symbol: 	None
				value: 	88885
			}
			expr: 	<class 'ir.Const'> 133818737706560 {
			parent = 133818737706656
				symbol: 	None
				value: 	88885
			}
		}
		<class 'ir.PrintStat'> 133818737706848 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737706752 {
			parent = 133818737706848
				symbol: 	None
				value: 	99996
			}
			expr: 	<class 'ir.Const'> 133818737706752 {
			parent = 133818737706848
				symbol: 	None
				value: 	99996
			}
		}
		<class 'ir.ForStat'> 133818737708048 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737708000 {
			parent = 133818737708048
				expr: 	<class 'ir.BinExpr'> 133818737707904 {
				parent = 133818737708000
					children:
					'plus'
					<class 'ir.Var'> 133818737707712 {
					parent = 133818737707904
						symbol: 	auto int p
					}
					<class 'ir.Const'> 133818737707808 {
					parent = 133818737707904
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int p
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737707616 {
			parent = 133818737708048
				children:
				'leq'
				<class 'ir.Var'> 133818737707520 {
				parent = 133818737707616
					symbol: 	auto int p
				}
				<class 'ir.Const'> 133818737707088 {
				parent = 133818737707616
					symbol: 	None
					value: 	12
				}
			}
			body: 	<class 'ir.StatList'> 133818737707184 {
			parent = 133818737708048
				children:
				<class 'ir.PrintStat'> 133818737707376 {
				parent = 133818737707184
					children:
					<class 'ir.Var'> 133818737707280 {
					parent = 133818737707376
						symbol: 	global int p
					}
					expr: 	<class 'ir.Var'> 133818737707280 {
					parent = 133818737707376
						symbol: 	global int p
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737708192 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737708096 {
			parent = 133818737708192
				symbol: 	None
				value: 	88886
			}
			expr: 	<class 'ir.Const'> 133818737708096 {
			parent = 133818737708192
				symbol: 	None
				value: 	88886
			}
		}
		<class 'ir.AssignStat'> 133818737708384 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737708288 {
			parent = 133818737708384
				symbol: 	None
				value: 	0
			}
			symbol: 	global int sum
			offset: 	None
		}
		<class 'ir.PrintStat'> 133818737708480 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737585312 {
			parent = 133818737708480
				symbol: 	None
				value: 	99997
			}
			expr: 	<class 'ir.Const'> 133818737585312 {
			parent = 133818737708480
				symbol: 	None
				value: 	99997
			}
		}
		<class 'ir.ForStat'> 133818737718464 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737718416 {
			parent = 133818737718464
				expr: 	<class 'ir.BinExpr'> 133818737718320 {
				parent = 133818737718416
					children:
					'plus'
					<class 'ir.Var'> 133818737718128 {
					parent = 133818737718320
						symbol: 	auto int q
					}
					<class 'ir.Const'> 133818737718224 {
					parent = 133818737718320
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int q
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737718032 {
			parent = 133818737718464
				children:
				'leq'
				<class 'ir.Var'> 133818737717936 {
				parent = 133818737718032
					symbol: 	auto int q
				}
				<class 'ir.Const'> 133818737708720 {
				parent = 133818737718032
					symbol: 	None
					value: 	5
				}
			}
			body: 	<class 'ir.StatList'> 133818737708816 {
			parent = 133818737718464
				children:
				<class 'ir.AssignStat'> 133818737717456 {
				parent = 133818737708816
					expr: 	<class 'ir.BinExpr'> 133818737717360 {
					parent = 133818737717456
						children:
						'plus'
						<class 'ir.Var'> 133818737708912 {
						parent = 133818737717360
							symbol: 	global int sum
						}
						<class 'ir.Var'> 133818737709008 {
						parent = 133818737717360
							symbol: 	global int q
						}
					}
					symbol: 	global int sum
					offset: 	None
				}
				<class 'ir.PrintStat'> 133818737717600 {
				parent = 133818737708816
					children:
					<class 'ir.Var'> 133818737717504 {
					parent = 133818737717600
						symbol: 	global int q
					}
					expr: 	<class 'ir.Var'> 133818737717504 {
					parent = 133818737717600
						symbol: 	global int q
					}
				}
				<class 'ir.PrintStat'> 133818737717792 {
				parent = 133818737708816
					children:
					<class 'ir.Var'> 133818737717696 {
					parent = 133818737717792
						symbol: 	global int sum
					}
					expr: 	<class 'ir.Var'> 133818737717696 {
					parent = 133818737717792
						symbol: 	global int sum
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737718608 {
		parent = 133818737647824
			children:
			<class 'ir.Var'> 133818737718512 {
			parent = 133818737718608
				symbol: 	global int sum
			}
			expr: 	<class 'ir.Var'> 133818737718512 {
			parent = 133818737718608
				symbol: 	global int sum
			}
		}
		<class 'ir.PrintStat'> 133818737718800 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737718704 {
			parent = 133818737718800
				symbol: 	None
				value: 	88887
			}
			expr: 	<class 'ir.Const'> 133818737718704 {
			parent = 133818737718800
				symbol: 	None
				value: 	88887
			}
		}
		<class 'ir.AssignStat'> 133818737718992 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737718896 {
			parent = 133818737718992
				symbol: 	None
				value: 	100
			}
			symbol: 	global int x
			offset: 	None
		}
		<class 'ir.PrintStat'> 133818737719136 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737719040 {
			parent = 133818737719136
				symbol: 	None
				value: 	99998
			}
			expr: 	<class 'ir.Const'> 133818737719040 {
			parent = 133818737719136
				symbol: 	None
				value: 	99998
			}
		}
		<class 'ir.ForStat'> 133818737720672 {
		parent = 133818737647824
			step: 	<class 'ir.AssignStat'> 133818737720624 {
			parent = 133818737720672
				expr: 	<class 'ir.BinExpr'> 133818737720528 {
				parent = 133818737720624
					children:
					'plus'
					<class 'ir.Var'> 133818737720336 {
					parent = 133818737720528
						symbol: 	auto int r
					}
					<class 'ir.Const'> 133818737720432 {
					parent = 133818737720528
						symbol: 	None
						value: 	1
					}
				}
				symbol: 	auto int r
				offset: 	None
			}
			cond: 	<class 'ir.BinExpr'> 133818737720240 {
			parent = 133818737720672
				children:
				'leq'
				<class 'ir.Var'> 133818737720144 {
				parent = 133818737720240
					symbol: 	auto int r
				}
				<class 'ir.Const'> 133818737719376 {
				parent = 133818737720240
					symbol: 	None
					value: 	3
				}
			}
			body: 	<class 'ir.StatList'> 133818737719472 {
			parent = 133818737720672
				children:
				<class 'ir.AssignStat'> 133818737719856 {
				parent = 133818737719472
					expr: 	<class 'ir.BinExpr'> 133818737719760 {
					parent = 133818737719856
						children:
						'plus'
						<class 'ir.Var'> 133818737719568 {
						parent = 133818737719760
							symbol: 	global int x
						}
						<class 'ir.Var'> 133818737719664 {
						parent = 133818737719760
							symbol: 	global int r
						}
					}
					symbol: 	global int x
					offset: 	None
				}
				<class 'ir.PrintStat'> 133818737720000 {
				parent = 133818737719472
					children:
					<class 'ir.Var'> 133818737719904 {
					parent = 133818737720000
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 133818737719904 {
					parent = 133818737720000
						symbol: 	global int x
					}
				}
			}
		}
		<class 'ir.PrintStat'> 133818737720816 {
		parent = 133818737647824
			children:
			<class 'ir.Var'> 133818737720720 {
			parent = 133818737720816
				symbol: 	global int x
			}
			expr: 	<class 'ir.Var'> 133818737720720 {
			parent = 133818737720816
				symbol: 	global int x
			}
		}
		<class 'ir.PrintStat'> 133818737721008 {
		parent = 133818737647824
			children:
			<class 'ir.Const'> 133818737720912 {
			parent = 133818737721008
				symbol: 	None
				value: 	88888
			}
			expr: 	<class 'ir.Const'> 133818737720912 {
			parent = 133818737721008
				symbol: 	None
				value: 	88888
			}
		}
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737585888
navigating children of <class 'ir.BinExpr'> 133818737586080 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737647680
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 40
navigating children of <class 'ir.UnExpr'> 133818737648016 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737648112
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737648208
navigating children of <class 'ir.BinExpr'> 133818737648448 3
successfully navigated attr  cond  of <class 'ir.IfStat'> 133818737649216
navigating children of <class 'ir.StatList'> 133818737648928 1
navigating children of <class 'ir.PrintStat'> 133818737649120 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737649120
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 133818737649216
navigating children of <class 'ir.StatList'> 133818737648544 1
navigating children of <class 'ir.PrintStat'> 133818737648832 1
navigating children of <class 'ir.UnExpr'> 133818737648736 2
navigating children of <class 'ir.UnExpr'> 133818737648736 2
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737648832
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 133818737649216
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737649360
navigating children of <class 'ir.BinExpr'> 133818737649600 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737650512
navigating children of <class 'ir.StatList'> 133818737649696 3
successfully navigated attr  call  of <class 'ir.CallStat'> 133818737649888
navigating children of <class 'ir.BinExpr'> 133818737650176 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737650272
navigating children of <class 'ir.PrintStat'> 133818737650416 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737650416
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737650512
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737650656
navigating children of <class 'ir.BinExpr'> 133818737650896 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737665024
navigating children of <class 'ir.StatList'> 133818737650992 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737651664
navigating children of <class 'ir.BinExpr'> 133818737651520 3
navigating children of <class 'ir.BinExpr'> 133818737651328 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 133818737651664
navigating children of <class 'ir.PrintStat'> 133818737664544 1
navigating children of <class 'ir.ArrayElement'> 133818737664352 1
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.BinExpr'> 133818737664256 3
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.BinExpr'> 133818737664256 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737664352
navigating children of <class 'ir.ArrayElement'> 133818737664352 1
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.BinExpr'> 133818737664256 3
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.BinExpr'> 133818737664256 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737664352
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737664544
navigating children of <class 'ir.BinExpr'> 133818737664880 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737664976
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737665024
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737665168
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737665312
navigating children of <class 'ir.BinExpr'> 133818737665504 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737640112
navigating children of <class 'ir.StatList'> 133818737665600 1
navigating children of <class 'ir.BinExpr'> 133818737665888 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737640064
navigating children of <class 'ir.StatList'> 133818737665984 4
navigating children of <class 'ir.ArrayElement'> 133818737666896 1
navigating children of <class 'ir.BinExpr'> 133818737666992 3
navigating children of <class 'ir.BinExpr'> 133818737666992 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737666896
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737667088
navigating children of <class 'ir.BinExpr'> 133818737666704 3
navigating children of <class 'ir.BinExpr'> 133818737666416 3
navigating children of <class 'ir.BinExpr'> 133818737666608 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 133818737667088
navigating children of <class 'ir.PrintStat'> 133818737667856 1
navigating children of <class 'ir.ArrayElement'> 133818737667376 1
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.BinExpr'> 133818737667472 3
navigating children of <class 'ir.BinExpr'> 133818737667664 3
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.BinExpr'> 133818737667472 3
navigating children of <class 'ir.BinExpr'> 133818737667664 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737667376
navigating children of <class 'ir.ArrayElement'> 133818737667376 1
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.BinExpr'> 133818737667472 3
navigating children of <class 'ir.BinExpr'> 133818737667664 3
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.BinExpr'> 133818737667472 3
navigating children of <class 'ir.BinExpr'> 133818737667664 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737667376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737667856
navigating children of <class 'ir.BinExpr'> 133818737639584 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737639680
navigating children of <class 'ir.BinExpr'> 133818737639920 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640016
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737640064
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737640112
navigating children of <class 'ir.BinExpr'> 133818737641120 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737641216
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737641264
navigating children of <class 'ir.BinExpr'> 133818737640832 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737641264
navigating children of <class 'ir.StatList'> 133818737640400 1
navigating children of <class 'ir.PrintStat'> 133818737640592 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737640592
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737641264
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737641408
navigating children of <class 'ir.PrintStat'> 133818737641504 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737641504
navigating children of <class 'ir.BinExpr'> 133818737642560 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642656
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.BinExpr'> 133818737642272 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.StatList'> 133818737641840 1
navigating children of <class 'ir.PrintStat'> 133818737642032 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737642032
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.PrintStat'> 133818737642848 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737642848
navigating children of <class 'ir.PrintStat'> 133818737643040 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737643040
navigating children of <class 'ir.BinExpr'> 133818737697408 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737697504
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.BinExpr'> 133818737697120 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.StatList'> 133818737643376 1
navigating children of <class 'ir.PrintStat'> 133818737696880 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737696880
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.PrintStat'> 133818737697696 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737697696
navigating children of <class 'ir.PrintStat'> 133818737697888 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737697888
navigating children of <class 'ir.BinExpr'> 133818737699136 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737699232
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.BinExpr'> 133818737698848 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.StatList'> 133818737698224 2
navigating children of <class 'ir.PrintStat'> 133818737698416 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737698416
navigating children of <class 'ir.PrintStat'> 133818737698608 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737698608
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.PrintStat'> 133818737699424 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737699424
navigating children of <class 'ir.PrintStat'> 133818737699616 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737699616
navigating children of <class 'ir.BinExpr'> 133818737700672 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700768
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.BinExpr'> 133818737700384 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.StatList'> 133818737699952 1
navigating children of <class 'ir.PrintStat'> 133818737700144 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737700144
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.PrintStat'> 133818737705120 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705120
navigating children of <class 'ir.PrintStat'> 133818737705312 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705312
navigating children of <class 'ir.BinExpr'> 133818737706368 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737706464
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.BinExpr'> 133818737706080 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.StatList'> 133818737705648 1
navigating children of <class 'ir.PrintStat'> 133818737705840 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705840
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.PrintStat'> 133818737706656 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737706656
navigating children of <class 'ir.PrintStat'> 133818737706848 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737706848
navigating children of <class 'ir.BinExpr'> 133818737707904 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737708000
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.BinExpr'> 133818737707616 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.StatList'> 133818737707184 1
navigating children of <class 'ir.PrintStat'> 133818737707376 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737707376
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.PrintStat'> 133818737708192 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737708192
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737708384
navigating children of <class 'ir.PrintStat'> 133818737708480 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737708480
navigating children of <class 'ir.BinExpr'> 133818737718320 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737718416
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.BinExpr'> 133818737718032 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.StatList'> 133818737708816 3
navigating children of <class 'ir.BinExpr'> 133818737717360 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717456
navigating children of <class 'ir.PrintStat'> 133818737717600 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737717600
navigating children of <class 'ir.PrintStat'> 133818737717792 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737717792
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.PrintStat'> 133818737718608 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737718608
navigating children of <class 'ir.PrintStat'> 133818737718800 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737718800
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737718992
navigating children of <class 'ir.PrintStat'> 133818737719136 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737719136
navigating children of <class 'ir.BinExpr'> 133818737720528 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720624
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.BinExpr'> 133818737720240 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.StatList'> 133818737719472 2
navigating children of <class 'ir.BinExpr'> 133818737719760 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737719856
navigating children of <class 'ir.PrintStat'> 133818737720000 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737720000
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.PrintStat'> 133818737720816 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737720816
navigating children of <class 'ir.PrintStat'> 133818737721008 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737721008
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104

--- Navigating: Applying Lowering ---
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
Cannot lower 133818737585504 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 2
StatList : new 133818737750080
Lowering <class 'ir.Const'> 133818737585792
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737585888
StatList : new 133818737585792
Lowering <class 'ir.AssignStat'> 133818737585888
navigating children of <class 'ir.BinExpr'> 133818737586080 3
StatList : new 133818737750320
Lowering <class 'ir.Var'> 133818737585936
StatList : new 133818737750512
Lowering <class 'ir.Var'> 133818737585696
StatList : new 133818737750704
Lowering <class 'ir.BinExpr'> 133818737586080
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737647680
StatList : new 133818737586080
Lowering <class 'ir.AssignStat'> 133818737647680
Cannot lower 133818737585648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
Cannot lower 133818737584160 <class 'ir.Block'> 'Block' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
Cannot lower 133818737647728 <class 'ir.FunctionDef'> 'FunctionDef' object has no attribute 'lower'
Cannot lower 133818738260672 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 40
navigating children of <class 'ir.UnExpr'> 133818737648016 2
StatList : new 133818737750848
Lowering <class 'ir.Const'> 133818737647920
StatList : new 133818737751040
Lowering <class 'ir.UnExpr'> 133818737648016
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737648112
StatList : new 133818737648016
Lowering <class 'ir.AssignStat'> 133818737648112
StatList : new 133818737751136
Lowering <class 'ir.ReadStat'> 133818737583968
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737648208
StatList : new 133818737583968
Lowering <class 'ir.AssignStat'> 133818737648208
navigating children of <class 'ir.BinExpr'> 133818737648448 3
StatList : new 133818737751376
Lowering <class 'ir.Var'> 133818737648256
StatList : new 133818737751520
Lowering <class 'ir.Const'> 133818737648352
StatList : new 133818737751712
Lowering <class 'ir.BinExpr'> 133818737648448
successfully navigated attr  cond  of <class 'ir.IfStat'> 133818737649216
navigating children of <class 'ir.StatList'> 133818737648928 1
navigating children of <class 'ir.PrintStat'> 133818737649120 1
StatList : new 133818737751808
Lowering <class 'ir.Var'> 133818737649024
StatList : new 133818737752000
Lowering <class 'ir.Var'> 133818737649024
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737649120
StatList : new 133818737752096
Lowering <class 'ir.PrintStat'> 133818737649120
Cannot lower 133818737648928 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 133818737649216
navigating children of <class 'ir.StatList'> 133818737648544 1
navigating children of <class 'ir.PrintStat'> 133818737648832 1
navigating children of <class 'ir.UnExpr'> 133818737648736 2
StatList : new 133818737752336
Lowering <class 'ir.Var'> 133818737648640
StatList : new 133818737752528
Lowering <class 'ir.UnExpr'> 133818737648736
navigating children of <class 'ir.UnExpr'> 133818737648736 2
navigating children of <class 'ir.StatList'> 133818737752336 1
Cannot lower 133818737752288 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737752336 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 133818737648640
Lowering <class 'ir.UnExpr'> 133818737648736
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737648832
StatList : new 133818737752576
Lowering <class 'ir.PrintStat'> 133818737648832
Cannot lower 133818737648544 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 133818737649216
StatList : new 133818737753008
Lowering <class 'ir.IfStat'> 133818737649216
StatList : new 133818737753200
Lowering <class 'ir.Const'> 133818737649264
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737649360
StatList : new 133818737649264
Lowering <class 'ir.AssignStat'> 133818737649360
navigating children of <class 'ir.BinExpr'> 133818737649600 3
StatList : new 133818737753392
Lowering <class 'ir.Var'> 133818737649408
StatList : new 133818737753536
Lowering <class 'ir.Const'> 133818737649504
StatList : new 133818737753728
Lowering <class 'ir.BinExpr'> 133818737649600
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737650512
navigating children of <class 'ir.StatList'> 133818737649696 3
Cannot lower 133818737649792 <class 'ir.CallExpr'> 'CallExpr' object has no attribute 'lower'
successfully navigated attr  call  of <class 'ir.CallStat'> 133818737649888
Lowering <class 'ir.CallStat'> 133818737649888
navigating children of <class 'ir.BinExpr'> 133818737650176 3
StatList : new 133818737753872
Lowering <class 'ir.Var'> 133818737649984
StatList : new 133818737754016
Lowering <class 'ir.Const'> 133818737650080
StatList : new 133818737324192
Lowering <class 'ir.BinExpr'> 133818737650176
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737650272
StatList : new 133818737650176
Lowering <class 'ir.AssignStat'> 133818737650272
navigating children of <class 'ir.PrintStat'> 133818737650416 1
StatList : new 133818737324336
Lowering <class 'ir.Var'> 133818737650320
StatList : new 133818737324528
Lowering <class 'ir.Var'> 133818737650320
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737650416
StatList : new 133818737324624
Lowering <class 'ir.PrintStat'> 133818737650416
Cannot lower 133818737649696 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737650512
StatList : new 133818737324960
Lowering <class 'ir.WhileStat'> 133818737650512
StatList : new 133818737325152
Lowering <class 'ir.Const'> 133818737650560
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737650656
StatList : new 133818737650560
Lowering <class 'ir.AssignStat'> 133818737650656
navigating children of <class 'ir.BinExpr'> 133818737650896 3
StatList : new 133818737325344
Lowering <class 'ir.Var'> 133818737650704
StatList : new 133818737325488
Lowering <class 'ir.Const'> 133818737650800
StatList : new 133818737325680
Lowering <class 'ir.BinExpr'> 133818737650896
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737665024
navigating children of <class 'ir.StatList'> 133818737650992 3
StatList : new 133818737650944
Lowering <class 'ir.Var'> 133818737651424
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737651664
navigating children of <class 'ir.BinExpr'> 133818737651520 3
navigating children of <class 'ir.BinExpr'> 133818737651328 3
StatList : new 133818737325872
Lowering <class 'ir.Var'> 133818737651088
StatList : new 133818737326064
Lowering <class 'ir.Const'> 133818737651232
StatList : new 133818737326256
Lowering <class 'ir.BinExpr'> 133818737651328
StatList : new 133818737651376
Lowering <class 'ir.Const'> 133818737651136
StatList : new 133818737326496
Lowering <class 'ir.BinExpr'> 133818737651520
successfully navigated attr  offset  of <class 'ir.AssignStat'> 133818737651664
StatList : new 133818737326832
Lowering <class 'ir.AssignStat'> 133818737651664
navigating children of <class 'ir.PrintStat'> 133818737664544 1
navigating children of <class 'ir.ArrayElement'> 133818737664352 1
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.BinExpr'> 133818737664256 3
StatList : new 133818737327072
Lowering <class 'ir.Var'> 133818737584352
StatList : new 133818737327408
Lowering <class 'ir.Const'> 133818737664160
StatList : new 133818737327600
Lowering <class 'ir.BinExpr'> 133818737664256
StatList : new 133818737664304
Lowering <class 'ir.Const'> 133818737664064
StatList : new 133818737327840
Lowering <class 'ir.BinExpr'> 133818737664448
navigating children of <class 'ir.BinExpr'> 133818737664448 3
navigating children of <class 'ir.StatList'> 133818737327600 3
navigating children of <class 'ir.StatList'> 133818737327072 1
Cannot lower 133818737327024 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737327072 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737327408 1
Cannot lower 133818737664112 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737327408 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737327360 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737327600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737664304 1
Cannot lower 133818737664256 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737664304 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 133818737327120
Lowering <class 'ir.BinExpr'> 133818737664448
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737664352
StatList : new 133818737349104
Lowering <class 'ir.ArrayElement'> 133818737664352
navigating children of <class 'ir.ArrayElement'> 133818737664352 1
navigating children of <class 'ir.StatList'> 133818737327840 3
navigating children of <class 'ir.StatList'> 133818737327600 3
navigating children of <class 'ir.StatList'> 133818737327072 1
Cannot lower 133818737327024 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737327072 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737327408 1
Cannot lower 133818737664112 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737327408 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737327360 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737327600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737664304 1
Cannot lower 133818737664256 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737664304 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737327744 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737327840 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737327120 3
navigating children of <class 'ir.StatList'> 133818737327600 3
navigating children of <class 'ir.StatList'> 133818737327072 1
Cannot lower 133818737327024 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737327072 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737327408 1
Cannot lower 133818737664112 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737327408 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737327360 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737327600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737664304 1
Cannot lower 133818737664256 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737664304 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737328032 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737327120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737664352
StatList : new 133818737349536
Lowering <class 'ir.ArrayElement'> 133818737664352
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737664544
StatList : new 133818737349680
Lowering <class 'ir.PrintStat'> 133818737664544
navigating children of <class 'ir.BinExpr'> 133818737664880 3
StatList : new 133818737349920
Lowering <class 'ir.Var'> 133818737664688
StatList : new 133818737350112
Lowering <class 'ir.Const'> 133818737664784
StatList : new 133818737350304
Lowering <class 'ir.BinExpr'> 133818737664880
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737664976
StatList : new 133818737664880
Lowering <class 'ir.AssignStat'> 133818737664976
Cannot lower 133818737650992 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737665024
StatList : new 133818737350592
Lowering <class 'ir.WhileStat'> 133818737665024
StatList : new 133818737350784
Lowering <class 'ir.Const'> 133818737665072
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737665168
StatList : new 133818737665072
Lowering <class 'ir.AssignStat'> 133818737665168
StatList : new 133818737350976
Lowering <class 'ir.Const'> 133818737665216
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737665312
StatList : new 133818737665216
Lowering <class 'ir.AssignStat'> 133818737665312
navigating children of <class 'ir.BinExpr'> 133818737665504 3
StatList : new 133818737351168
Lowering <class 'ir.Var'> 133818737583872
StatList : new 133818737351312
Lowering <class 'ir.Const'> 133818737665408
StatList : new 133818737351504
Lowering <class 'ir.BinExpr'> 133818737665504
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737640112
navigating children of <class 'ir.StatList'> 133818737665600 1
navigating children of <class 'ir.BinExpr'> 133818737665888 3
StatList : new 133818737351600
Lowering <class 'ir.Var'> 133818737665696
StatList : new 133818737351744
Lowering <class 'ir.Const'> 133818737665792
StatList : new 133818737351936
Lowering <class 'ir.BinExpr'> 133818737665888
successfully navigated attr  cond  of <class 'ir.WhileStat'> 133818737640064
navigating children of <class 'ir.StatList'> 133818737665984 4
navigating children of <class 'ir.ArrayElement'> 133818737666896 1
navigating children of <class 'ir.BinExpr'> 133818737666992 3
StatList : new 133818737352080
Lowering <class 'ir.Var'> 133818737666320
StatList : new 133818737352224
Lowering <class 'ir.Const'> 133818737666800
StatList : new 133818737352416
Lowering <class 'ir.BinExpr'> 133818737666992
navigating children of <class 'ir.BinExpr'> 133818737666992 3
navigating children of <class 'ir.StatList'> 133818737352080 1
Cannot lower 133818737352032 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737352080 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737352224 1
Cannot lower 133818737666848 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737352224 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 133818737352608
Lowering <class 'ir.BinExpr'> 133818737666992
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737666896
StatList : new 133818737365488
Lowering <class 'ir.ArrayElement'> 133818737666896
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737667088
navigating children of <class 'ir.BinExpr'> 133818737666704 3
navigating children of <class 'ir.BinExpr'> 133818737666416 3
StatList : new 133818737365632
Lowering <class 'ir.Var'> 133818737666080
StatList : new 133818737365824
Lowering <class 'ir.Const'> 133818737666128
StatList : new 133818737366016
Lowering <class 'ir.BinExpr'> 133818737666416
navigating children of <class 'ir.BinExpr'> 133818737666608 3
StatList : new 133818737666464
Lowering <class 'ir.Var'> 133818737666224
StatList : new 133818737366112
Lowering <class 'ir.Const'> 133818737666512
StatList : new 133818737366400
Lowering <class 'ir.BinExpr'> 133818737666608
StatList : new 133818737366592
Lowering <class 'ir.BinExpr'> 133818737666704
successfully navigated attr  offset  of <class 'ir.AssignStat'> 133818737667088
StatList : new 133818737366880
Lowering <class 'ir.AssignStat'> 133818737667088
navigating children of <class 'ir.PrintStat'> 133818737667856 1
navigating children of <class 'ir.ArrayElement'> 133818737667376 1
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.BinExpr'> 133818737667472 3
StatList : new 133818737367120
Lowering <class 'ir.Var'> 133818737584544
StatList : new 133818737367456
Lowering <class 'ir.Const'> 133818737667184
StatList : new 133818737367648
Lowering <class 'ir.BinExpr'> 133818737667472
navigating children of <class 'ir.BinExpr'> 133818737667664 3
StatList : new 133818737667520
Lowering <class 'ir.Var'> 133818737667280
StatList : new 133818737367744
Lowering <class 'ir.Const'> 133818737667568
StatList : new 133818737368032
Lowering <class 'ir.BinExpr'> 133818737667664
StatList : new 133818737368224
Lowering <class 'ir.BinExpr'> 133818737667760
navigating children of <class 'ir.BinExpr'> 133818737667760 3
navigating children of <class 'ir.StatList'> 133818737367648 3
navigating children of <class 'ir.StatList'> 133818737367120 1
Cannot lower 133818737367072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737367120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367456 1
Cannot lower 133818737667232 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737367648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737368032 3
navigating children of <class 'ir.StatList'> 133818737667520 1
Cannot lower 133818737667472 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737667520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367744 1
Cannot lower 133818737667328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367744 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367840 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737368032 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 133818737368320
Lowering <class 'ir.BinExpr'> 133818737667760
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737667376
StatList : new 133818737368896
Lowering <class 'ir.ArrayElement'> 133818737667376
navigating children of <class 'ir.ArrayElement'> 133818737667376 1
navigating children of <class 'ir.StatList'> 133818737368224 3
navigating children of <class 'ir.StatList'> 133818737367648 3
navigating children of <class 'ir.StatList'> 133818737367120 1
Cannot lower 133818737367072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737367120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367456 1
Cannot lower 133818737667232 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737367648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737368032 3
navigating children of <class 'ir.StatList'> 133818737667520 1
Cannot lower 133818737667472 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737667520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367744 1
Cannot lower 133818737667328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367744 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367840 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737368032 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737368176 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737368224 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737368320 3
navigating children of <class 'ir.StatList'> 133818737367648 3
navigating children of <class 'ir.StatList'> 133818737367120 1
Cannot lower 133818737367072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737367120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367456 1
Cannot lower 133818737667232 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737367648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737368032 3
navigating children of <class 'ir.StatList'> 133818737667520 1
Cannot lower 133818737667472 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 133818737667520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 133818737367744 1
Cannot lower 133818737667328 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 133818737367744 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367840 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737368032 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 133818737367168 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 133818737368320 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 133818737667376
StatList : new 133818737381680
Lowering <class 'ir.ArrayElement'> 133818737667376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737667856
StatList : new 133818737381824
Lowering <class 'ir.PrintStat'> 133818737667856
navigating children of <class 'ir.BinExpr'> 133818737639584 3
StatList : new 133818737382064
Lowering <class 'ir.Var'> 133818737668000
StatList : new 133818737382256
Lowering <class 'ir.Const'> 133818737639488
StatList : new 133818737382448
Lowering <class 'ir.BinExpr'> 133818737639584
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737639680
StatList : new 133818737639584
Lowering <class 'ir.AssignStat'> 133818737639680
navigating children of <class 'ir.BinExpr'> 133818737639920 3
StatList : new 133818737382592
Lowering <class 'ir.Var'> 133818737639728
StatList : new 133818737382736
Lowering <class 'ir.Const'> 133818737639824
StatList : new 133818737382928
Lowering <class 'ir.BinExpr'> 133818737639920
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640016
StatList : new 133818737639920
Lowering <class 'ir.AssignStat'> 133818737640016
Cannot lower 133818737665984 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737640064
StatList : new 133818737383264
Lowering <class 'ir.WhileStat'> 133818737640064
Cannot lower 133818737665600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 133818737640112
StatList : new 133818737383600
Lowering <class 'ir.WhileStat'> 133818737640112
navigating children of <class 'ir.BinExpr'> 133818737641120 3
StatList : new 133818737383792
Lowering <class 'ir.Var'> 133818737640928
StatList : new 133818737383936
Lowering <class 'ir.Const'> 133818737641024
StatList : new 133818737384128
Lowering <class 'ir.BinExpr'> 133818737641120
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737641216
StatList : new 133818737641120
Lowering <class 'ir.AssignStat'> 133818737641216
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737641264
navigating children of <class 'ir.BinExpr'> 133818737640832 3
StatList : new 133818737384272
Lowering <class 'ir.Var'> 133818737640736
StatList : new 133818737384464
Lowering <class 'ir.Const'> 133818737640304
StatList : new 133818737384656
Lowering <class 'ir.BinExpr'> 133818737640832
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737641264
navigating children of <class 'ir.StatList'> 133818737640400 1
navigating children of <class 'ir.PrintStat'> 133818737640592 1
StatList : new 133818737384752
Lowering <class 'ir.Var'> 133818737640496
StatList : new 133818737384944
Lowering <class 'ir.Var'> 133818737640496
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737640592
StatList : new 133818737385040
Lowering <class 'ir.PrintStat'> 133818737640592
Cannot lower 133818737640400 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737641264
StatList : new 133818737385184
Lowering ForStat 133818737641264 into StatList
StatList : new 133818737401920
Lowering <class 'ir.ForStat'> 133818737641264
StatList : new 133818737640496
Lowering <class 'ir.Const'> 133818737641312
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737641408
StatList : new 133818737641312
Lowering <class 'ir.AssignStat'> 133818737641408
navigating children of <class 'ir.PrintStat'> 133818737641504 1
StatList : new 133818737402208
Lowering <class 'ir.Const'> 133818737584640
StatList : new 133818737402400
Lowering <class 'ir.Const'> 133818737584640
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737641504
StatList : new 133818737402544
Lowering <class 'ir.PrintStat'> 133818737641504
navigating children of <class 'ir.BinExpr'> 133818737642560 3
StatList : new 133818737402784
Lowering <class 'ir.Var'> 133818737642368
StatList : new 133818737402880
Lowering <class 'ir.Const'> 133818737642464
StatList : new 133818737403072
Lowering <class 'ir.BinExpr'> 133818737642560
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642656
StatList : new 133818737642560
Lowering <class 'ir.AssignStat'> 133818737642656
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.BinExpr'> 133818737642272 3
StatList : new 133818737403216
Lowering <class 'ir.Var'> 133818737642176
StatList : new 133818737403408
Lowering <class 'ir.Const'> 133818737641744
StatList : new 133818737403600
Lowering <class 'ir.BinExpr'> 133818737642272
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.StatList'> 133818737641840 1
navigating children of <class 'ir.PrintStat'> 133818737642032 1
StatList : new 133818737403696
Lowering <class 'ir.Var'> 133818737641936
StatList : new 133818737403888
Lowering <class 'ir.Var'> 133818737641936
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737642032
StatList : new 133818737403984
Lowering <class 'ir.PrintStat'> 133818737642032
Cannot lower 133818737641840 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737642704
StatList : new 133818737404128
Lowering ForStat 133818737642704 into StatList
StatList : new 133818737404416
Lowering <class 'ir.ForStat'> 133818737642704
navigating children of <class 'ir.PrintStat'> 133818737642848 1
StatList : new 133818737404320
Lowering <class 'ir.Const'> 133818737642752
StatList : new 133818737404704
Lowering <class 'ir.Const'> 133818737642752
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737642848
StatList : new 133818737404800
Lowering <class 'ir.PrintStat'> 133818737642848
navigating children of <class 'ir.PrintStat'> 133818737643040 1
StatList : new 133818737405040
Lowering <class 'ir.Const'> 133818737642944
StatList : new 133818737405184
Lowering <class 'ir.Const'> 133818737642944
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737643040
StatList : new 133818737405280
Lowering <class 'ir.PrintStat'> 133818737643040
navigating children of <class 'ir.BinExpr'> 133818737697408 3
StatList : new 133818737405520
Lowering <class 'ir.Var'> 133818737697216
StatList : new 133818737405616
Lowering <class 'ir.Const'> 133818737697312
StatList : new 133818737405808
Lowering <class 'ir.BinExpr'> 133818737697408
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737697504
StatList : new 133818737697408
Lowering <class 'ir.AssignStat'> 133818737697504
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.BinExpr'> 133818737697120 3
StatList : new 133818737414256
Lowering <class 'ir.Var'> 133818737697024
StatList : new 133818737414400
Lowering <class 'ir.Const'> 133818737643280
StatList : new 133818737414592
Lowering <class 'ir.BinExpr'> 133818737697120
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.StatList'> 133818737643376 1
navigating children of <class 'ir.PrintStat'> 133818737696880 1
StatList : new 133818737414688
Lowering <class 'ir.Var'> 133818737643472
StatList : new 133818737414880
Lowering <class 'ir.Var'> 133818737643472
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737696880
StatList : new 133818737414976
Lowering <class 'ir.PrintStat'> 133818737696880
Cannot lower 133818737643376 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737697552
StatList : new 133818737415120
Lowering ForStat 133818737697552 into StatList
StatList : new 133818737415408
Lowering <class 'ir.ForStat'> 133818737697552
navigating children of <class 'ir.PrintStat'> 133818737697696 1
StatList : new 133818737415312
Lowering <class 'ir.Const'> 133818737697600
StatList : new 133818737415696
Lowering <class 'ir.Const'> 133818737697600
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737697696
StatList : new 133818737415792
Lowering <class 'ir.PrintStat'> 133818737697696
navigating children of <class 'ir.PrintStat'> 133818737697888 1
StatList : new 133818737416032
Lowering <class 'ir.Const'> 133818737697792
StatList : new 133818737416176
Lowering <class 'ir.Const'> 133818737697792
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737697888
StatList : new 133818737416272
Lowering <class 'ir.PrintStat'> 133818737697888
navigating children of <class 'ir.BinExpr'> 133818737699136 3
StatList : new 133818737416512
Lowering <class 'ir.Var'> 133818737698944
StatList : new 133818737416608
Lowering <class 'ir.Const'> 133818737699040
StatList : new 133818737416800
Lowering <class 'ir.BinExpr'> 133818737699136
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737699232
StatList : new 133818737699136
Lowering <class 'ir.AssignStat'> 133818737699232
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.BinExpr'> 133818737698848 3
StatList : new 133818737416944
Lowering <class 'ir.Var'> 133818737698752
StatList : new 133818737417136
Lowering <class 'ir.Const'> 133818737698128
StatList : new 133818737417328
Lowering <class 'ir.BinExpr'> 133818737698848
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.StatList'> 133818737698224 2
navigating children of <class 'ir.PrintStat'> 133818737698416 1
StatList : new 133818737417424
Lowering <class 'ir.Const'> 133818737698320
StatList : new 133818737417616
Lowering <class 'ir.Const'> 133818737698320
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737698416
StatList : new 133818737417712
Lowering <class 'ir.PrintStat'> 133818737698416
navigating children of <class 'ir.PrintStat'> 133818737698608 1
StatList : new 133818737417952
Lowering <class 'ir.Var'> 133818737698512
StatList : new 133818737418096
Lowering <class 'ir.Var'> 133818737698512
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737698608
StatList : new 133818737229888
Lowering <class 'ir.PrintStat'> 133818737698608
Cannot lower 133818737698224 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737699280
StatList : new 133818737229984
Lowering ForStat 133818737699280 into StatList
StatList : new 133818737230272
Lowering <class 'ir.ForStat'> 133818737699280
navigating children of <class 'ir.PrintStat'> 133818737699424 1
StatList : new 133818737230176
Lowering <class 'ir.Const'> 133818737699328
StatList : new 133818737230560
Lowering <class 'ir.Const'> 133818737699328
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737699424
StatList : new 133818737230656
Lowering <class 'ir.PrintStat'> 133818737699424
navigating children of <class 'ir.PrintStat'> 133818737699616 1
StatList : new 133818737230896
Lowering <class 'ir.Const'> 133818737699520
StatList : new 133818737231040
Lowering <class 'ir.Const'> 133818737699520
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737699616
StatList : new 133818737231136
Lowering <class 'ir.PrintStat'> 133818737699616
navigating children of <class 'ir.BinExpr'> 133818737700672 3
StatList : new 133818737231376
Lowering <class 'ir.Var'> 133818737700480
StatList : new 133818737231472
Lowering <class 'ir.Const'> 133818737700576
StatList : new 133818737231664
Lowering <class 'ir.BinExpr'> 133818737700672
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700768
StatList : new 133818737700672
Lowering <class 'ir.AssignStat'> 133818737700768
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.BinExpr'> 133818737700384 3
StatList : new 133818737231808
Lowering <class 'ir.Var'> 133818737700288
StatList : new 133818737232000
Lowering <class 'ir.Const'> 133818737699856
StatList : new 133818737232192
Lowering <class 'ir.BinExpr'> 133818737700384
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.StatList'> 133818737699952 1
navigating children of <class 'ir.PrintStat'> 133818737700144 1
StatList : new 133818737232288
Lowering <class 'ir.Var'> 133818737700048
StatList : new 133818737232480
Lowering <class 'ir.Var'> 133818737700048
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737700144
StatList : new 133818737232576
Lowering <class 'ir.PrintStat'> 133818737700144
Cannot lower 133818737699952 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737700816
StatList : new 133818737232720
Lowering ForStat 133818737700816 into StatList
StatList : new 133818737233008
Lowering <class 'ir.ForStat'> 133818737700816
navigating children of <class 'ir.PrintStat'> 133818737705120 1
StatList : new 133818737232912
Lowering <class 'ir.Const'> 133818737705024
StatList : new 133818737233296
Lowering <class 'ir.Const'> 133818737705024
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705120
StatList : new 133818737233392
Lowering <class 'ir.PrintStat'> 133818737705120
navigating children of <class 'ir.PrintStat'> 133818737705312 1
StatList : new 133818737233632
Lowering <class 'ir.Const'> 133818737705216
StatList : new 133818737233776
Lowering <class 'ir.Const'> 133818737705216
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705312
StatList : new 133818737242176
Lowering <class 'ir.PrintStat'> 133818737705312
navigating children of <class 'ir.BinExpr'> 133818737706368 3
StatList : new 133818737242368
Lowering <class 'ir.Var'> 133818737706176
StatList : new 133818737242464
Lowering <class 'ir.Const'> 133818737706272
StatList : new 133818737242656
Lowering <class 'ir.BinExpr'> 133818737706368
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737706464
StatList : new 133818737706368
Lowering <class 'ir.AssignStat'> 133818737706464
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.BinExpr'> 133818737706080 3
StatList : new 133818737242800
Lowering <class 'ir.Var'> 133818737705984
StatList : new 133818737242992
Lowering <class 'ir.Const'> 133818737705552
StatList : new 133818737243184
Lowering <class 'ir.BinExpr'> 133818737706080
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.StatList'> 133818737705648 1
navigating children of <class 'ir.PrintStat'> 133818737705840 1
StatList : new 133818737243280
Lowering <class 'ir.Var'> 133818737705744
StatList : new 133818737243472
Lowering <class 'ir.Var'> 133818737705744
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737705840
StatList : new 133818737243568
Lowering <class 'ir.PrintStat'> 133818737705840
Cannot lower 133818737705648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737706512
StatList : new 133818737243712
Lowering ForStat 133818737706512 into StatList
StatList : new 133818737244000
Lowering <class 'ir.ForStat'> 133818737706512
navigating children of <class 'ir.PrintStat'> 133818737706656 1
StatList : new 133818737243904
Lowering <class 'ir.Const'> 133818737706560
StatList : new 133818737244288
Lowering <class 'ir.Const'> 133818737706560
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737706656
StatList : new 133818737244384
Lowering <class 'ir.PrintStat'> 133818737706656
navigating children of <class 'ir.PrintStat'> 133818737706848 1
StatList : new 133818737244624
Lowering <class 'ir.Const'> 133818737706752
StatList : new 133818737244768
Lowering <class 'ir.Const'> 133818737706752
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737706848
StatList : new 133818737244864
Lowering <class 'ir.PrintStat'> 133818737706848
navigating children of <class 'ir.BinExpr'> 133818737707904 3
StatList : new 133818737245104
Lowering <class 'ir.Var'> 133818737707712
StatList : new 133818737245200
Lowering <class 'ir.Const'> 133818737707808
StatList : new 133818737245392
Lowering <class 'ir.BinExpr'> 133818737707904
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737708000
StatList : new 133818737707904
Lowering <class 'ir.AssignStat'> 133818737708000
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.BinExpr'> 133818737707616 3
StatList : new 133818737245536
Lowering <class 'ir.Var'> 133818737707520
StatList : new 133818737245728
Lowering <class 'ir.Const'> 133818737707088
StatList : new 133818737245920
Lowering <class 'ir.BinExpr'> 133818737707616
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.StatList'> 133818737707184 1
navigating children of <class 'ir.PrintStat'> 133818737707376 1
StatList : new 133818737246016
Lowering <class 'ir.Var'> 133818737707280
StatList : new 133818737246160
Lowering <class 'ir.Var'> 133818737707280
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737707376
StatList : new 133818737270944
Lowering <class 'ir.PrintStat'> 133818737707376
Cannot lower 133818737707184 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737708048
StatList : new 133818737271088
Lowering ForStat 133818737708048 into StatList
StatList : new 133818737271376
Lowering <class 'ir.ForStat'> 133818737708048
navigating children of <class 'ir.PrintStat'> 133818737708192 1
StatList : new 133818737271280
Lowering <class 'ir.Const'> 133818737708096
StatList : new 133818737271664
Lowering <class 'ir.Const'> 133818737708096
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737708192
StatList : new 133818737271760
Lowering <class 'ir.PrintStat'> 133818737708192
StatList : new 133818737271952
Lowering <class 'ir.Const'> 133818737708288
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737708384
StatList : new 133818737708288
Lowering <class 'ir.AssignStat'> 133818737708384
navigating children of <class 'ir.PrintStat'> 133818737708480 1
StatList : new 133818737272144
Lowering <class 'ir.Const'> 133818737585312
StatList : new 133818737272336
Lowering <class 'ir.Const'> 133818737585312
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737708480
StatList : new 133818737272432
Lowering <class 'ir.PrintStat'> 133818737708480
navigating children of <class 'ir.BinExpr'> 133818737718320 3
StatList : new 133818737272672
Lowering <class 'ir.Var'> 133818737718128
StatList : new 133818737272768
Lowering <class 'ir.Const'> 133818737718224
StatList : new 133818737272960
Lowering <class 'ir.BinExpr'> 133818737718320
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737718416
StatList : new 133818737718320
Lowering <class 'ir.AssignStat'> 133818737718416
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.BinExpr'> 133818737718032 3
StatList : new 133818737273104
Lowering <class 'ir.Var'> 133818737717936
StatList : new 133818737273296
Lowering <class 'ir.Const'> 133818737708720
StatList : new 133818737273488
Lowering <class 'ir.BinExpr'> 133818737718032
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.StatList'> 133818737708816 3
navigating children of <class 'ir.BinExpr'> 133818737717360 3
StatList : new 133818737273584
Lowering <class 'ir.Var'> 133818737708912
StatList : new 133818737273728
Lowering <class 'ir.Var'> 133818737709008
StatList : new 133818737273920
Lowering <class 'ir.BinExpr'> 133818737717360
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717456
StatList : new 133818737717360
Lowering <class 'ir.AssignStat'> 133818737717456
navigating children of <class 'ir.PrintStat'> 133818737717600 1
StatList : new 133818737274064
Lowering <class 'ir.Var'> 133818737717504
StatList : new 133818737274304
Lowering <class 'ir.Var'> 133818737717504
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737717600
StatList : new 133818737274400
Lowering <class 'ir.PrintStat'> 133818737717600
navigating children of <class 'ir.PrintStat'> 133818737717792 1
StatList : new 133818737274640
Lowering <class 'ir.Var'> 133818737717696
StatList : new 133818737274784
Lowering <class 'ir.Var'> 133818737717696
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737717792
StatList : new 133818737283184
Lowering <class 'ir.PrintStat'> 133818737717792
Cannot lower 133818737708816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737718464
StatList : new 133818737283280
Lowering ForStat 133818737718464 into StatList
StatList : new 133818737283568
Lowering <class 'ir.ForStat'> 133818737718464
navigating children of <class 'ir.PrintStat'> 133818737718608 1
StatList : new 133818737283472
Lowering <class 'ir.Var'> 133818737718512
StatList : new 133818737283856
Lowering <class 'ir.Var'> 133818737718512
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737718608
StatList : new 133818737283952
Lowering <class 'ir.PrintStat'> 133818737718608
navigating children of <class 'ir.PrintStat'> 133818737718800 1
StatList : new 133818737284192
Lowering <class 'ir.Const'> 133818737718704
StatList : new 133818737284336
Lowering <class 'ir.Const'> 133818737718704
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737718800
StatList : new 133818737284432
Lowering <class 'ir.PrintStat'> 133818737718800
StatList : new 133818737284624
Lowering <class 'ir.Const'> 133818737718896
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737718992
StatList : new 133818737718896
Lowering <class 'ir.AssignStat'> 133818737718992
navigating children of <class 'ir.PrintStat'> 133818737719136 1
StatList : new 133818737284816
Lowering <class 'ir.Const'> 133818737719040
StatList : new 133818737285008
Lowering <class 'ir.Const'> 133818737719040
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737719136
StatList : new 133818737285104
Lowering <class 'ir.PrintStat'> 133818737719136
navigating children of <class 'ir.BinExpr'> 133818737720528 3
StatList : new 133818737285344
Lowering <class 'ir.Var'> 133818737720336
StatList : new 133818737285440
Lowering <class 'ir.Const'> 133818737720432
StatList : new 133818737285632
Lowering <class 'ir.BinExpr'> 133818737720528
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720624
StatList : new 133818737720528
Lowering <class 'ir.AssignStat'> 133818737720624
successfully navigated attr  step  of <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.BinExpr'> 133818737720240 3
StatList : new 133818737285776
Lowering <class 'ir.Var'> 133818737720144
StatList : new 133818737285968
Lowering <class 'ir.Const'> 133818737719376
StatList : new 133818737286160
Lowering <class 'ir.BinExpr'> 133818737720240
successfully navigated attr  cond  of <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.StatList'> 133818737719472 2
navigating children of <class 'ir.BinExpr'> 133818737719760 3
StatList : new 133818737286256
Lowering <class 'ir.Var'> 133818737719568
StatList : new 133818737286400
Lowering <class 'ir.Var'> 133818737719664
StatList : new 133818737286592
Lowering <class 'ir.BinExpr'> 133818737719760
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737719856
StatList : new 133818737719760
Lowering <class 'ir.AssignStat'> 133818737719856
navigating children of <class 'ir.PrintStat'> 133818737720000 1
StatList : new 133818737286736
Lowering <class 'ir.Var'> 133818737719904
StatList : new 133818737286976
Lowering <class 'ir.Var'> 133818737719904
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737720000
StatList : new 133818737287072
Lowering <class 'ir.PrintStat'> 133818737720000
Cannot lower 133818737719472 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 133818737720672
StatList : new 133818737303664
Lowering ForStat 133818737720672 into StatList
StatList : new 133818737303952
Lowering <class 'ir.ForStat'> 133818737720672
navigating children of <class 'ir.PrintStat'> 133818737720816 1
StatList : new 133818737303856
Lowering <class 'ir.Var'> 133818737720720
StatList : new 133818737286832
Lowering <class 'ir.Var'> 133818737720720
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737720816
StatList : new 133818737284816
Lowering <class 'ir.PrintStat'> 133818737720816
navigating children of <class 'ir.PrintStat'> 133818737721008 1
StatList : new 133818737283280
Lowering <class 'ir.Const'> 133818737720912
StatList : new 133818737274592
Lowering <class 'ir.Const'> 133818737720912
successfully navigated attr  expr  of <class 'ir.PrintStat'> 133818737721008
StatList : new 133818737274016
Lowering <class 'ir.PrintStat'> 133818737721008
Cannot lower 133818737647824 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104
Cannot lower 133818737721104 <class 'ir.Block'> 'Block' object has no attribute 'lower'

--- IR Tree After Lowering ---
<class 'ir.Block'> 133818737721104 {
                                                                      <<<<<----- BUG? MISSING PARENT
	defs: 	<class 'ir.DefinitionList'> 133818738260672 {
	parent = 133818737721104
		children:
		<class 'ir.FunctionDef'> 133818737647728 {
		parent = 133818738260672
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 133818737584160 {
			parent = 133818737647728
				defs: 	<class 'ir.DefinitionList'> 133818737585504 {
				parent = 133818737584160
				}
				body: 	<class 'ir.StatList'> 133818737585648 {
				parent = 133818737584160
					children:
					<class 'ir.StatList'> 133818737585792 {
					parent = 133818737585648
						children:
						<class 'ir.StatList'> 133818737750080 {
						parent = 133818737585792
							children:
							reg int t0 <- 1234
						}
						auto int test <- reg int t0
					}
					<class 'ir.StatList'> 133818737586080 {
					parent = 133818737585648
						children:
						<class 'ir.StatList'> 133818737750704 {
						parent = 133818737586080
							children:
							<class 'ir.StatList'> 133818737750320 {
							parent = 133818737750704
								children:
								reg int t1 <- global int x
							}
							<class 'ir.StatList'> 133818737750512 {
							parent = 133818737750704
								children:
								reg int t2 <- global int x
							}
							reg int32_t t3 <- reg int t1 times reg int t2
						}
						global int squ <- reg int32_t t3
					}
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				auto function square
				
			}
		}
	}
	body: 	<class 'ir.StatList'> 133818737647824 {
	parent = 133818737721104
		children:
		<class 'ir.StatList'> 133818737648016 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737751040 {
			parent = 133818737648016
				children:
				<class 'ir.StatList'> 133818737750848 {
				parent = 133818737751040
					children:
					reg int t4 <- 1
				}
				reg int t5 <- minus reg int t4
			}
			global int x <- reg int t5
		}
		<class 'ir.StatList'> 133818737583968 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737751136 {
			parent = 133818737583968
				children:
				read reg int t6
			}
			global int x <- reg int t6
		}
		<class 'ir.StatList'> 133818737753008 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737751712 {
			parent = 133818737753008
				children:
				<class 'ir.StatList'> 133818737751376 {
				parent = 133818737751712
					children:
					reg int t7 <- global int x
				}
				<class 'ir.StatList'> 133818737751520 {
				parent = 133818737751712
					children:
					reg int t8 <- 100
				}
				reg int32_t t9 <- reg int t7 gtr reg int t8
			}
			branch on reg int32_t t9 to auto label label2
			<class 'ir.StatList'> 133818737648928 {
			parent = 133818737753008
				children:
				<class 'ir.StatList'> 133818737752096 {
				parent = 133818737648928
					children:
					<class 'ir.StatList'> 133818737752000 {
					parent = 133818737752096
						children:
						reg int t11 <- global int x
					}
					print reg int t11
				}
			}
			branch  to auto label label1
			label2: <class 'ir.StatList'> 133818737648544 {
			parent = 133818737753008
				children:
				<class 'ir.StatList'> 133818737752576 {
				parent = 133818737648544
					children:
					<class 'ir.StatList'> 133818737648640 {
					parent = 133818737752576
						children:
						<class 'ir.StatList'> 133818737752336 {
						parent = 133818737648640
							children:
							reg int t12 <- global int x
						}
						reg int t14 <- minus reg int t12
					}
					print reg int t14
				}
			}
			label1: <class 'ir.EmptyStat'> 133818737648736 {
			parent = 133818737753008
			}
		}
		<class 'ir.StatList'> 133818737649264 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737753200 {
			parent = 133818737649264
				children:
				reg int t15 <- 1
			}
			global int x <- reg int t15
		}
		<class 'ir.StatList'> 133818737324960 {
		parent = 133818737647824
			children:
			label3: <class 'ir.StatList'> 133818737753728 {
			parent = 133818737324960
				children:
				<class 'ir.StatList'> 133818737753392 {
				parent = 133818737753728
					children:
					reg int t16 <- global int x
				}
				<class 'ir.StatList'> 133818737753536 {
				parent = 133818737753728
					children:
					reg int t17 <- 10
				}
				reg int32_t t18 <- reg int t16 leq reg int t17
			}
			branch on not reg int32_t t18 to auto label label4
			<class 'ir.StatList'> 133818737649696 {
			parent = 133818737324960
				children:
				call  to auto function square
				<class 'ir.StatList'> 133818737650176 {
				parent = 133818737649696
					children:
					<class 'ir.StatList'> 133818737324192 {
					parent = 133818737650176
						children:
						<class 'ir.StatList'> 133818737753872 {
						parent = 133818737324192
							children:
							reg int t19 <- global int x
						}
						<class 'ir.StatList'> 133818737754016 {
						parent = 133818737324192
							children:
							reg int t20 <- 1
						}
						reg int32_t t21 <- reg int t19 plus reg int t20
					}
					global int x <- reg int32_t t21
				}
				<class 'ir.StatList'> 133818737324624 {
				parent = 133818737649696
					children:
					<class 'ir.StatList'> 133818737324528 {
					parent = 133818737324624
						children:
						reg int t23 <- global int squ
					}
					print reg int t23
				}
			}
			branch  to auto label label3
			label4: <class 'ir.EmptyStat'> 133818737650368 {
			parent = 133818737324960
			}
		}
		<class 'ir.StatList'> 133818737650560 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737325152 {
			parent = 133818737650560
				children:
				reg int t24 <- 101
			}
			global int x <- reg int t24
		}
		<class 'ir.StatList'> 133818737350592 {
		parent = 133818737647824
			children:
			label5: <class 'ir.StatList'> 133818737325680 {
			parent = 133818737350592
				children:
				<class 'ir.StatList'> 133818737325344 {
				parent = 133818737325680
					children:
					reg int t25 <- global int x
				}
				<class 'ir.StatList'> 133818737325488 {
				parent = 133818737325680
					children:
					reg int t26 <- 105
				}
				reg int32_t t27 <- reg int t25 leq reg int t26
			}
			branch on not reg int32_t t27 to auto label label6
			<class 'ir.StatList'> 133818737650992 {
			parent = 133818737350592
				children:
				<class 'ir.StatList'> 133818737326832 {
				parent = 133818737650992
					children:
					<class 'ir.StatList'> 133818737650944 {
					parent = 133818737326832
						children:
						reg int t28 <- global int x
					}
					<class 'ir.StatList'> 133818737326496 {
					parent = 133818737326832
						children:
						<class 'ir.StatList'> 133818737326256 {
						parent = 133818737326496
							children:
							<class 'ir.StatList'> 133818737325872 {
							parent = 133818737326256
								children:
								reg int t29 <- global int x
							}
							<class 'ir.StatList'> 133818737326064 {
							parent = 133818737326256
								children:
								reg int t30 <- 100
							}
							reg int32_t t31 <- reg int t29 minus reg int t30
						}
						<class 'ir.StatList'> 133818737651376 {
						parent = 133818737326496
							children:
							reg int t32 <- 1
						}
						reg int32_t t33 <- reg int32_t t31 times reg int t32
					}
					reg &char t34 <- &(global char[5] arr)
					reg &char t35 <- reg &char t34 plus reg int32_t t33
					[reg &char t35] <- reg int t28
				}
				<class 'ir.StatList'> 133818737349680 {
				parent = 133818737650992
					children:
					<class 'ir.StatList'> 133818737349536 {
					parent = 133818737349680
						children:
						<class 'ir.StatList'> 133818737327120 {
						parent = 133818737349536
							children:
							<class 'ir.StatList'> 133818737327600 {
							parent = 133818737327120
								children:
								<class 'ir.StatList'> 133818737327072 {
								parent = 133818737327600
									children:
									reg int t36 <- global int x
								}
								<class 'ir.StatList'> 133818737327408 {
								parent = 133818737327600
									children:
									reg int t37 <- 100
								}
								reg int32_t t38 <- reg int t36 minus reg int t37
							}
							<class 'ir.StatList'> 133818737664304 {
							parent = 133818737327120
								children:
								reg int t39 <- 1
							}
							reg int32_t t41 <- reg int32_t t38 times reg int t39
						}
						reg &char t46 <- &(global char[5] arr)
						reg &char t47 <- reg &char t46 plus reg int32_t t41
						reg char t45 <- [reg &char t47]
					}
					print reg char t45
				}
				<class 'ir.StatList'> 133818737664880 {
				parent = 133818737650992
					children:
					<class 'ir.StatList'> 133818737350304 {
					parent = 133818737664880
						children:
						<class 'ir.StatList'> 133818737349920 {
						parent = 133818737350304
							children:
							reg int t48 <- global int x
						}
						<class 'ir.StatList'> 133818737350112 {
						parent = 133818737350304
							children:
							reg int t49 <- 1
						}
						reg int32_t t50 <- reg int t48 plus reg int t49
					}
					global int x <- reg int32_t t50
				}
			}
			branch  to auto label label5
			label6: <class 'ir.EmptyStat'> 133818737664832 {
			parent = 133818737350592
			}
		}
		<class 'ir.StatList'> 133818737665072 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737350784 {
			parent = 133818737665072
				children:
				reg int t51 <- 1
			}
			global int x <- reg int t51
		}
		<class 'ir.StatList'> 133818737665216 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737350976 {
			parent = 133818737665216
				children:
				reg int t52 <- 1
			}
			global int y <- reg int t52
		}
		<class 'ir.StatList'> 133818737383600 {
		parent = 133818737647824
			children:
			label9: <class 'ir.StatList'> 133818737351504 {
			parent = 133818737383600
				children:
				<class 'ir.StatList'> 133818737351168 {
				parent = 133818737351504
					children:
					reg int t53 <- global int x
				}
				<class 'ir.StatList'> 133818737351312 {
				parent = 133818737351504
					children:
					reg int t54 <- 5
				}
				reg int32_t t55 <- reg int t53 leq reg int t54
			}
			branch on not reg int32_t t55 to auto label label10
			<class 'ir.StatList'> 133818737665600 {
			parent = 133818737383600
				children:
				<class 'ir.StatList'> 133818737383264 {
				parent = 133818737665600
					children:
					label7: <class 'ir.StatList'> 133818737351936 {
					parent = 133818737383264
						children:
						<class 'ir.StatList'> 133818737351600 {
						parent = 133818737351936
							children:
							reg int t56 <- global int y
						}
						<class 'ir.StatList'> 133818737351744 {
						parent = 133818737351936
							children:
							reg int t57 <- 5
						}
						reg int32_t t58 <- reg int t56 leq reg int t57
					}
					branch on not reg int32_t t58 to auto label label8
					<class 'ir.StatList'> 133818737665984 {
					parent = 133818737383264
						children:
						<class 'ir.StatList'> 133818737366880 {
						parent = 133818737665984
							children:
							<class 'ir.StatList'> 133818737365488 {
							parent = 133818737366880
								children:
								<class 'ir.StatList'> 133818737352608 {
								parent = 133818737365488
									children:
									<class 'ir.StatList'> 133818737352080 {
									parent = 133818737352608
										children:
										reg int t59 <- global int x
									}
									<class 'ir.StatList'> 133818737352224 {
									parent = 133818737352608
										children:
										reg int t60 <- 1
									}
									reg int32_t t62 <- reg int t59 times reg int t60
								}
								reg &char t64 <- &(global char[5] arr)
								reg &char t65 <- reg &char t64 plus reg int32_t t62
								reg char t63 <- [reg &char t65]
							}
							<class 'ir.StatList'> 133818737366592 {
							parent = 133818737366880
								children:
								<class 'ir.StatList'> 133818737366016 {
								parent = 133818737366592
									children:
									<class 'ir.StatList'> 133818737365632 {
									parent = 133818737366016
										children:
										reg int t66 <- global int x
									}
									<class 'ir.StatList'> 133818737365824 {
									parent = 133818737366016
										children:
										reg int t67 <- 10
									}
									reg int32_t t68 <- reg int t66 times reg int t67
								}
								<class 'ir.StatList'> 133818737366400 {
								parent = 133818737366592
									children:
									<class 'ir.StatList'> 133818737666464 {
									parent = 133818737366400
										children:
										reg int t69 <- global int y
									}
									<class 'ir.StatList'> 133818737366112 {
									parent = 133818737366400
										children:
										reg int t70 <- 2
									}
									reg int32_t t71 <- reg int t69 times reg int t70
								}
								reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
							}
							reg &short t73 <- &(global short[5, 5] multid)
							reg &short t74 <- reg &short t73 plus reg int32_t t72
							[reg &short t74] <- reg char t63
						}
						<class 'ir.StatList'> 133818737381824 {
						parent = 133818737665984
							children:
							<class 'ir.StatList'> 133818737381680 {
							parent = 133818737381824
								children:
								<class 'ir.StatList'> 133818737368320 {
								parent = 133818737381680
									children:
									<class 'ir.StatList'> 133818737367648 {
									parent = 133818737368320
										children:
										<class 'ir.StatList'> 133818737367120 {
										parent = 133818737367648
											children:
											reg int t75 <- global int x
										}
										<class 'ir.StatList'> 133818737367456 {
										parent = 133818737367648
											children:
											reg int t76 <- 10
										}
										reg int32_t t77 <- reg int t75 times reg int t76
									}
									<class 'ir.StatList'> 133818737368032 {
									parent = 133818737368320
										children:
										<class 'ir.StatList'> 133818737667520 {
										parent = 133818737368032
											children:
											reg int t78 <- global int y
										}
										<class 'ir.StatList'> 133818737367744 {
										parent = 133818737368032
											children:
											reg int t79 <- 2
										}
										reg int32_t t80 <- reg int t78 times reg int t79
									}
									reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
								}
								reg &short t87 <- &(global short[5, 5] multid)
								reg &short t88 <- reg &short t87 plus reg int32_t t82
								reg short t86 <- [reg &short t88]
							}
							print reg short t86
						}
						<class 'ir.StatList'> 133818737639584 {
						parent = 133818737665984
							children:
							<class 'ir.StatList'> 133818737382448 {
							parent = 133818737639584
								children:
								<class 'ir.StatList'> 133818737382064 {
								parent = 133818737382448
									children:
									reg int t89 <- global int x
								}
								<class 'ir.StatList'> 133818737382256 {
								parent = 133818737382448
									children:
									reg int t90 <- 1
								}
								reg int32_t t91 <- reg int t89 plus reg int t90
							}
							global int x <- reg int32_t t91
						}
						<class 'ir.StatList'> 133818737639920 {
						parent = 133818737665984
							children:
							<class 'ir.StatList'> 133818737382928 {
							parent = 133818737639920
								children:
								<class 'ir.StatList'> 133818737382592 {
								parent = 133818737382928
									children:
									reg int t92 <- global int y
								}
								<class 'ir.StatList'> 133818737382736 {
								parent = 133818737382928
									children:
									reg int t93 <- 1
								}
								reg int32_t t94 <- reg int t92 plus reg int t93
							}
							global int y <- reg int32_t t94
						}
					}
					branch  to auto label label7
					label8: <class 'ir.EmptyStat'> 133818737383024 {
					parent = 133818737383264
					}
				}
			}
			branch  to auto label label9
			label10: <class 'ir.EmptyStat'> 133818737383408 {
			parent = 133818737383600
			}
		}
		<class 'ir.StatList'> 133818737401920 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737640688 {
			parent = 133818737401920
				expr: 	<class 'ir.Const'> 133818737640208 {
				parent = 133818737640688
					symbol: 	None
					value: 	10
				}
				symbol: 	auto int a
				offset: 	None
			}
			label11: <class 'ir.StatList'> 133818737384656 {
			parent = 133818737401920
				children:
				<class 'ir.StatList'> 133818737384272 {
				parent = 133818737384656
					children:
					reg int t98 <- auto int a
				}
				<class 'ir.StatList'> 133818737384464 {
				parent = 133818737384656
					children:
					reg int t99 <- 20
				}
				reg int32_t t100 <- reg int t98 leq reg int t99
			}
			branch on not reg int32_t t100 to auto label label13
			<class 'ir.StatList'> 133818737385040 {
			parent = 133818737401920
				children:
				<class 'ir.StatList'> 133818737384944 {
				parent = 133818737385040
					children:
					reg int t102 <- auto int a
				}
				print reg int t102
			}
			<class 'ir.StatList'> 133818737384128 {
			parent = 133818737401920
				children:
				<class 'ir.StatList'> 133818737383792 {
				parent = 133818737384128
					children:
					reg int t95 <- auto int a
				}
				<class 'ir.StatList'> 133818737383936 {
				parent = 133818737384128
					children:
					reg int t96 <- 1
				}
				reg int32_t t97 <- reg int t95 plus reg int t96
			}
			auto int a <- reg int32_t t97
			branch  to auto label label11
			label13: <class 'ir.EmptyStat'> 133818737385232 {
			parent = 133818737401920
			}
		}
		<class 'ir.StatList'> 133818737641312 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737640496 {
			parent = 133818737641312
				children:
				reg int t103 <- 10
			}
			global int i <- reg int t103
		}
		<class 'ir.StatList'> 133818737402544 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737402400 {
			parent = 133818737402544
				children:
				reg int t105 <- 99991
			}
			print reg int t105
		}
		<class 'ir.StatList'> 133818737404416 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737642128 {
			parent = 133818737404416
				expr: 	<class 'ir.Const'> 133818737641648 {
				parent = 133818737642128
					symbol: 	None
					value: 	10
				}
				symbol: 	auto int i
				offset: 	None
			}
			label14: <class 'ir.StatList'> 133818737403600 {
			parent = 133818737404416
				children:
				<class 'ir.StatList'> 133818737403216 {
				parent = 133818737403600
					children:
					reg int t109 <- auto int i
				}
				<class 'ir.StatList'> 133818737403408 {
				parent = 133818737403600
					children:
					reg int t110 <- 15
				}
				reg int32_t t111 <- reg int t109 leq reg int t110
			}
			branch on not reg int32_t t111 to auto label label16
			<class 'ir.StatList'> 133818737403984 {
			parent = 133818737404416
				children:
				<class 'ir.StatList'> 133818737403888 {
				parent = 133818737403984
					children:
					reg int t113 <- global int i
				}
				print reg int t113
			}
			<class 'ir.StatList'> 133818737403072 {
			parent = 133818737404416
				children:
				<class 'ir.StatList'> 133818737402784 {
				parent = 133818737403072
					children:
					reg int t106 <- auto int i
				}
				<class 'ir.StatList'> 133818737402880 {
				parent = 133818737403072
					children:
					reg int t107 <- 1
				}
				reg int32_t t108 <- reg int t106 plus reg int t107
			}
			auto int i <- reg int32_t t108
			branch  to auto label label14
			label16: <class 'ir.EmptyStat'> 133818737404176 {
			parent = 133818737404416
			}
		}
		<class 'ir.StatList'> 133818737404800 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737404704 {
			parent = 133818737404800
				children:
				reg int t115 <- 88881
			}
			print reg int t115
		}
		<class 'ir.StatList'> 133818737405280 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737405184 {
			parent = 133818737405280
				children:
				reg int t117 <- 99992
			}
			print reg int t117
		}
		<class 'ir.StatList'> 133818737415408 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737696976 {
			parent = 133818737415408
				expr: 	<class 'ir.Const'> 133818737643184 {
				parent = 133818737696976
					symbol: 	None
					value: 	5
				}
				symbol: 	auto int j
				offset: 	None
			}
			label17: <class 'ir.StatList'> 133818737414592 {
			parent = 133818737415408
				children:
				<class 'ir.StatList'> 133818737414256 {
				parent = 133818737414592
					children:
					reg int t121 <- auto int j
				}
				<class 'ir.StatList'> 133818737414400 {
				parent = 133818737414592
					children:
					reg int t122 <- 5
				}
				reg int32_t t123 <- reg int t121 leq reg int t122
			}
			branch on not reg int32_t t123 to auto label label19
			<class 'ir.StatList'> 133818737414976 {
			parent = 133818737415408
				children:
				<class 'ir.StatList'> 133818737414880 {
				parent = 133818737414976
					children:
					reg int t125 <- global int j
				}
				print reg int t125
			}
			<class 'ir.StatList'> 133818737405808 {
			parent = 133818737415408
				children:
				<class 'ir.StatList'> 133818737405520 {
				parent = 133818737405808
					children:
					reg int t118 <- auto int j
				}
				<class 'ir.StatList'> 133818737405616 {
				parent = 133818737405808
					children:
					reg int t119 <- 1
				}
				reg int32_t t120 <- reg int t118 plus reg int t119
			}
			auto int j <- reg int32_t t120
			branch  to auto label label17
			label19: <class 'ir.EmptyStat'> 133818737415168 {
			parent = 133818737415408
			}
		}
		<class 'ir.StatList'> 133818737415792 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737415696 {
			parent = 133818737415792
				children:
				reg int t127 <- 88882
			}
			print reg int t127
		}
		<class 'ir.StatList'> 133818737416272 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737416176 {
			parent = 133818737416272
				children:
				reg int t129 <- 99993
			}
			print reg int t129
		}
		<class 'ir.StatList'> 133818737230272 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737698704 {
			parent = 133818737230272
				expr: 	<class 'ir.Const'> 133818737698032 {
				parent = 133818737698704
					symbol: 	None
					value: 	10
				}
				symbol: 	auto int k
				offset: 	None
			}
			label20: <class 'ir.StatList'> 133818737417328 {
			parent = 133818737230272
				children:
				<class 'ir.StatList'> 133818737416944 {
				parent = 133818737417328
					children:
					reg int t133 <- auto int k
				}
				<class 'ir.StatList'> 133818737417136 {
				parent = 133818737417328
					children:
					reg int t134 <- 5
				}
				reg int32_t t135 <- reg int t133 leq reg int t134
			}
			branch on not reg int32_t t135 to auto label label22
			<class 'ir.StatList'> 133818737417712 {
			parent = 133818737230272
				children:
				<class 'ir.StatList'> 133818737417616 {
				parent = 133818737417712
					children:
					reg int t137 <- 77777
				}
				print reg int t137
			}
			<class 'ir.StatList'> 133818737229888 {
			parent = 133818737230272
				children:
				<class 'ir.StatList'> 133818737418096 {
				parent = 133818737229888
					children:
					reg int t139 <- global int k
				}
				print reg int t139
			}
			<class 'ir.StatList'> 133818737416800 {
			parent = 133818737230272
				children:
				<class 'ir.StatList'> 133818737416512 {
				parent = 133818737416800
					children:
					reg int t130 <- auto int k
				}
				<class 'ir.StatList'> 133818737416608 {
				parent = 133818737416800
					children:
					reg int t131 <- 1
				}
				reg int32_t t132 <- reg int t130 plus reg int t131
			}
			auto int k <- reg int32_t t132
			branch  to auto label label20
			label22: <class 'ir.EmptyStat'> 133818737230032 {
			parent = 133818737230272
			}
		}
		<class 'ir.StatList'> 133818737230656 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737230560 {
			parent = 133818737230656
				children:
				reg int t141 <- 88883
			}
			print reg int t141
		}
		<class 'ir.StatList'> 133818737231136 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737231040 {
			parent = 133818737231136
				children:
				reg int t143 <- 99994
			}
			print reg int t143
		}
		<class 'ir.StatList'> 133818737233008 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737700240 {
			parent = 133818737233008
				expr: 	<class 'ir.Const'> 133818737699760 {
				parent = 133818737700240
					symbol: 	None
					value: 	1
				}
				symbol: 	auto int m
				offset: 	None
			}
			label23: <class 'ir.StatList'> 133818737232192 {
			parent = 133818737233008
				children:
				<class 'ir.StatList'> 133818737231808 {
				parent = 133818737232192
					children:
					reg int t147 <- auto int m
				}
				<class 'ir.StatList'> 133818737232000 {
				parent = 133818737232192
					children:
					reg int t148 <- 6
				}
				reg int32_t t149 <- reg int t147 leq reg int t148
			}
			branch on not reg int32_t t149 to auto label label25
			<class 'ir.StatList'> 133818737232576 {
			parent = 133818737233008
				children:
				<class 'ir.StatList'> 133818737232480 {
				parent = 133818737232576
					children:
					reg int t151 <- global int m
				}
				print reg int t151
			}
			<class 'ir.StatList'> 133818737231664 {
			parent = 133818737233008
				children:
				<class 'ir.StatList'> 133818737231376 {
				parent = 133818737231664
					children:
					reg int t144 <- auto int m
				}
				<class 'ir.StatList'> 133818737231472 {
				parent = 133818737231664
					children:
					reg int t145 <- 1
				}
				reg int32_t t146 <- reg int t144 plus reg int t145
			}
			auto int m <- reg int32_t t146
			branch  to auto label label23
			label25: <class 'ir.EmptyStat'> 133818737232768 {
			parent = 133818737233008
			}
		}
		<class 'ir.StatList'> 133818737233392 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737233296 {
			parent = 133818737233392
				children:
				reg int t153 <- 88884
			}
			print reg int t153
		}
		<class 'ir.StatList'> 133818737242176 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737233776 {
			parent = 133818737242176
				children:
				reg int t155 <- 99995
			}
			print reg int t155
		}
		<class 'ir.StatList'> 133818737244000 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737705936 {
			parent = 133818737244000
				expr: 	<class 'ir.Const'> 133818737705456 {
				parent = 133818737705936
					symbol: 	None
					value: 	1
				}
				symbol: 	auto int n
				offset: 	None
			}
			label26: <class 'ir.StatList'> 133818737243184 {
			parent = 133818737244000
				children:
				<class 'ir.StatList'> 133818737242800 {
				parent = 133818737243184
					children:
					reg int t159 <- auto int n
				}
				<class 'ir.StatList'> 133818737242992 {
				parent = 133818737243184
					children:
					reg int t160 <- 7
				}
				reg int32_t t161 <- reg int t159 leq reg int t160
			}
			branch on not reg int32_t t161 to auto label label28
			<class 'ir.StatList'> 133818737243568 {
			parent = 133818737244000
				children:
				<class 'ir.StatList'> 133818737243472 {
				parent = 133818737243568
					children:
					reg int t163 <- global int n
				}
				print reg int t163
			}
			<class 'ir.StatList'> 133818737242656 {
			parent = 133818737244000
				children:
				<class 'ir.StatList'> 133818737242368 {
				parent = 133818737242656
					children:
					reg int t156 <- auto int n
				}
				<class 'ir.StatList'> 133818737242464 {
				parent = 133818737242656
					children:
					reg int t157 <- 1
				}
				reg int32_t t158 <- reg int t156 plus reg int t157
			}
			auto int n <- reg int32_t t158
			branch  to auto label label26
			label28: <class 'ir.EmptyStat'> 133818737243760 {
			parent = 133818737244000
			}
		}
		<class 'ir.StatList'> 133818737244384 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737244288 {
			parent = 133818737244384
				children:
				reg int t165 <- 88885
			}
			print reg int t165
		}
		<class 'ir.StatList'> 133818737244864 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737244768 {
			parent = 133818737244864
				children:
				reg int t167 <- 99996
			}
			print reg int t167
		}
		<class 'ir.StatList'> 133818737271376 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737707472 {
			parent = 133818737271376
				expr: 	<class 'ir.Const'> 133818737706992 {
				parent = 133818737707472
					symbol: 	None
					value: 	10
				}
				symbol: 	auto int p
				offset: 	None
			}
			label29: <class 'ir.StatList'> 133818737245920 {
			parent = 133818737271376
				children:
				<class 'ir.StatList'> 133818737245536 {
				parent = 133818737245920
					children:
					reg int t171 <- auto int p
				}
				<class 'ir.StatList'> 133818737245728 {
				parent = 133818737245920
					children:
					reg int t172 <- 12
				}
				reg int32_t t173 <- reg int t171 leq reg int t172
			}
			branch on not reg int32_t t173 to auto label label31
			<class 'ir.StatList'> 133818737270944 {
			parent = 133818737271376
				children:
				<class 'ir.StatList'> 133818737246160 {
				parent = 133818737270944
					children:
					reg int t175 <- global int p
				}
				print reg int t175
			}
			<class 'ir.StatList'> 133818737245392 {
			parent = 133818737271376
				children:
				<class 'ir.StatList'> 133818737245104 {
				parent = 133818737245392
					children:
					reg int t168 <- auto int p
				}
				<class 'ir.StatList'> 133818737245200 {
				parent = 133818737245392
					children:
					reg int t169 <- 1
				}
				reg int32_t t170 <- reg int t168 plus reg int t169
			}
			auto int p <- reg int32_t t170
			branch  to auto label label29
			label31: <class 'ir.EmptyStat'> 133818737271136 {
			parent = 133818737271376
			}
		}
		<class 'ir.StatList'> 133818737271760 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737271664 {
			parent = 133818737271760
				children:
				reg int t177 <- 88886
			}
			print reg int t177
		}
		<class 'ir.StatList'> 133818737708288 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737271952 {
			parent = 133818737708288
				children:
				reg int t178 <- 0
			}
			global int sum <- reg int t178
		}
		<class 'ir.StatList'> 133818737272432 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737272336 {
			parent = 133818737272432
				children:
				reg int t180 <- 99997
			}
			print reg int t180
		}
		<class 'ir.StatList'> 133818737283568 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737717888 {
			parent = 133818737283568
				expr: 	<class 'ir.Const'> 133818737708624 {
				parent = 133818737717888
					symbol: 	None
					value: 	1
				}
				symbol: 	auto int q
				offset: 	None
			}
			label32: <class 'ir.StatList'> 133818737273488 {
			parent = 133818737283568
				children:
				<class 'ir.StatList'> 133818737273104 {
				parent = 133818737273488
					children:
					reg int t184 <- auto int q
				}
				<class 'ir.StatList'> 133818737273296 {
				parent = 133818737273488
					children:
					reg int t185 <- 5
				}
				reg int32_t t186 <- reg int t184 leq reg int t185
			}
			branch on not reg int32_t t186 to auto label label34
			<class 'ir.StatList'> 133818737717360 {
			parent = 133818737283568
				children:
				<class 'ir.StatList'> 133818737273920 {
				parent = 133818737717360
					children:
					<class 'ir.StatList'> 133818737273584 {
					parent = 133818737273920
						children:
						reg int t187 <- global int sum
					}
					<class 'ir.StatList'> 133818737273728 {
					parent = 133818737273920
						children:
						reg int t188 <- global int q
					}
					reg int32_t t189 <- reg int t187 plus reg int t188
				}
				global int sum <- reg int32_t t189
			}
			<class 'ir.StatList'> 133818737274400 {
			parent = 133818737283568
				children:
				<class 'ir.StatList'> 133818737274304 {
				parent = 133818737274400
					children:
					reg int t191 <- global int q
				}
				print reg int t191
			}
			<class 'ir.StatList'> 133818737283184 {
			parent = 133818737283568
				children:
				<class 'ir.StatList'> 133818737274784 {
				parent = 133818737283184
					children:
					reg int t193 <- global int sum
				}
				print reg int t193
			}
			<class 'ir.StatList'> 133818737272960 {
			parent = 133818737283568
				children:
				<class 'ir.StatList'> 133818737272672 {
				parent = 133818737272960
					children:
					reg int t181 <- auto int q
				}
				<class 'ir.StatList'> 133818737272768 {
				parent = 133818737272960
					children:
					reg int t182 <- 1
				}
				reg int32_t t183 <- reg int t181 plus reg int t182
			}
			auto int q <- reg int32_t t183
			branch  to auto label label32
			label34: <class 'ir.EmptyStat'> 133818737283328 {
			parent = 133818737283568
			}
		}
		<class 'ir.StatList'> 133818737283952 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737283856 {
			parent = 133818737283952
				children:
				reg int t195 <- global int sum
			}
			print reg int t195
		}
		<class 'ir.StatList'> 133818737284432 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737284336 {
			parent = 133818737284432
				children:
				reg int t197 <- 88887
			}
			print reg int t197
		}
		<class 'ir.StatList'> 133818737718896 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737284624 {
			parent = 133818737718896
				children:
				reg int t198 <- 100
			}
			global int x <- reg int t198
		}
		<class 'ir.StatList'> 133818737285104 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737285008 {
			parent = 133818737285104
				children:
				reg int t200 <- 99998
			}
			print reg int t200
		}
		<class 'ir.StatList'> 133818737303952 {
		parent = 133818737647824
			children:
			<class 'ir.AssignStat'> 133818737720096 {
			parent = 133818737303952
				expr: 	<class 'ir.Const'> 133818737719280 {
				parent = 133818737720096
					symbol: 	None
					value: 	1
				}
				symbol: 	auto int r
				offset: 	None
			}
			label35: <class 'ir.StatList'> 133818737286160 {
			parent = 133818737303952
				children:
				<class 'ir.StatList'> 133818737285776 {
				parent = 133818737286160
					children:
					reg int t204 <- auto int r
				}
				<class 'ir.StatList'> 133818737285968 {
				parent = 133818737286160
					children:
					reg int t205 <- 3
				}
				reg int32_t t206 <- reg int t204 leq reg int t205
			}
			branch on not reg int32_t t206 to auto label label37
			<class 'ir.StatList'> 133818737719760 {
			parent = 133818737303952
				children:
				<class 'ir.StatList'> 133818737286592 {
				parent = 133818737719760
					children:
					<class 'ir.StatList'> 133818737286256 {
					parent = 133818737286592
						children:
						reg int t207 <- global int x
					}
					<class 'ir.StatList'> 133818737286400 {
					parent = 133818737286592
						children:
						reg int t208 <- global int r
					}
					reg int32_t t209 <- reg int t207 plus reg int t208
				}
				global int x <- reg int32_t t209
			}
			<class 'ir.StatList'> 133818737287072 {
			parent = 133818737303952
				children:
				<class 'ir.StatList'> 133818737286976 {
				parent = 133818737287072
					children:
					reg int t211 <- global int x
				}
				print reg int t211
			}
			<class 'ir.StatList'> 133818737285632 {
			parent = 133818737303952
				children:
				<class 'ir.StatList'> 133818737285344 {
				parent = 133818737285632
					children:
					reg int t201 <- auto int r
				}
				<class 'ir.StatList'> 133818737285440 {
				parent = 133818737285632
					children:
					reg int t202 <- 1
				}
				reg int32_t t203 <- reg int t201 plus reg int t202
			}
			auto int r <- reg int32_t t203
			branch  to auto label label35
			label37: <class 'ir.EmptyStat'> 133818737303712 {
			parent = 133818737303952
			}
		}
		<class 'ir.StatList'> 133818737284816 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737286832 {
			parent = 133818737284816
				children:
				reg int t213 <- global int x
			}
			print reg int t213
		}
		<class 'ir.StatList'> 133818737274016 {
		parent = 133818737647824
			children:
			<class 'ir.StatList'> 133818737274592 {
			parent = 133818737274016
				children:
				reg int t215 <- 88888
			}
			print reg int t215
		}
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 2
navigating children of <class 'ir.StatList'> 133818737585792 2
navigating children of <class 'ir.StatList'> 133818737750080 1
navigating children of <class 'ir.StatList'> 133818737586080 2
navigating children of <class 'ir.StatList'> 133818737750704 3
navigating children of <class 'ir.StatList'> 133818737750320 1
navigating children of <class 'ir.StatList'> 133818737750512 1
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 40
navigating children of <class 'ir.StatList'> 133818737648016 2
navigating children of <class 'ir.StatList'> 133818737751040 2
navigating children of <class 'ir.StatList'> 133818737750848 1
navigating children of <class 'ir.StatList'> 133818737583968 2
navigating children of <class 'ir.StatList'> 133818737751136 1
navigating children of <class 'ir.StatList'> 133818737753008 6
navigating children of <class 'ir.StatList'> 133818737751712 3
navigating children of <class 'ir.StatList'> 133818737751376 1
navigating children of <class 'ir.StatList'> 133818737751520 1
navigating children of <class 'ir.StatList'> 133818737648928 1
navigating children of <class 'ir.StatList'> 133818737752096 2
navigating children of <class 'ir.StatList'> 133818737752000 1
navigating children of <class 'ir.StatList'> 133818737648544 1
navigating children of <class 'ir.StatList'> 133818737752576 2
navigating children of <class 'ir.StatList'> 133818737648640 2
navigating children of <class 'ir.StatList'> 133818737752336 1
navigating children of <class 'ir.StatList'> 133818737649264 2
navigating children of <class 'ir.StatList'> 133818737753200 1
navigating children of <class 'ir.StatList'> 133818737324960 5
navigating children of <class 'ir.StatList'> 133818737753728 3
navigating children of <class 'ir.StatList'> 133818737753392 1
navigating children of <class 'ir.StatList'> 133818737753536 1
navigating children of <class 'ir.StatList'> 133818737649696 3
navigating children of <class 'ir.StatList'> 133818737650176 2
navigating children of <class 'ir.StatList'> 133818737324192 3
navigating children of <class 'ir.StatList'> 133818737753872 1
navigating children of <class 'ir.StatList'> 133818737754016 1
navigating children of <class 'ir.StatList'> 133818737324624 2
navigating children of <class 'ir.StatList'> 133818737324528 1
navigating children of <class 'ir.StatList'> 133818737650560 2
navigating children of <class 'ir.StatList'> 133818737325152 1
navigating children of <class 'ir.StatList'> 133818737350592 5
navigating children of <class 'ir.StatList'> 133818737325680 3
navigating children of <class 'ir.StatList'> 133818737325344 1
navigating children of <class 'ir.StatList'> 133818737325488 1
navigating children of <class 'ir.StatList'> 133818737650992 3
navigating children of <class 'ir.StatList'> 133818737326832 5
navigating children of <class 'ir.StatList'> 133818737650944 1
navigating children of <class 'ir.StatList'> 133818737326496 3
navigating children of <class 'ir.StatList'> 133818737326256 3
navigating children of <class 'ir.StatList'> 133818737325872 1
navigating children of <class 'ir.StatList'> 133818737326064 1
navigating children of <class 'ir.StatList'> 133818737651376 1
navigating children of <class 'ir.StatList'> 133818737349680 2
navigating children of <class 'ir.StatList'> 133818737349536 4
navigating children of <class 'ir.StatList'> 133818737327120 3
navigating children of <class 'ir.StatList'> 133818737327600 3
navigating children of <class 'ir.StatList'> 133818737327072 1
navigating children of <class 'ir.StatList'> 133818737327408 1
navigating children of <class 'ir.StatList'> 133818737664304 1
navigating children of <class 'ir.StatList'> 133818737664880 2
navigating children of <class 'ir.StatList'> 133818737350304 3
navigating children of <class 'ir.StatList'> 133818737349920 1
navigating children of <class 'ir.StatList'> 133818737350112 1
navigating children of <class 'ir.StatList'> 133818737665072 2
navigating children of <class 'ir.StatList'> 133818737350784 1
navigating children of <class 'ir.StatList'> 133818737665216 2
navigating children of <class 'ir.StatList'> 133818737350976 1
navigating children of <class 'ir.StatList'> 133818737383600 5
navigating children of <class 'ir.StatList'> 133818737351504 3
navigating children of <class 'ir.StatList'> 133818737351168 1
navigating children of <class 'ir.StatList'> 133818737351312 1
navigating children of <class 'ir.StatList'> 133818737665600 1
navigating children of <class 'ir.StatList'> 133818737383264 5
navigating children of <class 'ir.StatList'> 133818737351936 3
navigating children of <class 'ir.StatList'> 133818737351600 1
navigating children of <class 'ir.StatList'> 133818737351744 1
navigating children of <class 'ir.StatList'> 133818737665984 4
navigating children of <class 'ir.StatList'> 133818737366880 5
navigating children of <class 'ir.StatList'> 133818737365488 4
navigating children of <class 'ir.StatList'> 133818737352608 3
navigating children of <class 'ir.StatList'> 133818737352080 1
navigating children of <class 'ir.StatList'> 133818737352224 1
navigating children of <class 'ir.StatList'> 133818737366592 3
navigating children of <class 'ir.StatList'> 133818737366016 3
navigating children of <class 'ir.StatList'> 133818737365632 1
navigating children of <class 'ir.StatList'> 133818737365824 1
navigating children of <class 'ir.StatList'> 133818737366400 3
navigating children of <class 'ir.StatList'> 133818737666464 1
navigating children of <class 'ir.StatList'> 133818737366112 1
navigating children of <class 'ir.StatList'> 133818737381824 2
navigating children of <class 'ir.StatList'> 133818737381680 4
navigating children of <class 'ir.StatList'> 133818737368320 3
navigating children of <class 'ir.StatList'> 133818737367648 3
navigating children of <class 'ir.StatList'> 133818737367120 1
navigating children of <class 'ir.StatList'> 133818737367456 1
navigating children of <class 'ir.StatList'> 133818737368032 3
navigating children of <class 'ir.StatList'> 133818737667520 1
navigating children of <class 'ir.StatList'> 133818737367744 1
navigating children of <class 'ir.StatList'> 133818737639584 2
navigating children of <class 'ir.StatList'> 133818737382448 3
navigating children of <class 'ir.StatList'> 133818737382064 1
navigating children of <class 'ir.StatList'> 133818737382256 1
navigating children of <class 'ir.StatList'> 133818737639920 2
navigating children of <class 'ir.StatList'> 133818737382928 3
navigating children of <class 'ir.StatList'> 133818737382592 1
navigating children of <class 'ir.StatList'> 133818737382736 1
navigating children of <class 'ir.StatList'> 133818737401920 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640688
navigating children of <class 'ir.StatList'> 133818737384656 3
navigating children of <class 'ir.StatList'> 133818737384272 1
navigating children of <class 'ir.StatList'> 133818737384464 1
navigating children of <class 'ir.StatList'> 133818737385040 2
navigating children of <class 'ir.StatList'> 133818737384944 1
navigating children of <class 'ir.StatList'> 133818737384128 3
navigating children of <class 'ir.StatList'> 133818737383792 1
navigating children of <class 'ir.StatList'> 133818737383936 1
navigating children of <class 'ir.StatList'> 133818737641312 2
navigating children of <class 'ir.StatList'> 133818737640496 1
navigating children of <class 'ir.StatList'> 133818737402544 2
navigating children of <class 'ir.StatList'> 133818737402400 1
navigating children of <class 'ir.StatList'> 133818737404416 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642128
navigating children of <class 'ir.StatList'> 133818737403600 3
navigating children of <class 'ir.StatList'> 133818737403216 1
navigating children of <class 'ir.StatList'> 133818737403408 1
navigating children of <class 'ir.StatList'> 133818737403984 2
navigating children of <class 'ir.StatList'> 133818737403888 1
navigating children of <class 'ir.StatList'> 133818737403072 3
navigating children of <class 'ir.StatList'> 133818737402784 1
navigating children of <class 'ir.StatList'> 133818737402880 1
navigating children of <class 'ir.StatList'> 133818737404800 2
navigating children of <class 'ir.StatList'> 133818737404704 1
navigating children of <class 'ir.StatList'> 133818737405280 2
navigating children of <class 'ir.StatList'> 133818737405184 1
navigating children of <class 'ir.StatList'> 133818737415408 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737696976
navigating children of <class 'ir.StatList'> 133818737414592 3
navigating children of <class 'ir.StatList'> 133818737414256 1
navigating children of <class 'ir.StatList'> 133818737414400 1
navigating children of <class 'ir.StatList'> 133818737414976 2
navigating children of <class 'ir.StatList'> 133818737414880 1
navigating children of <class 'ir.StatList'> 133818737405808 3
navigating children of <class 'ir.StatList'> 133818737405520 1
navigating children of <class 'ir.StatList'> 133818737405616 1
navigating children of <class 'ir.StatList'> 133818737415792 2
navigating children of <class 'ir.StatList'> 133818737415696 1
navigating children of <class 'ir.StatList'> 133818737416272 2
navigating children of <class 'ir.StatList'> 133818737416176 1
navigating children of <class 'ir.StatList'> 133818737230272 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737698704
navigating children of <class 'ir.StatList'> 133818737417328 3
navigating children of <class 'ir.StatList'> 133818737416944 1
navigating children of <class 'ir.StatList'> 133818737417136 1
navigating children of <class 'ir.StatList'> 133818737417712 2
navigating children of <class 'ir.StatList'> 133818737417616 1
navigating children of <class 'ir.StatList'> 133818737229888 2
navigating children of <class 'ir.StatList'> 133818737418096 1
navigating children of <class 'ir.StatList'> 133818737416800 3
navigating children of <class 'ir.StatList'> 133818737416512 1
navigating children of <class 'ir.StatList'> 133818737416608 1
navigating children of <class 'ir.StatList'> 133818737230656 2
navigating children of <class 'ir.StatList'> 133818737230560 1
navigating children of <class 'ir.StatList'> 133818737231136 2
navigating children of <class 'ir.StatList'> 133818737231040 1
navigating children of <class 'ir.StatList'> 133818737233008 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700240
navigating children of <class 'ir.StatList'> 133818737232192 3
navigating children of <class 'ir.StatList'> 133818737231808 1
navigating children of <class 'ir.StatList'> 133818737232000 1
navigating children of <class 'ir.StatList'> 133818737232576 2
navigating children of <class 'ir.StatList'> 133818737232480 1
navigating children of <class 'ir.StatList'> 133818737231664 3
navigating children of <class 'ir.StatList'> 133818737231376 1
navigating children of <class 'ir.StatList'> 133818737231472 1
navigating children of <class 'ir.StatList'> 133818737233392 2
navigating children of <class 'ir.StatList'> 133818737233296 1
navigating children of <class 'ir.StatList'> 133818737242176 2
navigating children of <class 'ir.StatList'> 133818737233776 1
navigating children of <class 'ir.StatList'> 133818737244000 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737705936
navigating children of <class 'ir.StatList'> 133818737243184 3
navigating children of <class 'ir.StatList'> 133818737242800 1
navigating children of <class 'ir.StatList'> 133818737242992 1
navigating children of <class 'ir.StatList'> 133818737243568 2
navigating children of <class 'ir.StatList'> 133818737243472 1
navigating children of <class 'ir.StatList'> 133818737242656 3
navigating children of <class 'ir.StatList'> 133818737242368 1
navigating children of <class 'ir.StatList'> 133818737242464 1
navigating children of <class 'ir.StatList'> 133818737244384 2
navigating children of <class 'ir.StatList'> 133818737244288 1
navigating children of <class 'ir.StatList'> 133818737244864 2
navigating children of <class 'ir.StatList'> 133818737244768 1
navigating children of <class 'ir.StatList'> 133818737271376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737707472
navigating children of <class 'ir.StatList'> 133818737245920 3
navigating children of <class 'ir.StatList'> 133818737245536 1
navigating children of <class 'ir.StatList'> 133818737245728 1
navigating children of <class 'ir.StatList'> 133818737270944 2
navigating children of <class 'ir.StatList'> 133818737246160 1
navigating children of <class 'ir.StatList'> 133818737245392 3
navigating children of <class 'ir.StatList'> 133818737245104 1
navigating children of <class 'ir.StatList'> 133818737245200 1
navigating children of <class 'ir.StatList'> 133818737271760 2
navigating children of <class 'ir.StatList'> 133818737271664 1
navigating children of <class 'ir.StatList'> 133818737708288 2
navigating children of <class 'ir.StatList'> 133818737271952 1
navigating children of <class 'ir.StatList'> 133818737272432 2
navigating children of <class 'ir.StatList'> 133818737272336 1
navigating children of <class 'ir.StatList'> 133818737283568 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717888
navigating children of <class 'ir.StatList'> 133818737273488 3
navigating children of <class 'ir.StatList'> 133818737273104 1
navigating children of <class 'ir.StatList'> 133818737273296 1
navigating children of <class 'ir.StatList'> 133818737717360 2
navigating children of <class 'ir.StatList'> 133818737273920 3
navigating children of <class 'ir.StatList'> 133818737273584 1
navigating children of <class 'ir.StatList'> 133818737273728 1
navigating children of <class 'ir.StatList'> 133818737274400 2
navigating children of <class 'ir.StatList'> 133818737274304 1
navigating children of <class 'ir.StatList'> 133818737283184 2
navigating children of <class 'ir.StatList'> 133818737274784 1
navigating children of <class 'ir.StatList'> 133818737272960 3
navigating children of <class 'ir.StatList'> 133818737272672 1
navigating children of <class 'ir.StatList'> 133818737272768 1
navigating children of <class 'ir.StatList'> 133818737283952 2
navigating children of <class 'ir.StatList'> 133818737283856 1
navigating children of <class 'ir.StatList'> 133818737284432 2
navigating children of <class 'ir.StatList'> 133818737284336 1
navigating children of <class 'ir.StatList'> 133818737718896 2
navigating children of <class 'ir.StatList'> 133818737284624 1
navigating children of <class 'ir.StatList'> 133818737285104 2
navigating children of <class 'ir.StatList'> 133818737285008 1
navigating children of <class 'ir.StatList'> 133818737303952 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720096
navigating children of <class 'ir.StatList'> 133818737286160 3
navigating children of <class 'ir.StatList'> 133818737285776 1
navigating children of <class 'ir.StatList'> 133818737285968 1
navigating children of <class 'ir.StatList'> 133818737719760 2
navigating children of <class 'ir.StatList'> 133818737286592 3
navigating children of <class 'ir.StatList'> 133818737286256 1
navigating children of <class 'ir.StatList'> 133818737286400 1
navigating children of <class 'ir.StatList'> 133818737287072 2
navigating children of <class 'ir.StatList'> 133818737286976 1
navigating children of <class 'ir.StatList'> 133818737285632 3
navigating children of <class 'ir.StatList'> 133818737285344 1
navigating children of <class 'ir.StatList'> 133818737285440 1
navigating children of <class 'ir.StatList'> 133818737284816 2
navigating children of <class 'ir.StatList'> 133818737286832 1
navigating children of <class 'ir.StatList'> 133818737274016 2
navigating children of <class 'ir.StatList'> 133818737274592 1
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104

--- Navigating: Applying Flattening ---
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 2
navigating children of <class 'ir.StatList'> 133818737585792 2
navigating children of <class 'ir.StatList'> 133818737750080 1
Flattening 133818737750080 into 133818737585792
Flattening <class 'ir.StatList'> 133818737750080
Flattening 133818737585792 into 133818737585648
Flattening <class 'ir.StatList'> 133818737585792
navigating children of <class 'ir.StatList'> 133818737586080 2
navigating children of <class 'ir.StatList'> 133818737750704 3
navigating children of <class 'ir.StatList'> 133818737750320 1
Flattening 133818737750320 into 133818737750704
Flattening <class 'ir.StatList'> 133818737750320
navigating children of <class 'ir.StatList'> 133818737750512 1
Flattening 133818737750512 into 133818737750704
Flattening <class 'ir.StatList'> 133818737750512
Flattening 133818737750704 into 133818737586080
Flattening <class 'ir.StatList'> 133818737750704
Flattening 133818737586080 into 133818737585648
Flattening <class 'ir.StatList'> 133818737586080
Not flattening 133818737585648 into 133818737584160 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 133818737585648
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 40
navigating children of <class 'ir.StatList'> 133818737648016 2
navigating children of <class 'ir.StatList'> 133818737751040 2
navigating children of <class 'ir.StatList'> 133818737750848 1
Flattening 133818737750848 into 133818737751040
Flattening <class 'ir.StatList'> 133818737750848
Flattening 133818737751040 into 133818737648016
Flattening <class 'ir.StatList'> 133818737751040
Flattening 133818737648016 into 133818737647824
Flattening <class 'ir.StatList'> 133818737648016
navigating children of <class 'ir.StatList'> 133818737583968 2
navigating children of <class 'ir.StatList'> 133818737751136 1
Flattening 133818737751136 into 133818737583968
Flattening <class 'ir.StatList'> 133818737751136
Flattening 133818737583968 into 133818737647824
Flattening <class 'ir.StatList'> 133818737583968
navigating children of <class 'ir.StatList'> 133818737753008 6
navigating children of <class 'ir.StatList'> 133818737751712 3
navigating children of <class 'ir.StatList'> 133818737751376 1
Flattening 133818737751376 into 133818737751712
Flattening <class 'ir.StatList'> 133818737751376
navigating children of <class 'ir.StatList'> 133818737751520 1
Flattening 133818737751520 into 133818737751712
Flattening <class 'ir.StatList'> 133818737751520
Flattening 133818737751712 into 133818737753008
Flattening <class 'ir.StatList'> 133818737751712
navigating children of <class 'ir.StatList'> 133818737648928 1
navigating children of <class 'ir.StatList'> 133818737752096 2
navigating children of <class 'ir.StatList'> 133818737752000 1
Flattening 133818737752000 into 133818737752096
Flattening <class 'ir.StatList'> 133818737752000
Flattening 133818737752096 into 133818737648928
Flattening <class 'ir.StatList'> 133818737752096
Flattening 133818737648928 into 133818737753008
Flattening <class 'ir.StatList'> 133818737648928
navigating children of <class 'ir.StatList'> 133818737648544 1
navigating children of <class 'ir.StatList'> 133818737752576 2
navigating children of <class 'ir.StatList'> 133818737648640 2
navigating children of <class 'ir.StatList'> 133818737752336 1
Flattening 133818737752336 into 133818737648640
Flattening <class 'ir.StatList'> 133818737752336
Flattening 133818737648640 into 133818737752576
Flattening <class 'ir.StatList'> 133818737648640
Flattening 133818737752576 into 133818737648544
Flattening <class 'ir.StatList'> 133818737752576
Flattening 133818737648544 into 133818737753008
Flattening <class 'ir.StatList'> 133818737648544
Flattening 133818737753008 into 133818737647824
Flattening <class 'ir.StatList'> 133818737753008
navigating children of <class 'ir.StatList'> 133818737649264 2
navigating children of <class 'ir.StatList'> 133818737753200 1
Flattening 133818737753200 into 133818737649264
Flattening <class 'ir.StatList'> 133818737753200
Flattening 133818737649264 into 133818737647824
Flattening <class 'ir.StatList'> 133818737649264
navigating children of <class 'ir.StatList'> 133818737324960 5
navigating children of <class 'ir.StatList'> 133818737753728 3
navigating children of <class 'ir.StatList'> 133818737753392 1
Flattening 133818737753392 into 133818737753728
Flattening <class 'ir.StatList'> 133818737753392
navigating children of <class 'ir.StatList'> 133818737753536 1
Flattening 133818737753536 into 133818737753728
Flattening <class 'ir.StatList'> 133818737753536
Flattening 133818737753728 into 133818737324960
Flattening <class 'ir.StatList'> 133818737753728
navigating children of <class 'ir.StatList'> 133818737649696 3
navigating children of <class 'ir.StatList'> 133818737650176 2
navigating children of <class 'ir.StatList'> 133818737324192 3
navigating children of <class 'ir.StatList'> 133818737753872 1
Flattening 133818737753872 into 133818737324192
Flattening <class 'ir.StatList'> 133818737753872
navigating children of <class 'ir.StatList'> 133818737754016 1
Flattening 133818737754016 into 133818737324192
Flattening <class 'ir.StatList'> 133818737754016
Flattening 133818737324192 into 133818737650176
Flattening <class 'ir.StatList'> 133818737324192
Flattening 133818737650176 into 133818737649696
Flattening <class 'ir.StatList'> 133818737650176
navigating children of <class 'ir.StatList'> 133818737324624 2
navigating children of <class 'ir.StatList'> 133818737324528 1
Flattening 133818737324528 into 133818737324624
Flattening <class 'ir.StatList'> 133818737324528
Flattening 133818737324624 into 133818737649696
Flattening <class 'ir.StatList'> 133818737324624
Flattening 133818737649696 into 133818737324960
Flattening <class 'ir.StatList'> 133818737649696
Flattening 133818737324960 into 133818737647824
Flattening <class 'ir.StatList'> 133818737324960
navigating children of <class 'ir.StatList'> 133818737650560 2
navigating children of <class 'ir.StatList'> 133818737325152 1
Flattening 133818737325152 into 133818737650560
Flattening <class 'ir.StatList'> 133818737325152
Flattening 133818737650560 into 133818737647824
Flattening <class 'ir.StatList'> 133818737650560
navigating children of <class 'ir.StatList'> 133818737350592 5
navigating children of <class 'ir.StatList'> 133818737325680 3
navigating children of <class 'ir.StatList'> 133818737325344 1
Flattening 133818737325344 into 133818737325680
Flattening <class 'ir.StatList'> 133818737325344
navigating children of <class 'ir.StatList'> 133818737325488 1
Flattening 133818737325488 into 133818737325680
Flattening <class 'ir.StatList'> 133818737325488
Flattening 133818737325680 into 133818737350592
Flattening <class 'ir.StatList'> 133818737325680
navigating children of <class 'ir.StatList'> 133818737650992 3
navigating children of <class 'ir.StatList'> 133818737326832 5
navigating children of <class 'ir.StatList'> 133818737650944 1
Flattening 133818737650944 into 133818737326832
Flattening <class 'ir.StatList'> 133818737650944
navigating children of <class 'ir.StatList'> 133818737326496 3
navigating children of <class 'ir.StatList'> 133818737326256 3
navigating children of <class 'ir.StatList'> 133818737325872 1
Flattening 133818737325872 into 133818737326256
Flattening <class 'ir.StatList'> 133818737325872
navigating children of <class 'ir.StatList'> 133818737326064 1
Flattening 133818737326064 into 133818737326256
Flattening <class 'ir.StatList'> 133818737326064
Flattening 133818737326256 into 133818737326496
Flattening <class 'ir.StatList'> 133818737326256
navigating children of <class 'ir.StatList'> 133818737651376 1
Flattening 133818737651376 into 133818737326496
Flattening <class 'ir.StatList'> 133818737651376
Flattening 133818737326496 into 133818737326832
Flattening <class 'ir.StatList'> 133818737326496
Flattening 133818737326832 into 133818737650992
Flattening <class 'ir.StatList'> 133818737326832
navigating children of <class 'ir.StatList'> 133818737349680 2
navigating children of <class 'ir.StatList'> 133818737349536 4
navigating children of <class 'ir.StatList'> 133818737327120 3
navigating children of <class 'ir.StatList'> 133818737327600 3
navigating children of <class 'ir.StatList'> 133818737327072 1
Flattening 133818737327072 into 133818737327600
Flattening <class 'ir.StatList'> 133818737327072
navigating children of <class 'ir.StatList'> 133818737327408 1
Flattening 133818737327408 into 133818737327600
Flattening <class 'ir.StatList'> 133818737327408
Flattening 133818737327600 into 133818737327120
Flattening <class 'ir.StatList'> 133818737327600
navigating children of <class 'ir.StatList'> 133818737664304 1
Flattening 133818737664304 into 133818737327120
Flattening <class 'ir.StatList'> 133818737664304
Flattening 133818737327120 into 133818737349536
Flattening <class 'ir.StatList'> 133818737327120
Flattening 133818737349536 into 133818737349680
Flattening <class 'ir.StatList'> 133818737349536
Flattening 133818737349680 into 133818737650992
Flattening <class 'ir.StatList'> 133818737349680
navigating children of <class 'ir.StatList'> 133818737664880 2
navigating children of <class 'ir.StatList'> 133818737350304 3
navigating children of <class 'ir.StatList'> 133818737349920 1
Flattening 133818737349920 into 133818737350304
Flattening <class 'ir.StatList'> 133818737349920
navigating children of <class 'ir.StatList'> 133818737350112 1
Flattening 133818737350112 into 133818737350304
Flattening <class 'ir.StatList'> 133818737350112
Flattening 133818737350304 into 133818737664880
Flattening <class 'ir.StatList'> 133818737350304
Flattening 133818737664880 into 133818737650992
Flattening <class 'ir.StatList'> 133818737664880
Flattening 133818737650992 into 133818737350592
Flattening <class 'ir.StatList'> 133818737650992
Flattening 133818737350592 into 133818737647824
Flattening <class 'ir.StatList'> 133818737350592
navigating children of <class 'ir.StatList'> 133818737665072 2
navigating children of <class 'ir.StatList'> 133818737350784 1
Flattening 133818737350784 into 133818737665072
Flattening <class 'ir.StatList'> 133818737350784
Flattening 133818737665072 into 133818737647824
Flattening <class 'ir.StatList'> 133818737665072
navigating children of <class 'ir.StatList'> 133818737665216 2
navigating children of <class 'ir.StatList'> 133818737350976 1
Flattening 133818737350976 into 133818737665216
Flattening <class 'ir.StatList'> 133818737350976
Flattening 133818737665216 into 133818737647824
Flattening <class 'ir.StatList'> 133818737665216
navigating children of <class 'ir.StatList'> 133818737383600 5
navigating children of <class 'ir.StatList'> 133818737351504 3
navigating children of <class 'ir.StatList'> 133818737351168 1
Flattening 133818737351168 into 133818737351504
Flattening <class 'ir.StatList'> 133818737351168
navigating children of <class 'ir.StatList'> 133818737351312 1
Flattening 133818737351312 into 133818737351504
Flattening <class 'ir.StatList'> 133818737351312
Flattening 133818737351504 into 133818737383600
Flattening <class 'ir.StatList'> 133818737351504
navigating children of <class 'ir.StatList'> 133818737665600 1
navigating children of <class 'ir.StatList'> 133818737383264 5
navigating children of <class 'ir.StatList'> 133818737351936 3
navigating children of <class 'ir.StatList'> 133818737351600 1
Flattening 133818737351600 into 133818737351936
Flattening <class 'ir.StatList'> 133818737351600
navigating children of <class 'ir.StatList'> 133818737351744 1
Flattening 133818737351744 into 133818737351936
Flattening <class 'ir.StatList'> 133818737351744
Flattening 133818737351936 into 133818737383264
Flattening <class 'ir.StatList'> 133818737351936
navigating children of <class 'ir.StatList'> 133818737665984 4
navigating children of <class 'ir.StatList'> 133818737366880 5
navigating children of <class 'ir.StatList'> 133818737365488 4
navigating children of <class 'ir.StatList'> 133818737352608 3
navigating children of <class 'ir.StatList'> 133818737352080 1
Flattening 133818737352080 into 133818737352608
Flattening <class 'ir.StatList'> 133818737352080
navigating children of <class 'ir.StatList'> 133818737352224 1
Flattening 133818737352224 into 133818737352608
Flattening <class 'ir.StatList'> 133818737352224
Flattening 133818737352608 into 133818737365488
Flattening <class 'ir.StatList'> 133818737352608
Flattening 133818737365488 into 133818737366880
Flattening <class 'ir.StatList'> 133818737365488
navigating children of <class 'ir.StatList'> 133818737366592 3
navigating children of <class 'ir.StatList'> 133818737366016 3
navigating children of <class 'ir.StatList'> 133818737365632 1
Flattening 133818737365632 into 133818737366016
Flattening <class 'ir.StatList'> 133818737365632
navigating children of <class 'ir.StatList'> 133818737365824 1
Flattening 133818737365824 into 133818737366016
Flattening <class 'ir.StatList'> 133818737365824
Flattening 133818737366016 into 133818737366592
Flattening <class 'ir.StatList'> 133818737366016
navigating children of <class 'ir.StatList'> 133818737366400 3
navigating children of <class 'ir.StatList'> 133818737666464 1
Flattening 133818737666464 into 133818737366400
Flattening <class 'ir.StatList'> 133818737666464
navigating children of <class 'ir.StatList'> 133818737366112 1
Flattening 133818737366112 into 133818737366400
Flattening <class 'ir.StatList'> 133818737366112
Flattening 133818737366400 into 133818737366592
Flattening <class 'ir.StatList'> 133818737366400
Flattening 133818737366592 into 133818737366880
Flattening <class 'ir.StatList'> 133818737366592
Flattening 133818737366880 into 133818737665984
Flattening <class 'ir.StatList'> 133818737366880
navigating children of <class 'ir.StatList'> 133818737381824 2
navigating children of <class 'ir.StatList'> 133818737381680 4
navigating children of <class 'ir.StatList'> 133818737368320 3
navigating children of <class 'ir.StatList'> 133818737367648 3
navigating children of <class 'ir.StatList'> 133818737367120 1
Flattening 133818737367120 into 133818737367648
Flattening <class 'ir.StatList'> 133818737367120
navigating children of <class 'ir.StatList'> 133818737367456 1
Flattening 133818737367456 into 133818737367648
Flattening <class 'ir.StatList'> 133818737367456
Flattening 133818737367648 into 133818737368320
Flattening <class 'ir.StatList'> 133818737367648
navigating children of <class 'ir.StatList'> 133818737368032 3
navigating children of <class 'ir.StatList'> 133818737667520 1
Flattening 133818737667520 into 133818737368032
Flattening <class 'ir.StatList'> 133818737667520
navigating children of <class 'ir.StatList'> 133818737367744 1
Flattening 133818737367744 into 133818737368032
Flattening <class 'ir.StatList'> 133818737367744
Flattening 133818737368032 into 133818737368320
Flattening <class 'ir.StatList'> 133818737368032
Flattening 133818737368320 into 133818737381680
Flattening <class 'ir.StatList'> 133818737368320
Flattening 133818737381680 into 133818737381824
Flattening <class 'ir.StatList'> 133818737381680
Flattening 133818737381824 into 133818737665984
Flattening <class 'ir.StatList'> 133818737381824
navigating children of <class 'ir.StatList'> 133818737639584 2
navigating children of <class 'ir.StatList'> 133818737382448 3
navigating children of <class 'ir.StatList'> 133818737382064 1
Flattening 133818737382064 into 133818737382448
Flattening <class 'ir.StatList'> 133818737382064
navigating children of <class 'ir.StatList'> 133818737382256 1
Flattening 133818737382256 into 133818737382448
Flattening <class 'ir.StatList'> 133818737382256
Flattening 133818737382448 into 133818737639584
Flattening <class 'ir.StatList'> 133818737382448
Flattening 133818737639584 into 133818737665984
Flattening <class 'ir.StatList'> 133818737639584
navigating children of <class 'ir.StatList'> 133818737639920 2
navigating children of <class 'ir.StatList'> 133818737382928 3
navigating children of <class 'ir.StatList'> 133818737382592 1
Flattening 133818737382592 into 133818737382928
Flattening <class 'ir.StatList'> 133818737382592
navigating children of <class 'ir.StatList'> 133818737382736 1
Flattening 133818737382736 into 133818737382928
Flattening <class 'ir.StatList'> 133818737382736
Flattening 133818737382928 into 133818737639920
Flattening <class 'ir.StatList'> 133818737382928
Flattening 133818737639920 into 133818737665984
Flattening <class 'ir.StatList'> 133818737639920
Flattening 133818737665984 into 133818737383264
Flattening <class 'ir.StatList'> 133818737665984
Flattening 133818737383264 into 133818737665600
Flattening <class 'ir.StatList'> 133818737383264
Flattening 133818737665600 into 133818737383600
Flattening <class 'ir.StatList'> 133818737665600
Flattening 133818737383600 into 133818737647824
Flattening <class 'ir.StatList'> 133818737383600
navigating children of <class 'ir.StatList'> 133818737401920 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640688
navigating children of <class 'ir.StatList'> 133818737384656 3
navigating children of <class 'ir.StatList'> 133818737384272 1
Flattening 133818737384272 into 133818737384656
Flattening <class 'ir.StatList'> 133818737384272
navigating children of <class 'ir.StatList'> 133818737384464 1
Flattening 133818737384464 into 133818737384656
Flattening <class 'ir.StatList'> 133818737384464
Flattening 133818737384656 into 133818737401920
Flattening <class 'ir.StatList'> 133818737384656
navigating children of <class 'ir.StatList'> 133818737385040 2
navigating children of <class 'ir.StatList'> 133818737384944 1
Flattening 133818737384944 into 133818737385040
Flattening <class 'ir.StatList'> 133818737384944
Flattening 133818737385040 into 133818737401920
Flattening <class 'ir.StatList'> 133818737385040
navigating children of <class 'ir.StatList'> 133818737384128 3
navigating children of <class 'ir.StatList'> 133818737383792 1
Flattening 133818737383792 into 133818737384128
Flattening <class 'ir.StatList'> 133818737383792
navigating children of <class 'ir.StatList'> 133818737383936 1
Flattening 133818737383936 into 133818737384128
Flattening <class 'ir.StatList'> 133818737383936
Flattening 133818737384128 into 133818737401920
Flattening <class 'ir.StatList'> 133818737384128
Flattening 133818737401920 into 133818737647824
Flattening <class 'ir.StatList'> 133818737401920
navigating children of <class 'ir.StatList'> 133818737641312 2
navigating children of <class 'ir.StatList'> 133818737640496 1
Flattening 133818737640496 into 133818737641312
Flattening <class 'ir.StatList'> 133818737640496
Flattening 133818737641312 into 133818737647824
Flattening <class 'ir.StatList'> 133818737641312
navigating children of <class 'ir.StatList'> 133818737402544 2
navigating children of <class 'ir.StatList'> 133818737402400 1
Flattening 133818737402400 into 133818737402544
Flattening <class 'ir.StatList'> 133818737402400
Flattening 133818737402544 into 133818737647824
Flattening <class 'ir.StatList'> 133818737402544
navigating children of <class 'ir.StatList'> 133818737404416 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642128
navigating children of <class 'ir.StatList'> 133818737403600 3
navigating children of <class 'ir.StatList'> 133818737403216 1
Flattening 133818737403216 into 133818737403600
Flattening <class 'ir.StatList'> 133818737403216
navigating children of <class 'ir.StatList'> 133818737403408 1
Flattening 133818737403408 into 133818737403600
Flattening <class 'ir.StatList'> 133818737403408
Flattening 133818737403600 into 133818737404416
Flattening <class 'ir.StatList'> 133818737403600
navigating children of <class 'ir.StatList'> 133818737403984 2
navigating children of <class 'ir.StatList'> 133818737403888 1
Flattening 133818737403888 into 133818737403984
Flattening <class 'ir.StatList'> 133818737403888
Flattening 133818737403984 into 133818737404416
Flattening <class 'ir.StatList'> 133818737403984
navigating children of <class 'ir.StatList'> 133818737403072 3
navigating children of <class 'ir.StatList'> 133818737402784 1
Flattening 133818737402784 into 133818737403072
Flattening <class 'ir.StatList'> 133818737402784
navigating children of <class 'ir.StatList'> 133818737402880 1
Flattening 133818737402880 into 133818737403072
Flattening <class 'ir.StatList'> 133818737402880
Flattening 133818737403072 into 133818737404416
Flattening <class 'ir.StatList'> 133818737403072
Flattening 133818737404416 into 133818737647824
Flattening <class 'ir.StatList'> 133818737404416
navigating children of <class 'ir.StatList'> 133818737404800 2
navigating children of <class 'ir.StatList'> 133818737404704 1
Flattening 133818737404704 into 133818737404800
Flattening <class 'ir.StatList'> 133818737404704
Flattening 133818737404800 into 133818737647824
Flattening <class 'ir.StatList'> 133818737404800
navigating children of <class 'ir.StatList'> 133818737405280 2
navigating children of <class 'ir.StatList'> 133818737405184 1
Flattening 133818737405184 into 133818737405280
Flattening <class 'ir.StatList'> 133818737405184
Flattening 133818737405280 into 133818737647824
Flattening <class 'ir.StatList'> 133818737405280
navigating children of <class 'ir.StatList'> 133818737415408 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737696976
navigating children of <class 'ir.StatList'> 133818737414592 3
navigating children of <class 'ir.StatList'> 133818737414256 1
Flattening 133818737414256 into 133818737414592
Flattening <class 'ir.StatList'> 133818737414256
navigating children of <class 'ir.StatList'> 133818737414400 1
Flattening 133818737414400 into 133818737414592
Flattening <class 'ir.StatList'> 133818737414400
Flattening 133818737414592 into 133818737415408
Flattening <class 'ir.StatList'> 133818737414592
navigating children of <class 'ir.StatList'> 133818737414976 2
navigating children of <class 'ir.StatList'> 133818737414880 1
Flattening 133818737414880 into 133818737414976
Flattening <class 'ir.StatList'> 133818737414880
Flattening 133818737414976 into 133818737415408
Flattening <class 'ir.StatList'> 133818737414976
navigating children of <class 'ir.StatList'> 133818737405808 3
navigating children of <class 'ir.StatList'> 133818737405520 1
Flattening 133818737405520 into 133818737405808
Flattening <class 'ir.StatList'> 133818737405520
navigating children of <class 'ir.StatList'> 133818737405616 1
Flattening 133818737405616 into 133818737405808
Flattening <class 'ir.StatList'> 133818737405616
Flattening 133818737405808 into 133818737415408
Flattening <class 'ir.StatList'> 133818737405808
Flattening 133818737415408 into 133818737647824
Flattening <class 'ir.StatList'> 133818737415408
navigating children of <class 'ir.StatList'> 133818737415792 2
navigating children of <class 'ir.StatList'> 133818737415696 1
Flattening 133818737415696 into 133818737415792
Flattening <class 'ir.StatList'> 133818737415696
Flattening 133818737415792 into 133818737647824
Flattening <class 'ir.StatList'> 133818737415792
navigating children of <class 'ir.StatList'> 133818737416272 2
navigating children of <class 'ir.StatList'> 133818737416176 1
Flattening 133818737416176 into 133818737416272
Flattening <class 'ir.StatList'> 133818737416176
Flattening 133818737416272 into 133818737647824
Flattening <class 'ir.StatList'> 133818737416272
navigating children of <class 'ir.StatList'> 133818737230272 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737698704
navigating children of <class 'ir.StatList'> 133818737417328 3
navigating children of <class 'ir.StatList'> 133818737416944 1
Flattening 133818737416944 into 133818737417328
Flattening <class 'ir.StatList'> 133818737416944
navigating children of <class 'ir.StatList'> 133818737417136 1
Flattening 133818737417136 into 133818737417328
Flattening <class 'ir.StatList'> 133818737417136
Flattening 133818737417328 into 133818737230272
Flattening <class 'ir.StatList'> 133818737417328
navigating children of <class 'ir.StatList'> 133818737417712 2
navigating children of <class 'ir.StatList'> 133818737417616 1
Flattening 133818737417616 into 133818737417712
Flattening <class 'ir.StatList'> 133818737417616
Flattening 133818737417712 into 133818737230272
Flattening <class 'ir.StatList'> 133818737417712
navigating children of <class 'ir.StatList'> 133818737229888 2
navigating children of <class 'ir.StatList'> 133818737418096 1
Flattening 133818737418096 into 133818737229888
Flattening <class 'ir.StatList'> 133818737418096
Flattening 133818737229888 into 133818737230272
Flattening <class 'ir.StatList'> 133818737229888
navigating children of <class 'ir.StatList'> 133818737416800 3
navigating children of <class 'ir.StatList'> 133818737416512 1
Flattening 133818737416512 into 133818737416800
Flattening <class 'ir.StatList'> 133818737416512
navigating children of <class 'ir.StatList'> 133818737416608 1
Flattening 133818737416608 into 133818737416800
Flattening <class 'ir.StatList'> 133818737416608
Flattening 133818737416800 into 133818737230272
Flattening <class 'ir.StatList'> 133818737416800
Flattening 133818737230272 into 133818737647824
Flattening <class 'ir.StatList'> 133818737230272
navigating children of <class 'ir.StatList'> 133818737230656 2
navigating children of <class 'ir.StatList'> 133818737230560 1
Flattening 133818737230560 into 133818737230656
Flattening <class 'ir.StatList'> 133818737230560
Flattening 133818737230656 into 133818737647824
Flattening <class 'ir.StatList'> 133818737230656
navigating children of <class 'ir.StatList'> 133818737231136 2
navigating children of <class 'ir.StatList'> 133818737231040 1
Flattening 133818737231040 into 133818737231136
Flattening <class 'ir.StatList'> 133818737231040
Flattening 133818737231136 into 133818737647824
Flattening <class 'ir.StatList'> 133818737231136
navigating children of <class 'ir.StatList'> 133818737233008 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700240
navigating children of <class 'ir.StatList'> 133818737232192 3
navigating children of <class 'ir.StatList'> 133818737231808 1
Flattening 133818737231808 into 133818737232192
Flattening <class 'ir.StatList'> 133818737231808
navigating children of <class 'ir.StatList'> 133818737232000 1
Flattening 133818737232000 into 133818737232192
Flattening <class 'ir.StatList'> 133818737232000
Flattening 133818737232192 into 133818737233008
Flattening <class 'ir.StatList'> 133818737232192
navigating children of <class 'ir.StatList'> 133818737232576 2
navigating children of <class 'ir.StatList'> 133818737232480 1
Flattening 133818737232480 into 133818737232576
Flattening <class 'ir.StatList'> 133818737232480
Flattening 133818737232576 into 133818737233008
Flattening <class 'ir.StatList'> 133818737232576
navigating children of <class 'ir.StatList'> 133818737231664 3
navigating children of <class 'ir.StatList'> 133818737231376 1
Flattening 133818737231376 into 133818737231664
Flattening <class 'ir.StatList'> 133818737231376
navigating children of <class 'ir.StatList'> 133818737231472 1
Flattening 133818737231472 into 133818737231664
Flattening <class 'ir.StatList'> 133818737231472
Flattening 133818737231664 into 133818737233008
Flattening <class 'ir.StatList'> 133818737231664
Flattening 133818737233008 into 133818737647824
Flattening <class 'ir.StatList'> 133818737233008
navigating children of <class 'ir.StatList'> 133818737233392 2
navigating children of <class 'ir.StatList'> 133818737233296 1
Flattening 133818737233296 into 133818737233392
Flattening <class 'ir.StatList'> 133818737233296
Flattening 133818737233392 into 133818737647824
Flattening <class 'ir.StatList'> 133818737233392
navigating children of <class 'ir.StatList'> 133818737242176 2
navigating children of <class 'ir.StatList'> 133818737233776 1
Flattening 133818737233776 into 133818737242176
Flattening <class 'ir.StatList'> 133818737233776
Flattening 133818737242176 into 133818737647824
Flattening <class 'ir.StatList'> 133818737242176
navigating children of <class 'ir.StatList'> 133818737244000 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737705936
navigating children of <class 'ir.StatList'> 133818737243184 3
navigating children of <class 'ir.StatList'> 133818737242800 1
Flattening 133818737242800 into 133818737243184
Flattening <class 'ir.StatList'> 133818737242800
navigating children of <class 'ir.StatList'> 133818737242992 1
Flattening 133818737242992 into 133818737243184
Flattening <class 'ir.StatList'> 133818737242992
Flattening 133818737243184 into 133818737244000
Flattening <class 'ir.StatList'> 133818737243184
navigating children of <class 'ir.StatList'> 133818737243568 2
navigating children of <class 'ir.StatList'> 133818737243472 1
Flattening 133818737243472 into 133818737243568
Flattening <class 'ir.StatList'> 133818737243472
Flattening 133818737243568 into 133818737244000
Flattening <class 'ir.StatList'> 133818737243568
navigating children of <class 'ir.StatList'> 133818737242656 3
navigating children of <class 'ir.StatList'> 133818737242368 1
Flattening 133818737242368 into 133818737242656
Flattening <class 'ir.StatList'> 133818737242368
navigating children of <class 'ir.StatList'> 133818737242464 1
Flattening 133818737242464 into 133818737242656
Flattening <class 'ir.StatList'> 133818737242464
Flattening 133818737242656 into 133818737244000
Flattening <class 'ir.StatList'> 133818737242656
Flattening 133818737244000 into 133818737647824
Flattening <class 'ir.StatList'> 133818737244000
navigating children of <class 'ir.StatList'> 133818737244384 2
navigating children of <class 'ir.StatList'> 133818737244288 1
Flattening 133818737244288 into 133818737244384
Flattening <class 'ir.StatList'> 133818737244288
Flattening 133818737244384 into 133818737647824
Flattening <class 'ir.StatList'> 133818737244384
navigating children of <class 'ir.StatList'> 133818737244864 2
navigating children of <class 'ir.StatList'> 133818737244768 1
Flattening 133818737244768 into 133818737244864
Flattening <class 'ir.StatList'> 133818737244768
Flattening 133818737244864 into 133818737647824
Flattening <class 'ir.StatList'> 133818737244864
navigating children of <class 'ir.StatList'> 133818737271376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737707472
navigating children of <class 'ir.StatList'> 133818737245920 3
navigating children of <class 'ir.StatList'> 133818737245536 1
Flattening 133818737245536 into 133818737245920
Flattening <class 'ir.StatList'> 133818737245536
navigating children of <class 'ir.StatList'> 133818737245728 1
Flattening 133818737245728 into 133818737245920
Flattening <class 'ir.StatList'> 133818737245728
Flattening 133818737245920 into 133818737271376
Flattening <class 'ir.StatList'> 133818737245920
navigating children of <class 'ir.StatList'> 133818737270944 2
navigating children of <class 'ir.StatList'> 133818737246160 1
Flattening 133818737246160 into 133818737270944
Flattening <class 'ir.StatList'> 133818737246160
Flattening 133818737270944 into 133818737271376
Flattening <class 'ir.StatList'> 133818737270944
navigating children of <class 'ir.StatList'> 133818737245392 3
navigating children of <class 'ir.StatList'> 133818737245104 1
Flattening 133818737245104 into 133818737245392
Flattening <class 'ir.StatList'> 133818737245104
navigating children of <class 'ir.StatList'> 133818737245200 1
Flattening 133818737245200 into 133818737245392
Flattening <class 'ir.StatList'> 133818737245200
Flattening 133818737245392 into 133818737271376
Flattening <class 'ir.StatList'> 133818737245392
Flattening 133818737271376 into 133818737647824
Flattening <class 'ir.StatList'> 133818737271376
navigating children of <class 'ir.StatList'> 133818737271760 2
navigating children of <class 'ir.StatList'> 133818737271664 1
Flattening 133818737271664 into 133818737271760
Flattening <class 'ir.StatList'> 133818737271664
Flattening 133818737271760 into 133818737647824
Flattening <class 'ir.StatList'> 133818737271760
navigating children of <class 'ir.StatList'> 133818737708288 2
navigating children of <class 'ir.StatList'> 133818737271952 1
Flattening 133818737271952 into 133818737708288
Flattening <class 'ir.StatList'> 133818737271952
Flattening 133818737708288 into 133818737647824
Flattening <class 'ir.StatList'> 133818737708288
navigating children of <class 'ir.StatList'> 133818737272432 2
navigating children of <class 'ir.StatList'> 133818737272336 1
Flattening 133818737272336 into 133818737272432
Flattening <class 'ir.StatList'> 133818737272336
Flattening 133818737272432 into 133818737647824
Flattening <class 'ir.StatList'> 133818737272432
navigating children of <class 'ir.StatList'> 133818737283568 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717888
navigating children of <class 'ir.StatList'> 133818737273488 3
navigating children of <class 'ir.StatList'> 133818737273104 1
Flattening 133818737273104 into 133818737273488
Flattening <class 'ir.StatList'> 133818737273104
navigating children of <class 'ir.StatList'> 133818737273296 1
Flattening 133818737273296 into 133818737273488
Flattening <class 'ir.StatList'> 133818737273296
Flattening 133818737273488 into 133818737283568
Flattening <class 'ir.StatList'> 133818737273488
navigating children of <class 'ir.StatList'> 133818737717360 2
navigating children of <class 'ir.StatList'> 133818737273920 3
navigating children of <class 'ir.StatList'> 133818737273584 1
Flattening 133818737273584 into 133818737273920
Flattening <class 'ir.StatList'> 133818737273584
navigating children of <class 'ir.StatList'> 133818737273728 1
Flattening 133818737273728 into 133818737273920
Flattening <class 'ir.StatList'> 133818737273728
Flattening 133818737273920 into 133818737717360
Flattening <class 'ir.StatList'> 133818737273920
Flattening 133818737717360 into 133818737283568
Flattening <class 'ir.StatList'> 133818737717360
navigating children of <class 'ir.StatList'> 133818737274400 2
navigating children of <class 'ir.StatList'> 133818737274304 1
Flattening 133818737274304 into 133818737274400
Flattening <class 'ir.StatList'> 133818737274304
Flattening 133818737274400 into 133818737283568
Flattening <class 'ir.StatList'> 133818737274400
navigating children of <class 'ir.StatList'> 133818737283184 2
navigating children of <class 'ir.StatList'> 133818737274784 1
Flattening 133818737274784 into 133818737283184
Flattening <class 'ir.StatList'> 133818737274784
Flattening 133818737283184 into 133818737283568
Flattening <class 'ir.StatList'> 133818737283184
navigating children of <class 'ir.StatList'> 133818737272960 3
navigating children of <class 'ir.StatList'> 133818737272672 1
Flattening 133818737272672 into 133818737272960
Flattening <class 'ir.StatList'> 133818737272672
navigating children of <class 'ir.StatList'> 133818737272768 1
Flattening 133818737272768 into 133818737272960
Flattening <class 'ir.StatList'> 133818737272768
Flattening 133818737272960 into 133818737283568
Flattening <class 'ir.StatList'> 133818737272960
Flattening 133818737283568 into 133818737647824
Flattening <class 'ir.StatList'> 133818737283568
navigating children of <class 'ir.StatList'> 133818737283952 2
navigating children of <class 'ir.StatList'> 133818737283856 1
Flattening 133818737283856 into 133818737283952
Flattening <class 'ir.StatList'> 133818737283856
Flattening 133818737283952 into 133818737647824
Flattening <class 'ir.StatList'> 133818737283952
navigating children of <class 'ir.StatList'> 133818737284432 2
navigating children of <class 'ir.StatList'> 133818737284336 1
Flattening 133818737284336 into 133818737284432
Flattening <class 'ir.StatList'> 133818737284336
Flattening 133818737284432 into 133818737647824
Flattening <class 'ir.StatList'> 133818737284432
navigating children of <class 'ir.StatList'> 133818737718896 2
navigating children of <class 'ir.StatList'> 133818737284624 1
Flattening 133818737284624 into 133818737718896
Flattening <class 'ir.StatList'> 133818737284624
Flattening 133818737718896 into 133818737647824
Flattening <class 'ir.StatList'> 133818737718896
navigating children of <class 'ir.StatList'> 133818737285104 2
navigating children of <class 'ir.StatList'> 133818737285008 1
Flattening 133818737285008 into 133818737285104
Flattening <class 'ir.StatList'> 133818737285008
Flattening 133818737285104 into 133818737647824
Flattening <class 'ir.StatList'> 133818737285104
navigating children of <class 'ir.StatList'> 133818737303952 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720096
navigating children of <class 'ir.StatList'> 133818737286160 3
navigating children of <class 'ir.StatList'> 133818737285776 1
Flattening 133818737285776 into 133818737286160
Flattening <class 'ir.StatList'> 133818737285776
navigating children of <class 'ir.StatList'> 133818737285968 1
Flattening 133818737285968 into 133818737286160
Flattening <class 'ir.StatList'> 133818737285968
Flattening 133818737286160 into 133818737303952
Flattening <class 'ir.StatList'> 133818737286160
navigating children of <class 'ir.StatList'> 133818737719760 2
navigating children of <class 'ir.StatList'> 133818737286592 3
navigating children of <class 'ir.StatList'> 133818737286256 1
Flattening 133818737286256 into 133818737286592
Flattening <class 'ir.StatList'> 133818737286256
navigating children of <class 'ir.StatList'> 133818737286400 1
Flattening 133818737286400 into 133818737286592
Flattening <class 'ir.StatList'> 133818737286400
Flattening 133818737286592 into 133818737719760
Flattening <class 'ir.StatList'> 133818737286592
Flattening 133818737719760 into 133818737303952
Flattening <class 'ir.StatList'> 133818737719760
navigating children of <class 'ir.StatList'> 133818737287072 2
navigating children of <class 'ir.StatList'> 133818737286976 1
Flattening 133818737286976 into 133818737287072
Flattening <class 'ir.StatList'> 133818737286976
Flattening 133818737287072 into 133818737303952
Flattening <class 'ir.StatList'> 133818737287072
navigating children of <class 'ir.StatList'> 133818737285632 3
navigating children of <class 'ir.StatList'> 133818737285344 1
Flattening 133818737285344 into 133818737285632
Flattening <class 'ir.StatList'> 133818737285344
navigating children of <class 'ir.StatList'> 133818737285440 1
Flattening 133818737285440 into 133818737285632
Flattening <class 'ir.StatList'> 133818737285440
Flattening 133818737285632 into 133818737303952
Flattening <class 'ir.StatList'> 133818737285632
Flattening 133818737303952 into 133818737647824
Flattening <class 'ir.StatList'> 133818737303952
navigating children of <class 'ir.StatList'> 133818737284816 2
navigating children of <class 'ir.StatList'> 133818737286832 1
Flattening 133818737286832 into 133818737284816
Flattening <class 'ir.StatList'> 133818737286832
Flattening 133818737284816 into 133818737647824
Flattening <class 'ir.StatList'> 133818737284816
navigating children of <class 'ir.StatList'> 133818737274016 2
navigating children of <class 'ir.StatList'> 133818737274592 1
Flattening 133818737274592 into 133818737274016
Flattening <class 'ir.StatList'> 133818737274592
Flattening 133818737274016 into 133818737647824
Flattening <class 'ir.StatList'> 133818737274016
Not flattening 133818737647824 into 133818737721104 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 133818737647824
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104

--- IR Tree After Flattening ---
<class 'ir.Block'> 133818737721104 {
                                                                      <<<<<----- BUG? MISSING PARENT
	defs: 	<class 'ir.DefinitionList'> 133818738260672 {
	parent = 133818737721104
		children:
		<class 'ir.FunctionDef'> 133818737647728 {
		parent = 133818738260672
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 133818737584160 {
			parent = 133818737647728
				defs: 	<class 'ir.DefinitionList'> 133818737585504 {
				parent = 133818737584160
				}
				body: 	<class 'ir.StatList'> 133818737585648 {
				parent = 133818737584160
					children:
					reg int t0 <- 1234
					auto int test <- reg int t0
					reg int t1 <- global int x
					reg int t2 <- global int x
					reg int32_t t3 <- reg int t1 times reg int t2
					global int squ <- reg int32_t t3
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				auto function square
				
			}
		}
	}
	body: 	<class 'ir.StatList'> 133818737647824 {
	parent = 133818737721104
		children:
		reg int t4 <- 1
		reg int t5 <- minus reg int t4
		global int x <- reg int t5
		read reg int t6
		global int x <- reg int t6
		reg int t7 <- global int x
		reg int t8 <- 100
		reg int32_t t9 <- reg int t7 gtr reg int t8
		branch on reg int32_t t9 to auto label label2
		reg int t11 <- global int x
		print reg int t11
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 133818737271568 {
		parent = 133818737647824
		}
		reg int t12 <- global int x
		reg int t14 <- minus reg int t12
		print reg int t14
		label1: <class 'ir.EmptyStat'> 133818737648736 {
		parent = 133818737647824
		}
		reg int t15 <- 1
		global int x <- reg int t15
		label3: <class 'ir.EmptyStat'> 133818737272096 {
		parent = 133818737647824
		}
		reg int t16 <- global int x
		reg int t17 <- 10
		reg int32_t t18 <- reg int t16 leq reg int t17
		branch on not reg int32_t t18 to auto label label4
		call  to auto function square
		reg int t19 <- global int x
		reg int t20 <- 1
		reg int32_t t21 <- reg int t19 plus reg int t20
		global int x <- reg int32_t t21
		reg int t23 <- global int squ
		print reg int t23
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 133818737650368 {
		parent = 133818737647824
		}
		reg int t24 <- 101
		global int x <- reg int t24
		label5: <class 'ir.EmptyStat'> 133818737271520 {
		parent = 133818737647824
		}
		reg int t25 <- global int x
		reg int t26 <- 105
		reg int32_t t27 <- reg int t25 leq reg int t26
		branch on not reg int32_t t27 to auto label label6
		reg int t28 <- global int x
		reg int t29 <- global int x
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t33 <- reg int32_t t31 times reg int t32
		reg &char t34 <- &(global char[5] arr)
		reg &char t35 <- reg &char t34 plus reg int32_t t33
		[reg &char t35] <- reg int t28
		reg int t36 <- global int x
		reg int t37 <- 100
		reg int32_t t38 <- reg int t36 minus reg int t37
		reg int t39 <- 1
		reg int32_t t41 <- reg int32_t t38 times reg int t39
		reg &char t46 <- &(global char[5] arr)
		reg &char t47 <- reg &char t46 plus reg int32_t t41
		reg char t45 <- [reg &char t47]
		print reg char t45
		reg int t48 <- global int x
		reg int t49 <- 1
		reg int32_t t50 <- reg int t48 plus reg int t49
		global int x <- reg int32_t t50
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 133818737664832 {
		parent = 133818737647824
		}
		reg int t51 <- 1
		global int x <- reg int t51
		reg int t52 <- 1
		global int y <- reg int t52
		label9: <class 'ir.EmptyStat'> 133818737246016 {
		parent = 133818737647824
		}
		reg int t53 <- global int x
		reg int t54 <- 5
		reg int32_t t55 <- reg int t53 leq reg int t54
		branch on not reg int32_t t55 to auto label label10
		label7: <class 'ir.EmptyStat'> 133818737244576 {
		parent = 133818737647824
		}
		reg int t56 <- global int y
		reg int t57 <- 5
		reg int32_t t58 <- reg int t56 leq reg int t57
		branch on not reg int32_t t58 to auto label label8
		reg int t59 <- global int x
		reg int t60 <- 1
		reg int32_t t62 <- reg int t59 times reg int t60
		reg &char t64 <- &(global char[5] arr)
		reg &char t65 <- reg &char t64 plus reg int32_t t62
		reg char t63 <- [reg &char t65]
		reg int t66 <- global int x
		reg int t67 <- 10
		reg int32_t t68 <- reg int t66 times reg int t67
		reg int t69 <- global int y
		reg int t70 <- 2
		reg int32_t t71 <- reg int t69 times reg int t70
		reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
		reg &short t73 <- &(global short[5, 5] multid)
		reg &short t74 <- reg &short t73 plus reg int32_t t72
		[reg &short t74] <- reg char t63
		reg int t75 <- global int x
		reg int t76 <- 10
		reg int32_t t77 <- reg int t75 times reg int t76
		reg int t78 <- global int y
		reg int t79 <- 2
		reg int32_t t80 <- reg int t78 times reg int t79
		reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
		reg &short t87 <- &(global short[5, 5] multid)
		reg &short t88 <- reg &short t87 plus reg int32_t t82
		reg short t86 <- [reg &short t88]
		print reg short t86
		reg int t89 <- global int x
		reg int t90 <- 1
		reg int32_t t91 <- reg int t89 plus reg int t90
		global int x <- reg int32_t t91
		reg int t92 <- global int y
		reg int t93 <- 1
		reg int32_t t94 <- reg int t92 plus reg int t93
		global int y <- reg int32_t t94
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 133818737383024 {
		parent = 133818737647824
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 133818737383408 {
		parent = 133818737647824
		}
		<class 'ir.AssignStat'> 133818737640688 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737640208 {
			parent = 133818737640688
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int a
			offset: 	None
		}
		label11: <class 'ir.EmptyStat'> 133818737243904 {
		parent = 133818737647824
		}
		reg int t98 <- auto int a
		reg int t99 <- 20
		reg int32_t t100 <- reg int t98 leq reg int t99
		branch on not reg int32_t t100 to auto label label13
		reg int t102 <- auto int a
		print reg int t102
		reg int t95 <- auto int a
		reg int t96 <- 1
		reg int32_t t97 <- reg int t95 plus reg int t96
		auto int a <- reg int32_t t97
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 133818737385232 {
		parent = 133818737647824
		}
		reg int t103 <- 10
		global int i <- reg int t103
		reg int t105 <- 99991
		print reg int t105
		<class 'ir.AssignStat'> 133818737642128 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737641648 {
			parent = 133818737642128
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int i
			offset: 	None
		}
		label14: <class 'ir.EmptyStat'> 133818737243280 {
		parent = 133818737647824
		}
		reg int t109 <- auto int i
		reg int t110 <- 15
		reg int32_t t111 <- reg int t109 leq reg int t110
		branch on not reg int32_t t111 to auto label label16
		reg int t113 <- global int i
		print reg int t113
		reg int t106 <- auto int i
		reg int t107 <- 1
		reg int32_t t108 <- reg int t106 plus reg int t107
		auto int i <- reg int32_t t108
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 133818737404176 {
		parent = 133818737647824
		}
		reg int t115 <- 88881
		print reg int t115
		reg int t117 <- 99992
		print reg int t117
		<class 'ir.AssignStat'> 133818737696976 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737643184 {
			parent = 133818737696976
				symbol: 	None
				value: 	5
			}
			symbol: 	auto int j
			offset: 	None
		}
		label17: <class 'ir.EmptyStat'> 133818737244528 {
		parent = 133818737647824
		}
		reg int t121 <- auto int j
		reg int t122 <- 5
		reg int32_t t123 <- reg int t121 leq reg int t122
		branch on not reg int32_t t123 to auto label label19
		reg int t125 <- global int j
		print reg int t125
		reg int t118 <- auto int j
		reg int t119 <- 1
		reg int32_t t120 <- reg int t118 plus reg int t119
		auto int j <- reg int32_t t120
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 133818737415168 {
		parent = 133818737647824
		}
		reg int t127 <- 88882
		print reg int t127
		reg int t129 <- 99993
		print reg int t129
		<class 'ir.AssignStat'> 133818737698704 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737698032 {
			parent = 133818737698704
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int k
			offset: 	None
		}
		label20: <class 'ir.EmptyStat'> 133818737233152 {
		parent = 133818737647824
		}
		reg int t133 <- auto int k
		reg int t134 <- 5
		reg int32_t t135 <- reg int t133 leq reg int t134
		branch on not reg int32_t t135 to auto label label22
		reg int t137 <- 77777
		print reg int t137
		reg int t139 <- global int k
		print reg int t139
		reg int t130 <- auto int k
		reg int t131 <- 1
		reg int32_t t132 <- reg int t130 plus reg int t131
		auto int k <- reg int32_t t132
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 133818737230032 {
		parent = 133818737647824
		}
		reg int t141 <- 88883
		print reg int t141
		reg int t143 <- 99994
		print reg int t143
		<class 'ir.AssignStat'> 133818737700240 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737699760 {
			parent = 133818737700240
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int m
			offset: 	None
		}
		label23: <class 'ir.EmptyStat'> 133818737230944 {
		parent = 133818737647824
		}
		reg int t147 <- auto int m
		reg int t148 <- 6
		reg int32_t t149 <- reg int t147 leq reg int t148
		branch on not reg int32_t t149 to auto label label25
		reg int t151 <- global int m
		print reg int t151
		reg int t144 <- auto int m
		reg int t145 <- 1
		reg int32_t t146 <- reg int t144 plus reg int t145
		auto int m <- reg int32_t t146
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 133818737232768 {
		parent = 133818737647824
		}
		reg int t153 <- 88884
		print reg int t153
		reg int t155 <- 99995
		print reg int t155
		<class 'ir.AssignStat'> 133818737705936 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737705456 {
			parent = 133818737705936
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int n
			offset: 	None
		}
		label26: <class 'ir.EmptyStat'> 133818737242800 {
		parent = 133818737647824
		}
		reg int t159 <- auto int n
		reg int t160 <- 7
		reg int32_t t161 <- reg int t159 leq reg int t160
		branch on not reg int32_t t161 to auto label label28
		reg int t163 <- global int n
		print reg int t163
		reg int t156 <- auto int n
		reg int t157 <- 1
		reg int32_t t158 <- reg int t156 plus reg int t157
		auto int n <- reg int32_t t158
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 133818737243760 {
		parent = 133818737647824
		}
		reg int t165 <- 88885
		print reg int t165
		reg int t167 <- 99996
		print reg int t167
		<class 'ir.AssignStat'> 133818737707472 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737706992 {
			parent = 133818737707472
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int p
			offset: 	None
		}
		label29: <class 'ir.EmptyStat'> 133818737244672 {
		parent = 133818737647824
		}
		reg int t171 <- auto int p
		reg int t172 <- 12
		reg int32_t t173 <- reg int t171 leq reg int t172
		branch on not reg int32_t t173 to auto label label31
		reg int t175 <- global int p
		print reg int t175
		reg int t168 <- auto int p
		reg int t169 <- 1
		reg int32_t t170 <- reg int t168 plus reg int t169
		auto int p <- reg int32_t t170
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 133818737271136 {
		parent = 133818737647824
		}
		reg int t177 <- 88886
		print reg int t177
		reg int t178 <- 0
		global int sum <- reg int t178
		reg int t180 <- 99997
		print reg int t180
		<class 'ir.AssignStat'> 133818737717888 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737708624 {
			parent = 133818737717888
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int q
			offset: 	None
		}
		label32: <class 'ir.EmptyStat'> 133818737272336 {
		parent = 133818737647824
		}
		reg int t184 <- auto int q
		reg int t185 <- 5
		reg int32_t t186 <- reg int t184 leq reg int t185
		branch on not reg int32_t t186 to auto label label34
		reg int t187 <- global int sum
		reg int t188 <- global int q
		reg int32_t t189 <- reg int t187 plus reg int t188
		global int sum <- reg int32_t t189
		reg int t191 <- global int q
		print reg int t191
		reg int t193 <- global int sum
		print reg int t193
		reg int t181 <- auto int q
		reg int t182 <- 1
		reg int32_t t183 <- reg int t181 plus reg int t182
		auto int q <- reg int32_t t183
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 133818737283328 {
		parent = 133818737647824
		}
		reg int t195 <- global int sum
		print reg int t195
		reg int t197 <- 88887
		print reg int t197
		reg int t198 <- 100
		global int x <- reg int t198
		reg int t200 <- 99998
		print reg int t200
		<class 'ir.AssignStat'> 133818737720096 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737719280 {
			parent = 133818737720096
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int r
			offset: 	None
		}
		label35: <class 'ir.EmptyStat'> 133818737285008 {
		parent = 133818737647824
		}
		reg int t204 <- auto int r
		reg int t205 <- 3
		reg int32_t t206 <- reg int t204 leq reg int t205
		branch on not reg int32_t t206 to auto label label37
		reg int t207 <- global int x
		reg int t208 <- global int r
		reg int32_t t209 <- reg int t207 plus reg int t208
		global int x <- reg int32_t t209
		reg int t211 <- global int x
		print reg int t211
		reg int t201 <- auto int r
		reg int t202 <- 1
		reg int32_t t203 <- reg int t201 plus reg int t202
		auto int r <- reg int32_t t203
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 133818737303712 {
		parent = 133818737647824
		}
		reg int t213 <- global int x
		print reg int t213
		reg int t215 <- 88888
		print reg int t215
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 6
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 297
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640688
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642128
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737696976
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737698704
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700240
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737705936
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737707472
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717888
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720096
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104

--- Performing Data Layout ---

--- IR Tree After Data Layout (Symbols might have allocinfo) ---
<class 'ir.Block'> 133818737721104 {
                                                                      <<<<<----- BUG? MISSING PARENT
	defs: 	<class 'ir.DefinitionList'> 133818738260672 {
	parent = 133818737721104
		children:
		<class 'ir.FunctionDef'> 133818737647728 {
		parent = 133818738260672
			symbol: 	auto function square
			body: 	<class 'ir.Block'> 133818737584160 {
			parent = 133818737647728
				defs: 	<class 'ir.DefinitionList'> 133818737585504 {
				parent = 133818737584160
				}
				body: 	<class 'ir.StatList'> 133818737585648 {
				parent = 133818737584160
					children:
					reg int t0 <- 1234
					auto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t0
					reg int t1 <- global int x; _g_x: def byte 4
					reg int t2 <- global int x; _g_x: def byte 4
					reg int32_t t3 <- reg int t1 times reg int t2
					global int squ; _g_squ: def byte 4 <- reg int32_t t3
				}
				global_symtab: 	SymbolTable:
				global int x; _g_x: def byte 4
				global int y; _g_y: def byte 4
				global int squ; _g_squ: def byte 4
				global char[5] arr; _g_arr: def byte 5
				global short[5, 5] multid; _g_multid: def byte 50
				global int i; _g_i: def byte 4
				global int j; _g_j: def byte 4
				global int k; _g_k: def byte 4
				global int m; _g_m: def byte 4
				global int n; _g_n: def byte 4
				global int p; _g_p: def byte 4
				global int q; _g_q: def byte 4
				global int sum; _g_sum: def byte 4
				global int r; _g_r: def byte 4
				auto function square
				
			}
		}
	}
	body: 	<class 'ir.StatList'> 133818737647824 {
	parent = 133818737721104
		children:
		reg int t4 <- 1
		reg int t5 <- minus reg int t4
		global int x; _g_x: def byte 4 <- reg int t5
		read reg int t6
		global int x; _g_x: def byte 4 <- reg int t6
		reg int t7 <- global int x; _g_x: def byte 4
		reg int t8 <- 100
		reg int32_t t9 <- reg int t7 gtr reg int t8
		branch on reg int32_t t9 to auto label label2
		reg int t11 <- global int x; _g_x: def byte 4
		print reg int t11
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 133818737271568 {
		parent = 133818737647824
		}
		reg int t12 <- global int x; _g_x: def byte 4
		reg int t14 <- minus reg int t12
		print reg int t14
		label1: <class 'ir.EmptyStat'> 133818737648736 {
		parent = 133818737647824
		}
		reg int t15 <- 1
		global int x; _g_x: def byte 4 <- reg int t15
		label3: <class 'ir.EmptyStat'> 133818737272096 {
		parent = 133818737647824
		}
		reg int t16 <- global int x; _g_x: def byte 4
		reg int t17 <- 10
		reg int32_t t18 <- reg int t16 leq reg int t17
		branch on not reg int32_t t18 to auto label label4
		call  to auto function square
		reg int t19 <- global int x; _g_x: def byte 4
		reg int t20 <- 1
		reg int32_t t21 <- reg int t19 plus reg int t20
		global int x; _g_x: def byte 4 <- reg int32_t t21
		reg int t23 <- global int squ; _g_squ: def byte 4
		print reg int t23
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 133818737650368 {
		parent = 133818737647824
		}
		reg int t24 <- 101
		global int x; _g_x: def byte 4 <- reg int t24
		label5: <class 'ir.EmptyStat'> 133818737271520 {
		parent = 133818737647824
		}
		reg int t25 <- global int x; _g_x: def byte 4
		reg int t26 <- 105
		reg int32_t t27 <- reg int t25 leq reg int t26
		branch on not reg int32_t t27 to auto label label6
		reg int t28 <- global int x; _g_x: def byte 4
		reg int t29 <- global int x; _g_x: def byte 4
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t33 <- reg int32_t t31 times reg int t32
		reg &char t34 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t35 <- reg &char t34 plus reg int32_t t33
		[reg &char t35] <- reg int t28
		reg int t36 <- global int x; _g_x: def byte 4
		reg int t37 <- 100
		reg int32_t t38 <- reg int t36 minus reg int t37
		reg int t39 <- 1
		reg int32_t t41 <- reg int32_t t38 times reg int t39
		reg &char t46 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t47 <- reg &char t46 plus reg int32_t t41
		reg char t45 <- [reg &char t47]
		print reg char t45
		reg int t48 <- global int x; _g_x: def byte 4
		reg int t49 <- 1
		reg int32_t t50 <- reg int t48 plus reg int t49
		global int x; _g_x: def byte 4 <- reg int32_t t50
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 133818737664832 {
		parent = 133818737647824
		}
		reg int t51 <- 1
		global int x; _g_x: def byte 4 <- reg int t51
		reg int t52 <- 1
		global int y; _g_y: def byte 4 <- reg int t52
		label9: <class 'ir.EmptyStat'> 133818737246016 {
		parent = 133818737647824
		}
		reg int t53 <- global int x; _g_x: def byte 4
		reg int t54 <- 5
		reg int32_t t55 <- reg int t53 leq reg int t54
		branch on not reg int32_t t55 to auto label label10
		label7: <class 'ir.EmptyStat'> 133818737244576 {
		parent = 133818737647824
		}
		reg int t56 <- global int y; _g_y: def byte 4
		reg int t57 <- 5
		reg int32_t t58 <- reg int t56 leq reg int t57
		branch on not reg int32_t t58 to auto label label8
		reg int t59 <- global int x; _g_x: def byte 4
		reg int t60 <- 1
		reg int32_t t62 <- reg int t59 times reg int t60
		reg &char t64 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t65 <- reg &char t64 plus reg int32_t t62
		reg char t63 <- [reg &char t65]
		reg int t66 <- global int x; _g_x: def byte 4
		reg int t67 <- 10
		reg int32_t t68 <- reg int t66 times reg int t67
		reg int t69 <- global int y; _g_y: def byte 4
		reg int t70 <- 2
		reg int32_t t71 <- reg int t69 times reg int t70
		reg int32_t t72 <- reg int32_t t68 plus reg int32_t t71
		reg &short t73 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t74 <- reg &short t73 plus reg int32_t t72
		[reg &short t74] <- reg char t63
		reg int t75 <- global int x; _g_x: def byte 4
		reg int t76 <- 10
		reg int32_t t77 <- reg int t75 times reg int t76
		reg int t78 <- global int y; _g_y: def byte 4
		reg int t79 <- 2
		reg int32_t t80 <- reg int t78 times reg int t79
		reg int32_t t82 <- reg int32_t t77 plus reg int32_t t80
		reg &short t87 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t88 <- reg &short t87 plus reg int32_t t82
		reg short t86 <- [reg &short t88]
		print reg short t86
		reg int t89 <- global int x; _g_x: def byte 4
		reg int t90 <- 1
		reg int32_t t91 <- reg int t89 plus reg int t90
		global int x; _g_x: def byte 4 <- reg int32_t t91
		reg int t92 <- global int y; _g_y: def byte 4
		reg int t93 <- 1
		reg int32_t t94 <- reg int t92 plus reg int t93
		global int y; _g_y: def byte 4 <- reg int32_t t94
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 133818737383024 {
		parent = 133818737647824
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 133818737383408 {
		parent = 133818737647824
		}
		<class 'ir.AssignStat'> 133818737640688 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737640208 {
			parent = 133818737640688
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int a
			offset: 	None
		}
		label11: <class 'ir.EmptyStat'> 133818737243904 {
		parent = 133818737647824
		}
		reg int t98 <- auto int a
		reg int t99 <- 20
		reg int32_t t100 <- reg int t98 leq reg int t99
		branch on not reg int32_t t100 to auto label label13
		reg int t102 <- auto int a
		print reg int t102
		reg int t95 <- auto int a
		reg int t96 <- 1
		reg int32_t t97 <- reg int t95 plus reg int t96
		auto int a <- reg int32_t t97
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 133818737385232 {
		parent = 133818737647824
		}
		reg int t103 <- 10
		global int i; _g_i: def byte 4 <- reg int t103
		reg int t105 <- 99991
		print reg int t105
		<class 'ir.AssignStat'> 133818737642128 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737641648 {
			parent = 133818737642128
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int i
			offset: 	None
		}
		label14: <class 'ir.EmptyStat'> 133818737243280 {
		parent = 133818737647824
		}
		reg int t109 <- auto int i
		reg int t110 <- 15
		reg int32_t t111 <- reg int t109 leq reg int t110
		branch on not reg int32_t t111 to auto label label16
		reg int t113 <- global int i; _g_i: def byte 4
		print reg int t113
		reg int t106 <- auto int i
		reg int t107 <- 1
		reg int32_t t108 <- reg int t106 plus reg int t107
		auto int i <- reg int32_t t108
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 133818737404176 {
		parent = 133818737647824
		}
		reg int t115 <- 88881
		print reg int t115
		reg int t117 <- 99992
		print reg int t117
		<class 'ir.AssignStat'> 133818737696976 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737643184 {
			parent = 133818737696976
				symbol: 	None
				value: 	5
			}
			symbol: 	auto int j
			offset: 	None
		}
		label17: <class 'ir.EmptyStat'> 133818737244528 {
		parent = 133818737647824
		}
		reg int t121 <- auto int j
		reg int t122 <- 5
		reg int32_t t123 <- reg int t121 leq reg int t122
		branch on not reg int32_t t123 to auto label label19
		reg int t125 <- global int j; _g_j: def byte 4
		print reg int t125
		reg int t118 <- auto int j
		reg int t119 <- 1
		reg int32_t t120 <- reg int t118 plus reg int t119
		auto int j <- reg int32_t t120
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 133818737415168 {
		parent = 133818737647824
		}
		reg int t127 <- 88882
		print reg int t127
		reg int t129 <- 99993
		print reg int t129
		<class 'ir.AssignStat'> 133818737698704 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737698032 {
			parent = 133818737698704
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int k
			offset: 	None
		}
		label20: <class 'ir.EmptyStat'> 133818737233152 {
		parent = 133818737647824
		}
		reg int t133 <- auto int k
		reg int t134 <- 5
		reg int32_t t135 <- reg int t133 leq reg int t134
		branch on not reg int32_t t135 to auto label label22
		reg int t137 <- 77777
		print reg int t137
		reg int t139 <- global int k; _g_k: def byte 4
		print reg int t139
		reg int t130 <- auto int k
		reg int t131 <- 1
		reg int32_t t132 <- reg int t130 plus reg int t131
		auto int k <- reg int32_t t132
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 133818737230032 {
		parent = 133818737647824
		}
		reg int t141 <- 88883
		print reg int t141
		reg int t143 <- 99994
		print reg int t143
		<class 'ir.AssignStat'> 133818737700240 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737699760 {
			parent = 133818737700240
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int m
			offset: 	None
		}
		label23: <class 'ir.EmptyStat'> 133818737230944 {
		parent = 133818737647824
		}
		reg int t147 <- auto int m
		reg int t148 <- 6
		reg int32_t t149 <- reg int t147 leq reg int t148
		branch on not reg int32_t t149 to auto label label25
		reg int t151 <- global int m; _g_m: def byte 4
		print reg int t151
		reg int t144 <- auto int m
		reg int t145 <- 1
		reg int32_t t146 <- reg int t144 plus reg int t145
		auto int m <- reg int32_t t146
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 133818737232768 {
		parent = 133818737647824
		}
		reg int t153 <- 88884
		print reg int t153
		reg int t155 <- 99995
		print reg int t155
		<class 'ir.AssignStat'> 133818737705936 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737705456 {
			parent = 133818737705936
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int n
			offset: 	None
		}
		label26: <class 'ir.EmptyStat'> 133818737242800 {
		parent = 133818737647824
		}
		reg int t159 <- auto int n
		reg int t160 <- 7
		reg int32_t t161 <- reg int t159 leq reg int t160
		branch on not reg int32_t t161 to auto label label28
		reg int t163 <- global int n; _g_n: def byte 4
		print reg int t163
		reg int t156 <- auto int n
		reg int t157 <- 1
		reg int32_t t158 <- reg int t156 plus reg int t157
		auto int n <- reg int32_t t158
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 133818737243760 {
		parent = 133818737647824
		}
		reg int t165 <- 88885
		print reg int t165
		reg int t167 <- 99996
		print reg int t167
		<class 'ir.AssignStat'> 133818737707472 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737706992 {
			parent = 133818737707472
				symbol: 	None
				value: 	10
			}
			symbol: 	auto int p
			offset: 	None
		}
		label29: <class 'ir.EmptyStat'> 133818737244672 {
		parent = 133818737647824
		}
		reg int t171 <- auto int p
		reg int t172 <- 12
		reg int32_t t173 <- reg int t171 leq reg int t172
		branch on not reg int32_t t173 to auto label label31
		reg int t175 <- global int p; _g_p: def byte 4
		print reg int t175
		reg int t168 <- auto int p
		reg int t169 <- 1
		reg int32_t t170 <- reg int t168 plus reg int t169
		auto int p <- reg int32_t t170
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 133818737271136 {
		parent = 133818737647824
		}
		reg int t177 <- 88886
		print reg int t177
		reg int t178 <- 0
		global int sum; _g_sum: def byte 4 <- reg int t178
		reg int t180 <- 99997
		print reg int t180
		<class 'ir.AssignStat'> 133818737717888 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737708624 {
			parent = 133818737717888
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int q
			offset: 	None
		}
		label32: <class 'ir.EmptyStat'> 133818737272336 {
		parent = 133818737647824
		}
		reg int t184 <- auto int q
		reg int t185 <- 5
		reg int32_t t186 <- reg int t184 leq reg int t185
		branch on not reg int32_t t186 to auto label label34
		reg int t187 <- global int sum; _g_sum: def byte 4
		reg int t188 <- global int q; _g_q: def byte 4
		reg int32_t t189 <- reg int t187 plus reg int t188
		global int sum; _g_sum: def byte 4 <- reg int32_t t189
		reg int t191 <- global int q; _g_q: def byte 4
		print reg int t191
		reg int t193 <- global int sum; _g_sum: def byte 4
		print reg int t193
		reg int t181 <- auto int q
		reg int t182 <- 1
		reg int32_t t183 <- reg int t181 plus reg int t182
		auto int q <- reg int32_t t183
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 133818737283328 {
		parent = 133818737647824
		}
		reg int t195 <- global int sum; _g_sum: def byte 4
		print reg int t195
		reg int t197 <- 88887
		print reg int t197
		reg int t198 <- 100
		global int x; _g_x: def byte 4 <- reg int t198
		reg int t200 <- 99998
		print reg int t200
		<class 'ir.AssignStat'> 133818737720096 {
		parent = 133818737647824
			expr: 	<class 'ir.Const'> 133818737719280 {
			parent = 133818737720096
				symbol: 	None
				value: 	1
			}
			symbol: 	auto int r
			offset: 	None
		}
		label35: <class 'ir.EmptyStat'> 133818737285008 {
		parent = 133818737647824
		}
		reg int t204 <- auto int r
		reg int t205 <- 3
		reg int32_t t206 <- reg int t204 leq reg int t205
		branch on not reg int32_t t206 to auto label label37
		reg int t207 <- global int x; _g_x: def byte 4
		reg int t208 <- global int r; _g_r: def byte 4
		reg int32_t t209 <- reg int t207 plus reg int t208
		global int x; _g_x: def byte 4 <- reg int32_t t209
		reg int t211 <- global int x; _g_x: def byte 4
		print reg int t211
		reg int t201 <- auto int r
		reg int t202 <- 1
		reg int32_t t203 <- reg int t201 plus reg int t202
		auto int r <- reg int32_t t203
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 133818737303712 {
		parent = 133818737647824
		}
		reg int t213 <- global int x; _g_x: def byte 4
		print reg int t213
		reg int t215 <- 88888
		print reg int t215
	}
	global_symtab: 	SymbolTable:
	
}

--- Constructing CFG ---
navigating children of <class 'ir.DefinitionList'> 133818738260672 1
successfully navigated attr  defs  of <class 'ir.Block'> 133818737584160
navigating children of <class 'ir.StatList'> 133818737585648 6
successfully navigated attr  body  of <class 'ir.Block'> 133818737584160
successfully navigated attr  body  of <class 'ir.FunctionDef'> 133818737647728
successfully navigated attr  defs  of <class 'ir.Block'> 133818737721104
navigating children of <class 'ir.StatList'> 133818737647824 297
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737640688
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737642128
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737696976
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737698704
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737700240
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737705936
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737707472
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737717888
successfully navigated attr  expr  of <class 'ir.AssignStat'> 133818737720096
successfully navigated attr  body  of <class 'ir.Block'> 133818737721104
Initial CFG constructed with 43 basic blocks.
CFG graph saved to cfg_initial.dot

--- OPTIMIZATION: Attempting Loop Strip Mining ---

--- Starting Loop Strip Mining Pass (Default Strip Size: 4) ---
   Attempting loop detection using DFS...
   Starting DFS from entry point BB 133818737271856
   Starting DFS from entry point BB 133818737274688
      Found back edge: BB 133818737242368 -> BB 133818737244288 (Header)
      Found back edge: BB 133818737243376 -> BB 133818737245728 (Header)
      Found back edge: BB 133818737245776 -> BB 133818737245632 (Header)
      Found back edge: BB 133818737245248 -> BB 133818737245200 (Header)
      Found back edge: BB 133818737245104 -> BB 133818737244960 (Header)
      Found back edge: BB 133818737244480 -> BB 133818737244384 (Header)
      Found back edge: BB 133818737242176 -> BB 133818737271664 (Header)
      Found back edge: BB 133818737271472 -> BB 133818737271952 (Header)
      Found back edge: BB 133818737270848 -> BB 133818737273296 (Header)
      Found back edge: BB 133818737273728 -> BB 133818737273584 (Header)
      Found back edge: BB 133818737273344 -> BB 133818737273632 (Header)
      Found back edge: BB 133818737274208 -> BB 133818737274304 (Header)
      Found back edge: BB 133818737272816 -> BB 133818737272768 (Header)
      Loop body nodes for header 133818737244288: [133818737244288, 133818737242368]
      Loop body nodes for header 133818737245728: [133818737245728, 133818737243376]
      Loop body nodes for header 133818737245632: [133818737245632, 133818737245776]
      Loop body nodes for header 133818737245200: [133818737245200, 133818737245248]
      Loop body nodes for header 133818737244960: [133818737244960, 133818737245104]
      Loop body nodes for header 133818737244384: [133818737244480, 133818737244384]
      Loop body nodes for header 133818737271664: [133818737242176, 133818737271664]
      Loop body nodes for header 133818737271952: [133818737271952, 133818737271472]
      Loop body nodes for header 133818737273296: [133818737270848, 133818737273296]
      Loop body nodes for header 133818737273584: [133818737273728, 133818737273632, 133818737273344, 133818737273584]
      Loop body nodes for header 133818737273632: [133818737273344, 133818737273632]
      Loop body nodes for header 133818737274304: [133818737274304, 133818737274208]
      Loop body nodes for header 133818737272768: [133818737272768, 133818737272816]
   Loop detection complete. Found 13 unique loop header(s).
   Detected 13 initial loop(s). Analyzing for strip mining...
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737244288...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737244288. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737244288 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737245728...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737245728. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737245728 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737245632...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737245632. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737245632 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737245200...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737245200. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737245200 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737244960...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737244960. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737244960 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737244384...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737244384. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737244384 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737271664...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737271664. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737271664 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737271952...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737271952. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737271952 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737273296...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737273296. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737273296 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737273584...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737273584. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737273584 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737273632...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737273632. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737273632 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737274304...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737274304. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737274304 not suitable for strip mining.
         STRIP_MINE_DEBUG: _analyze_loop_for_strip_mining for header BB 133818737272768...
            STRIP_MINE_DEBUG: (Heuristic) Could not identify LCV for loop 133818737272768. Marked unsuitable.
      STRIP_MINE_DEBUG: Loop with header 133818737272768 not suitable for strip mining.
   STRIP_MINE_DEBUG: No suitable loops were strip-mined or transformation placeholder failed.
--- Loop Strip Mining Pass Complete ---

--- CFG After Attempting Strip Mining ---
CFG graph saved to cfg_after_strip_mining_attempt.dot

--- OPTIMIZATION: Attempting Loop Unrolling ---

--- Starting Loop Unrolling Pass (Factor: 2) ---
   Step 1: Detecting loops...
   Attempting loop detection using DFS...
   Starting DFS from entry point BB 133818737271856
   Starting DFS from entry point BB 133818737274688
      Found back edge: BB 133818737242368 -> BB 133818737244288 (Header)
      Found back edge: BB 133818737243376 -> BB 133818737245728 (Header)
      Found back edge: BB 133818737245776 -> BB 133818737245632 (Header)
      Found back edge: BB 133818737245248 -> BB 133818737245200 (Header)
      Found back edge: BB 133818737245104 -> BB 133818737244960 (Header)
      Found back edge: BB 133818737244480 -> BB 133818737244384 (Header)
      Found back edge: BB 133818737242176 -> BB 133818737271664 (Header)
      Found back edge: BB 133818737271472 -> BB 133818737271952 (Header)
      Found back edge: BB 133818737270848 -> BB 133818737273296 (Header)
      Found back edge: BB 133818737273728 -> BB 133818737273584 (Header)
      Found back edge: BB 133818737273344 -> BB 133818737273632 (Header)
      Found back edge: BB 133818737274208 -> BB 133818737274304 (Header)
      Found back edge: BB 133818737272816 -> BB 133818737272768 (Header)
      Loop body nodes for header 133818737244288: [133818737244288, 133818737242368]
      Loop body nodes for header 133818737245728: [133818737245728, 133818737243376]
      Loop body nodes for header 133818737245632: [133818737245632, 133818737245776]
      Loop body nodes for header 133818737245200: [133818737245200, 133818737245248]
      Loop body nodes for header 133818737244960: [133818737244960, 133818737245104]
      Loop body nodes for header 133818737244384: [133818737244480, 133818737244384]
      Loop body nodes for header 133818737271664: [133818737242176, 133818737271664]
      Loop body nodes for header 133818737271952: [133818737271952, 133818737271472]
      Loop body nodes for header 133818737273296: [133818737270848, 133818737273296]
      Loop body nodes for header 133818737273584: [133818737273728, 133818737273632, 133818737273344, 133818737273584]
      Loop body nodes for header 133818737273632: [133818737273344, 133818737273632]
      Loop body nodes for header 133818737274304: [133818737274304, 133818737274208]
      Loop body nodes for header 133818737272768: [133818737272768, 133818737272816]
   Loop detection complete. Found 13 unique loop header(s).
   Detected 13 loop(s). Analyzing for unrolling...
   Analyzing loop with header BB 133818737244288...
      Checking suitability for loop with header 133818737244288 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737245728...
      Checking suitability for loop with header 133818737245728 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737245632...
      Checking suitability for loop with header 133818737245632 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737245200...
      Checking suitability for loop with header 133818737245200 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737244960...
      Checking suitability for loop with header 133818737244960 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737244384...
      Checking suitability for loop with header 133818737244384 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737271664...
      Checking suitability for loop with header 133818737271664 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737271952...
      Checking suitability for loop with header 133818737271952 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737273296...
      Checking suitability for loop with header 133818737273296 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737273584...
      Checking suitability for loop with header 133818737273584 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737273632...
      Checking suitability for loop with header 133818737273632 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737274304...
      Checking suitability for loop with header 133818737274304 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   Analyzing loop with header BB 133818737272768...
      Checking suitability for loop with header 133818737272768 (placeholder)...
      Loop not suitable for unrolling (based on current criteria).
   No suitable loops were unrolled.
--- Loop Unrolling Pass Complete ---

--- CFG After Attempting Unrolling ---
CFG graph saved to cfg_after_unrolling_attempt.dot

--- Performing Liveness Analysis (on potentially modified CFG) ---
--- Starting Liveness Analysis ---
Liveness analysis converged after 4 iterations.
--- Liveness Analysis Complete ---
CFG graph saved to cfg_final_with_liveness.dot

--- Performing Register Allocation ---
LIVENESS INTERVALS:
[]

--- Register Allocation Map ---
vartoreg = {}

--- Generating Code ---

--- Generated Assembly Code ---
	.text
	.arch armv6
	.syntax unified
@ block
	.comm _g_x, 4
	.comm _g_y, 4
	.comm _g_squ, 4
	.comm _g_arr, 5
	.comm _g_multid, 50
	.comm _g_i, 4
	.comm _g_j, 4
	.comm _g_k, 4
	.comm _g_m, 4
	.comm _g_n, 4
	.comm _g_p, 4
	.comm _g_q, 4
	.comm _g_sum, 4
	.comm _g_r, 4
	.global __pl0_start
__pl0_start:
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #0
	@ irnode 133818737647824 type <class 'ir.StatList'>
	@ node 133818737750800 did not generate any code
	@ exc: KeyError(reg int t4)
	@ node 133818737750992 did not generate any code
	@ exc: KeyError(reg int t4)
	@ node 133818737648064 did not generate any code
	@ exc: KeyError(reg int t5)
	@ node 133818737647968 did not generate any code
	@ exc: KeyError(reg int t6)
	@ node 133818737648160 did not generate any code
	@ exc: KeyError(reg int t6)
	@ node 133818737751328 did not generate any code
	@ exc: KeyError(reg int t7)
	@ node 133818737648304 did not generate any code
	@ exc: KeyError(reg int t8)
	@ node 133818737751472 did not generate any code
	@ exc: KeyError(reg int t7)
	@ node 133818737752816 did not generate any code
	@ exc: KeyError(reg int32_t t9)
	@ node 133818737751952 did not generate any code
	@ exc: KeyError(reg int t11)
	@ node 133818737752048 did not generate any code
	@ exc: KeyError(reg int t11)
	b label1
label2:
	@ emptystat
	@ node 133818737752288 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 133818737648688 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 133818737752672 did not generate any code
	@ exc: KeyError(reg int t14)
label1:
	@ emptystat
	@ node 133818737753152 did not generate any code
	@ exc: KeyError(reg int t15)
	@ node 133818737649312 did not generate any code
	@ exc: KeyError(reg int t15)
label3:
	@ emptystat
	@ node 133818737753344 did not generate any code
	@ exc: KeyError(reg int t16)
	@ node 133818737649456 did not generate any code
	@ exc: KeyError(reg int t17)
	@ node 133818737753488 did not generate any code
	@ exc: KeyError(reg int t16)
	@ node 133818737324768 did not generate any code
	@ exc: KeyError(reg int32_t t18)
	push {r0, r1, r2, r3}
	bl square
	pop {r0, r1, r2, r3}
	@ node 133818737753824 did not generate any code
	@ exc: KeyError(reg int t19)
	@ node 133818737650032 did not generate any code
	@ exc: KeyError(reg int t20)
	@ node 133818737324144 did not generate any code
	@ exc: KeyError(reg int t19)
	@ node 133818737650224 did not generate any code
	@ exc: KeyError(reg int32_t t21)
	@ node 133818737324480 did not generate any code
	@ exc: KeyError(reg int t23)
	@ node 133818737324576 did not generate any code
	@ exc: KeyError(reg int t23)
	b label3
label4:
	@ emptystat
	@ node 133818737325104 did not generate any code
	@ exc: KeyError(reg int t24)
	@ node 133818737650608 did not generate any code
	@ exc: KeyError(reg int t24)
label5:
	@ emptystat
	@ node 133818737325296 did not generate any code
	@ exc: KeyError(reg int t25)
	@ node 133818737650752 did not generate any code
	@ exc: KeyError(reg int t26)
	@ node 133818737325440 did not generate any code
	@ exc: KeyError(reg int t25)
	@ node 133818737350496 did not generate any code
	@ exc: KeyError(reg int32_t t27)
	@ node 133818737650896 did not generate any code
	@ exc: KeyError(reg int t28)
	@ node 133818737325824 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 133818737651184 did not generate any code
	@ exc: KeyError(reg int t30)
	@ node 133818737326016 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 133818737651328 did not generate any code
	@ exc: KeyError(reg int t32)
	@ node 133818737326400 did not generate any code
	@ exc: KeyError(reg int32_t t31)
	@ node 133818737651472 did not generate any code
	@ exc: KeyError(reg &char t34)
	@ node 133818737326736 did not generate any code
	@ exc: KeyError(reg &char t34)
	@ node 133818737326784 did not generate any code
	@ exc: KeyError(reg &char t35)
	@ node 133818737327024 did not generate any code
	@ exc: KeyError(reg int t36)
	@ node 133818737664112 did not generate any code
	@ exc: KeyError(reg int t37)
	@ node 133818737327360 did not generate any code
	@ exc: KeyError(reg int t36)
	@ node 133818737664256 did not generate any code
	@ exc: KeyError(reg int t39)
	@ node 133818737328032 did not generate any code
	@ exc: KeyError(reg int32_t t38)
	@ node 133818737349200 did not generate any code
	@ exc: KeyError(reg &char t46)
	@ node 133818737349440 did not generate any code
	@ exc: KeyError(reg &char t46)
	@ node 133818737349488 did not generate any code
	@ exc: KeyError(reg &char t47)
	@ node 133818737349632 did not generate any code
	@ exc: KeyError(reg char t45)
	@ node 133818737349872 did not generate any code
	@ exc: KeyError(reg int t48)
	@ node 133818737664736 did not generate any code
	@ exc: KeyError(reg int t49)
	@ node 133818737350064 did not generate any code
	@ exc: KeyError(reg int t48)
	@ node 133818737664928 did not generate any code
	@ exc: KeyError(reg int32_t t50)
	b label5
label6:
	@ emptystat
	@ node 133818737350736 did not generate any code
	@ exc: KeyError(reg int t51)
	@ node 133818737665120 did not generate any code
	@ exc: KeyError(reg int t51)
	@ node 133818737350928 did not generate any code
	@ exc: KeyError(reg int t52)
	@ node 133818737665264 did not generate any code
	@ exc: KeyError(reg int t52)
label9:
	@ emptystat
	@ node 133818737351120 did not generate any code
	@ exc: KeyError(reg int t53)
	@ node 133818737665360 did not generate any code
	@ exc: KeyError(reg int t54)
	@ node 133818737351264 did not generate any code
	@ exc: KeyError(reg int t53)
	@ node 133818737383504 did not generate any code
	@ exc: KeyError(reg int32_t t55)
label7:
	@ emptystat
	@ node 133818737665552 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 133818737665744 did not generate any code
	@ exc: KeyError(reg int t57)
	@ node 133818737351696 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 133818737383168 did not generate any code
	@ exc: KeyError(reg int32_t t58)
	@ node 133818737352032 did not generate any code
	@ exc: KeyError(reg int t59)
	@ node 133818737666848 did not generate any code
	@ exc: KeyError(reg int t60)
	@ node 133818737352560 did not generate any code
	@ exc: KeyError(reg int t59)
	@ node 133818737365200 did not generate any code
	@ exc: KeyError(reg &char t64)
	@ node 133818737365392 did not generate any code
	@ exc: KeyError(reg &char t64)
	@ node 133818737365440 did not generate any code
	@ exc: KeyError(reg &char t65)
	@ node 133818737365584 did not generate any code
	@ exc: KeyError(reg int t66)
	@ node 133818737666176 did not generate any code
	@ exc: KeyError(reg int t67)
	@ node 133818737365776 did not generate any code
	@ exc: KeyError(reg int t66)
	@ node 133818737666416 did not generate any code
	@ exc: KeyError(reg int t69)
	@ node 133818737666272 did not generate any code
	@ exc: KeyError(reg int t70)
	@ node 133818737366208 did not generate any code
	@ exc: KeyError(reg int t69)
	@ node 133818737366544 did not generate any code
	@ exc: KeyError(reg int32_t t68)
	@ node 133818737666656 did not generate any code
	@ exc: KeyError(reg &short t73)
	@ node 133818737366784 did not generate any code
	@ exc: KeyError(reg &short t73)
	@ node 133818737366832 did not generate any code
	@ exc: KeyError(reg &short t74)
	@ node 133818737367072 did not generate any code
	@ exc: KeyError(reg int t75)
	@ node 133818737667232 did not generate any code
	@ exc: KeyError(reg int t76)
	@ node 133818737367408 did not generate any code
	@ exc: KeyError(reg int t75)
	@ node 133818737667472 did not generate any code
	@ exc: KeyError(reg int t78)
	@ node 133818737667328 did not generate any code
	@ exc: KeyError(reg int t79)
	@ node 133818737367840 did not generate any code
	@ exc: KeyError(reg int t78)
	@ node 133818737367168 did not generate any code
	@ exc: KeyError(reg int32_t t77)
	@ node 133818737368992 did not generate any code
	@ exc: KeyError(reg &short t87)
	@ node 133818737381584 did not generate any code
	@ exc: KeyError(reg &short t87)
	@ node 133818737381632 did not generate any code
	@ exc: KeyError(reg &short t88)
	@ node 133818737381776 did not generate any code
	@ exc: KeyError(reg short t86)
	@ node 133818737382016 did not generate any code
	@ exc: KeyError(reg int t89)
	@ node 133818737668048 did not generate any code
	@ exc: KeyError(reg int t90)
	@ node 133818737382208 did not generate any code
	@ exc: KeyError(reg int t89)
	@ node 133818737639632 did not generate any code
	@ exc: KeyError(reg int32_t t91)
	@ node 133818737382544 did not generate any code
	@ exc: KeyError(reg int t92)
	@ node 133818737639776 did not generate any code
	@ exc: KeyError(reg int t93)
	@ node 133818737382688 did not generate any code
	@ exc: KeyError(reg int t92)
	@ node 133818737639968 did not generate any code
	@ exc: KeyError(reg int32_t t94)
	b label7
label8:
	@ emptystat
	b label9
label10:
	@ emptystat
	@ irnode 133818737640688 type <class 'ir.AssignStat'>
label11:
	@ emptystat
	@ node 133818737384224 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737640784 did not generate any code
	@ exc: KeyError(reg int t99)
	@ node 133818737384416 did not generate any code
	@ exc: KeyError(reg int t98)
	@ node 133818737385328 did not generate any code
	@ exc: KeyError(reg int32_t t100)
	@ node 133818737384896 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737384992 did not generate any code
	@ exc: KeyError(reg int t102)
	@ node 133818737383744 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737640976 did not generate any code
	@ exc: KeyError(reg int t96)
	@ node 133818737383888 did not generate any code
	@ exc: KeyError(reg int t95)
	@ node 133818737641168 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label11
label13:
	@ emptystat
	@ node 133818737385184 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 133818737641360 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 133818737402016 did not generate any code
	@ exc: KeyError(reg int t105)
	@ node 133818737402496 did not generate any code
	@ exc: KeyError(reg int t105)
	@ irnode 133818737642128 type <class 'ir.AssignStat'>
label14:
	@ emptystat
	@ node 133818737403168 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737642224 did not generate any code
	@ exc: KeyError(reg int t110)
	@ node 133818737403360 did not generate any code
	@ exc: KeyError(reg int t109)
	@ node 133818737404272 did not generate any code
	@ exc: KeyError(reg int32_t t111)
	@ node 133818737403840 did not generate any code
	@ exc: KeyError(reg int t113)
	@ node 133818737403936 did not generate any code
	@ exc: KeyError(reg int t113)
	@ node 133818737402736 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737642416 did not generate any code
	@ exc: KeyError(reg int t107)
	@ node 133818737402832 did not generate any code
	@ exc: KeyError(reg int t106)
	@ node 133818737642608 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label14
label16:
	@ emptystat
	@ node 133818737404656 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 133818737404752 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 133818737405136 did not generate any code
	@ exc: KeyError(reg int t117)
	@ node 133818737405232 did not generate any code
	@ exc: KeyError(reg int t117)
	@ irnode 133818737696976 type <class 'ir.AssignStat'>
label17:
	@ emptystat
	@ node 133818737414208 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737697072 did not generate any code
	@ exc: KeyError(reg int t122)
	@ node 133818737414352 did not generate any code
	@ exc: KeyError(reg int t121)
	@ node 133818737415264 did not generate any code
	@ exc: KeyError(reg int32_t t123)
	@ node 133818737414832 did not generate any code
	@ exc: KeyError(reg int t125)
	@ node 133818737414928 did not generate any code
	@ exc: KeyError(reg int t125)
	@ node 133818737405472 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737697264 did not generate any code
	@ exc: KeyError(reg int t119)
	@ node 133818737405568 did not generate any code
	@ exc: KeyError(reg int t118)
	@ node 133818737697456 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label17
label19:
	@ emptystat
	@ node 133818737415648 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 133818737415744 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 133818737416128 did not generate any code
	@ exc: KeyError(reg int t129)
	@ node 133818737416224 did not generate any code
	@ exc: KeyError(reg int t129)
	@ irnode 133818737698704 type <class 'ir.AssignStat'>
label20:
	@ emptystat
	@ node 133818737416896 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737698800 did not generate any code
	@ exc: KeyError(reg int t134)
	@ node 133818737417088 did not generate any code
	@ exc: KeyError(reg int t133)
	@ node 133818737230128 did not generate any code
	@ exc: KeyError(reg int32_t t135)
	@ node 133818737417568 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 133818737417664 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 133818737418048 did not generate any code
	@ exc: KeyError(reg int t139)
	@ node 133818737418192 did not generate any code
	@ exc: KeyError(reg int t139)
	@ node 133818737416464 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737698992 did not generate any code
	@ exc: KeyError(reg int t131)
	@ node 133818737416560 did not generate any code
	@ exc: KeyError(reg int t130)
	@ node 133818737699184 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label20
label22:
	@ emptystat
	@ node 133818737230512 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 133818737230608 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 133818737230992 did not generate any code
	@ exc: KeyError(reg int t143)
	@ node 133818737231088 did not generate any code
	@ exc: KeyError(reg int t143)
	@ irnode 133818737700240 type <class 'ir.AssignStat'>
label23:
	@ emptystat
	@ node 133818737231760 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737700336 did not generate any code
	@ exc: KeyError(reg int t148)
	@ node 133818737231952 did not generate any code
	@ exc: KeyError(reg int t147)
	@ node 133818737232864 did not generate any code
	@ exc: KeyError(reg int32_t t149)
	@ node 133818737232432 did not generate any code
	@ exc: KeyError(reg int t151)
	@ node 133818737232528 did not generate any code
	@ exc: KeyError(reg int t151)
	@ node 133818737231328 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737700528 did not generate any code
	@ exc: KeyError(reg int t145)
	@ node 133818737231424 did not generate any code
	@ exc: KeyError(reg int t144)
	@ node 133818737700720 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label23
label25:
	@ emptystat
	@ node 133818737233248 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 133818737233344 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 133818737233728 did not generate any code
	@ exc: KeyError(reg int t155)
	@ node 133818737233872 did not generate any code
	@ exc: KeyError(reg int t155)
	@ irnode 133818737705936 type <class 'ir.AssignStat'>
label26:
	@ emptystat
	@ node 133818737242752 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737706032 did not generate any code
	@ exc: KeyError(reg int t160)
	@ node 133818737242944 did not generate any code
	@ exc: KeyError(reg int t159)
	@ node 133818737243856 did not generate any code
	@ exc: KeyError(reg int32_t t161)
	@ node 133818737243424 did not generate any code
	@ exc: KeyError(reg int t163)
	@ node 133818737243520 did not generate any code
	@ exc: KeyError(reg int t163)
	@ node 133818737242320 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737706224 did not generate any code
	@ exc: KeyError(reg int t157)
	@ node 133818737242416 did not generate any code
	@ exc: KeyError(reg int t156)
	@ node 133818737706416 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label26
label28:
	@ emptystat
	@ node 133818737244240 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 133818737244336 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 133818737244720 did not generate any code
	@ exc: KeyError(reg int t167)
	@ node 133818737244816 did not generate any code
	@ exc: KeyError(reg int t167)
	@ irnode 133818737707472 type <class 'ir.AssignStat'>
label29:
	@ emptystat
	@ node 133818737245488 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737707568 did not generate any code
	@ exc: KeyError(reg int t172)
	@ node 133818737245680 did not generate any code
	@ exc: KeyError(reg int t171)
	@ node 133818737271232 did not generate any code
	@ exc: KeyError(reg int32_t t173)
	@ node 133818737246112 did not generate any code
	@ exc: KeyError(reg int t175)
	@ node 133818737270896 did not generate any code
	@ exc: KeyError(reg int t175)
	@ node 133818737245056 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737707760 did not generate any code
	@ exc: KeyError(reg int t169)
	@ node 133818737245152 did not generate any code
	@ exc: KeyError(reg int t168)
	@ node 133818737707952 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label29
label31:
	@ emptystat
	@ node 133818737271616 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 133818737271712 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 133818737708144 did not generate any code
	@ exc: KeyError(reg int t178)
	@ node 133818737708336 did not generate any code
	@ exc: KeyError(reg int t178)
	@ node 133818737272288 did not generate any code
	@ exc: KeyError(reg int t180)
	@ node 133818737272384 did not generate any code
	@ exc: KeyError(reg int t180)
	@ irnode 133818737717888 type <class 'ir.AssignStat'>
label32:
	@ emptystat
	@ node 133818737273056 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737717984 did not generate any code
	@ exc: KeyError(reg int t185)
	@ node 133818737273248 did not generate any code
	@ exc: KeyError(reg int t184)
	@ node 133818737283424 did not generate any code
	@ exc: KeyError(reg int32_t t186)
	@ node 133818737708720 did not generate any code
	@ exc: KeyError(reg int t187)
	@ node 133818737708960 did not generate any code
	@ exc: KeyError(reg int t188)
	@ node 133818737273680 did not generate any code
	@ exc: KeyError(reg int t187)
	@ node 133818737709008 did not generate any code
	@ exc: KeyError(reg int32_t t189)
	@ node 133818737274256 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 133818737274352 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 133818737274736 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 133818737274832 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 133818737272624 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737718176 did not generate any code
	@ exc: KeyError(reg int t182)
	@ node 133818737272720 did not generate any code
	@ exc: KeyError(reg int t181)
	@ node 133818737718368 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label32
label34:
	@ emptystat
	@ node 133818737283808 did not generate any code
	@ exc: KeyError(reg int t195)
	@ node 133818737283904 did not generate any code
	@ exc: KeyError(reg int t195)
	@ node 133818737284288 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 133818737284384 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 133818737718752 did not generate any code
	@ exc: KeyError(reg int t198)
	@ node 133818737718944 did not generate any code
	@ exc: KeyError(reg int t198)
	@ node 133818737284960 did not generate any code
	@ exc: KeyError(reg int t200)
	@ node 133818737285056 did not generate any code
	@ exc: KeyError(reg int t200)
	@ irnode 133818737720096 type <class 'ir.AssignStat'>
label35:
	@ emptystat
	@ node 133818737285728 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737720192 did not generate any code
	@ exc: KeyError(reg int t205)
	@ node 133818737285920 did not generate any code
	@ exc: KeyError(reg int t204)
	@ node 133818737303808 did not generate any code
	@ exc: KeyError(reg int32_t t206)
	@ node 133818737720288 did not generate any code
	@ exc: KeyError(reg int t207)
	@ node 133818737719616 did not generate any code
	@ exc: KeyError(reg int t208)
	@ node 133818737286352 did not generate any code
	@ exc: KeyError(reg int t207)
	@ node 133818737719808 did not generate any code
	@ exc: KeyError(reg int32_t t209)
	@ node 133818737286928 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 133818737287024 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 133818737285296 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 133818737720384 did not generate any code
	@ exc: KeyError(reg int t202)
	@ node 133818737285392 did not generate any code
	@ exc: KeyError(reg int t201)
	@ node 133818737720576 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label35
label37:
	@ emptystat
	@ node 133818737286736 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 133818737284720 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 133818737283760 did not generate any code
	@ exc: KeyError(reg int t215)
	@ node 133818737274544 did not generate any code
	@ exc: KeyError(reg int t215)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

square:
@ block
	.equ _l_square_test, -4
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #4
	@ irnode 133818737585648 type <class 'ir.StatList'>
	@ node 133818737721296 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 133818737585840 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 133818737750272 did not generate any code
	@ exc: KeyError(reg int t1)
	@ node 133818737585984 did not generate any code
	@ exc: KeyError(reg int t2)
	@ node 133818737750464 did not generate any code
	@ exc: KeyError(reg int t1)
	@ node 133818737586128 did not generate any code
	@ exc: KeyError(reg int32_t t3)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

--- Compilation Complete ---
