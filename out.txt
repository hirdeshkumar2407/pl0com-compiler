Compiler arguments: ['main.py']

--- Compiling Program ---
Input Program Snippet:
--------------------
VAR x, y, squ;
VAR arr[5]: char;
var multid[5][5]: short;
{ New variables for loop tests }
VAR i, j, k, m, n, p, q, sum, r;
VAR sm_idx;                 { Loop counter for strip mining test (sm = strip...
--------------------
--- Starting Compilation ---

--- Parsing Program ---
start <function Parser.program at 0x7e8b8452c700>
getsym: varsym var
start <function Parser.block at 0x7e8b8452c3a0>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident x
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident y
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident squ
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident arr
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident char
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident multid
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: lspar [
accepting lspar == lspar
getsym: number 5
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident short
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident i
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident j
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident k
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident m
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident n
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident p
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident q
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident sum
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: comma ,
accepting lspar == comma
accepting colon == comma
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == comma
getsym: ident r
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_idx
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_source_arr
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 128
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident int
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
accepting constsym == varsym
accepting varsym == varsym
getsym: ident sm_dest_arr
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: lspar [
accepting lspar == lspar
getsym: number 128
expecting number
accepting number == number
getsym: rspar ]
expecting rspar
accepting rspar == rspar
getsym: colon :
accepting lspar == colon
accepting colon == colon
getsym: ident int
accepting ident == ident
getsym: semicolon ;
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: procsym procedure
accepting constsym == procsym
accepting varsym == procsym
accepting procsym == procsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
expecting semicolon
accepting semicolon == semicolon
getsym: varsym var
start <function Parser.block at 0x7e8b8452c3a0>
accepting constsym == varsym
accepting varsym == varsym
getsym: ident test
start <function Parser.vardef at 0x7e8b8452c5e0>
expecting ident
accepting ident == ident
getsym: semicolon ;
accepting lspar == semicolon
accepting colon == semicolon
end <function Parser.vardef at 0x7e8b8452c5e0>
accepting comma == semicolon
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
accepting constsym == beginsym
accepting varsym == beginsym
accepting procsym == beginsym
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident test
StatList : new 139137684885760
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up test
Looking up test
expecting becomes
accepting becomes == becomes
getsym: number 1234
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684886048 of type <class 'ir.AssignStat'> to 139137684885760
accepting semicolon == semicolon
getsym: ident squ
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up squ
Looking up squ
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: times *
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
getsym: ident x
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684886336 of type <class 'ir.AssignStat'> to 139137684885760
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137684885760 : [ 139137684886048 139137684886336 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.block at 0x7e8b8452c3a0>
expecting semicolon
accepting semicolon == semicolon
getsym: beginsym begin
Looking up square
accepting procsym == beginsym
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 139137684886480
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: minus -
start <function Parser.expression at 0x7e8b8452c040>
getsym: number 1
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684886768 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: read read
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == read
accepting callsym == read
accepting beginsym == read
accepting ifsym == read
accepting whilesym == read
accepting forsym == read
accepting print == read
accepting read == read
getsym: ident x
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684886864 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ifsym if
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ifsym
accepting callsym == ifsym
accepting beginsym == ifsym
accepting ifsym == ifsym
getsym: ident x
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == ident
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: gtr >
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 100
condition operator gtr number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: thensym then
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting thensym
accepting thensym == thensym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137684887392
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: minus -
start <function Parser.expression at 0x7e8b8452c040>
getsym: ident x
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684887536 of type <class 'ir.PrintStat'> to 139137684887392
expecting endsym
accepting endsym == endsym
getsym: elsesym else
StatList 139137684887392 : [ 139137684887536 ]
end <function Parser.statement at 0x7e8b8452c280>
accepting elsesym == elsesym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137684886960
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: endsym end
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684887776 of type <class 'ir.PrintStat'> to 139137684886960
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137684886960 : [ 139137684887776 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684887872 of type <class 'ir.IfStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684888016 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == ident
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 10
condition operator leq number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: callsym call
StatList : new 139137684888352
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == callsym
accepting callsym == callsym
getsym: ident square
expecting ident
accepting ident == ident
getsym: semicolon ;
Looking up square
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684888544 of type <class 'ir.CallStat'> to 139137684888352
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 1
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684888928 of type <class 'ir.AssignStat'> to 139137684888352
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident squ
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: endsym end
Looking up squ
Looking up squ
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684889072 of type <class 'ir.PrintStat'> to 139137684888352
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137684888352 : [ 139137684888544 139137684888928 139137684889072 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684889168 of type <class 'ir.WhileStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 101
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137684889312 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == ident
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 105
condition operator leq number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident arr
StatList : new 139137685351152
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 100
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685351680 of type <class 'ir.AssignStat'> to 139137685351152
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: minus -
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 100
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685352208 of type <class 'ir.PrintStat'> to 139137685351152
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 1
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685349904 of type <class 'ir.AssignStat'> to 139137685351152
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685351152 : [ 139137685351680 139137685352208 139137685349904 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685349808 of type <class 'ir.WhileStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685349664 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: number 1
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685349136 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: whilesym while
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident x
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == ident
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: leq <=
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: whilesym while
StatList : new 139137685348656
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == whilesym
accepting callsym == whilesym
accepting beginsym == whilesym
accepting ifsym == whilesym
accepting whilesym == whilesym
getsym: ident y
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == ident
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: leq <=
Looking up y
Looking up y
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 5
condition operator leq number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident multid
StatList : new 139137685148144
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up arr
Looking up arr
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685149392 of type <class 'ir.AssignStat'> to 139137685148144
accepting semicolon == semicolon
getsym: print !
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident multid
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up multid
Looking up multid
expecting lspar
accepting lspar == lspar
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: lspar [
expecting lspar
accepting lspar == lspar
getsym: ident y
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up y
Looking up y
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685148000 of type <class 'ir.PrintStat'> to 139137685148144
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 1
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685150304 of type <class 'ir.AssignStat'> to 139137685148144
accepting semicolon == semicolon
getsym: ident y
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up y
Looking up y
expecting becomes
accepting becomes == becomes
getsym: ident y
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up y
Looking up y
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: number 1
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: endsym end
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685150640 of type <class 'ir.AssignStat'> to 139137685148144
expecting endsym
accepting endsym == endsym
getsym: endsym end
StatList 139137685148144 : [ 139137685149392 139137685148000 139137685150304 139137685150640 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685150688 of type <class 'ir.WhileStat'> to 139137685348656
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685348656 : [ 139137685150688 ]
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685150736 of type <class 'ir.WhileStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident a
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int a' and body_symtab for 'a'
FOR LOOP - Variable symbol: auto int a
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 20
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685151216
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident a
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up a
Looking up a
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685151696 of type <class 'ir.PrintStat'> to 139137685151216
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685151216 : [ 139137685151696 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685610256 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident i
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up i
Looking up i
expecting becomes
accepting becomes == becomes
getsym: number 10
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685610400 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99991
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685609872 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident i
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int i' and body_symtab for 'i'
FOR LOOP - Variable symbol: auto int i
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 15
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685609440
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident i
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up i
Looking up i
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685609248 of type <class 'ir.PrintStat'> to 139137685609440
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685609440 : [ 139137685609248 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685608576 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88881
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685608432 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99992
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685608240 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident j
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int j' and body_symtab for 'j'
FOR LOOP - Variable symbol: auto int j
expecting becomes
accepting becomes == becomes
getsym: number 5
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685607904
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident j
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up j
Looking up j
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685607712 of type <class 'ir.PrintStat'> to 139137685607904
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685607904 : [ 139137685607712 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685607040 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88882
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685606896 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99993
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685606704 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident k
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int k' and body_symtab for 'k'
FOR LOOP - Variable symbol: auto int k
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685508256
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 77777
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685508400 of type <class 'ir.PrintStat'> to 139137685508256
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident k
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up k
Looking up k
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685508592 of type <class 'ir.PrintStat'> to 139137685508256
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685508256 : [ 139137685508400 139137685508592 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685509312 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88883
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685509456 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99994
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685509648 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident m
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int m' and body_symtab for 'm'
FOR LOOP - Variable symbol: auto int m
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 6
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685510032
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident m
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up m
Looking up m
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685512096 of type <class 'ir.PrintStat'> to 139137685510032
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685510032 : [ 139137685512096 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685511424 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88884
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685511280 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99995
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685511088 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident n
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int n' and body_symtab for 'n'
FOR LOOP - Variable symbol: auto int n
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 7
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685510752
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident n
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up n
Looking up n
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685510560 of type <class 'ir.PrintStat'> to 139137685510752
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685510752 : [ 139137685510560 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685418192 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88885
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685418432 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99996
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685418624 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident p
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int p' and body_symtab for 'p'
FOR LOOP - Variable symbol: auto int p
expecting becomes
accepting becomes == becomes
getsym: number 10
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 12
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685419008
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident p
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up p
Looking up p
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685419152 of type <class 'ir.PrintStat'> to 139137685419008
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685419008 : [ 139137685419152 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685420016 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88886
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685419632 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident sum
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: number 0
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685420160 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99997
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685420256 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident q
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int q' and body_symtab for 'q'
FOR LOOP - Variable symbol: auto int q
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 5
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident sum
StatList : new 139137685420592
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up sum
Looking up sum
expecting becomes
accepting becomes == becomes
getsym: ident sum
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up sum
Looking up sum
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: ident q
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685421168 of type <class 'ir.AssignStat'> to 139137685420592
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident q
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up q
Looking up q
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685421312 of type <class 'ir.PrintStat'> to 139137685420592
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685420880 of type <class 'ir.PrintStat'> to 139137685420592
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685420592 : [ 139137685421168 139137685421312 139137685420880 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685421504 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sum
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up sum
Looking up sum
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685846768 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88887
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685847344 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident x
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: number 100
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685848016 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 99998
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685847872 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident r
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int r' and body_symtab for 'r'
FOR LOOP - Variable symbol: auto int r
expecting becomes
accepting becomes == becomes
getsym: number 1
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 3
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident x
StatList : new 139137685847536
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up x
Looking up x
expecting becomes
accepting becomes == becomes
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: plus +
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: ident r
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up r
Looking up r
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685846864 of type <class 'ir.AssignStat'> to 139137685847536
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685846576 of type <class 'ir.PrintStat'> to 139137685847536
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685847536 : [ 139137685846864 139137685846576 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685336512 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident x
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up x
Looking up x
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685336656 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 88888
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685336848 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 999990
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685337040 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ident sm_idx
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: becomes :=
Looking up sm_idx
Looking up sm_idx
expecting becomes
accepting becomes == becomes
getsym: number 0
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685337232 of type <class 'ir.AssignStat'> to 139137684886480
accepting semicolon == semicolon
getsym: forsym for
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == forsym
accepting callsym == forsym
accepting beginsym == forsym
accepting ifsym == forsym
accepting whilesym == forsym
accepting forsym == forsym
getsym: ident sm_idx
FOR LOOP - Start parsing
expecting ident
accepting ident == ident
getsym: becomes :=
FOR LOOP - Created symbol 'auto int sm_idx' and body_symtab for 'sm_idx'
FOR LOOP - Variable symbol: auto int sm_idx
expecting becomes
accepting becomes == becomes
getsym: number 0
FOR LOOP - Assignment operator found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: tosym to
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - Start expression parsed
expecting tosym
accepting tosym == tosym
getsym: number 127
FOR LOOP - 'to' keyword found
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: dosym do
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
FOR LOOP - End expression parsed
expecting dosym
accepting dosym == dosym
getsym: beginsym begin
FOR LOOP - 'do' keyword found
FOR LOOP - Parsing body, next token: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: ident sm_dest_arr
StatList : new 139137685337472
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: ident sm_idx
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: becomes :=
expecting becomes
accepting becomes == becomes
getsym: ident sm_source_arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up sm_source_arr
Looking up sm_source_arr
expecting lspar
accepting lspar == lspar
getsym: ident sm_idx
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: rspar ]
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: plus +
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
getsym: ident sm_idx
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: semicolon ;
Looking up sm_idx
Looking up sm_idx
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685338432 of type <class 'ir.AssignStat'> to 139137685337472
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685337472 : [ 139137685338432 ]
end <function Parser.statement at 0x7e8b8452c280>
FOR LOOP - Body parsed, next token: semicolon ;
FOR LOOP - Complete, returning ForStat
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685339008 of type <class 'ir.ForStat'> to 139137684886480
accepting semicolon == semicolon
getsym: ifsym if
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == ifsym
accepting callsym == ifsym
accepting beginsym == ifsym
accepting ifsym == ifsym
getsym: number 127
start <function Parser.condition at 0x7e8b8452c160>
accepting oddsym == number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: geq >=
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
getsym: number 0
condition operator geq number
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: thensym then
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.condition at 0x7e8b8452c160>
expecting thensym
accepting thensym == thensym
getsym: beginsym begin
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == beginsym
accepting callsym == beginsym
accepting beginsym == beginsym
getsym: print print
StatList : new 139137685339344
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 76543
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685339536 of type <class 'ir.PrintStat'> to 139137685339344
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 0
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685339968 of type <class 'ir.PrintStat'> to 139137685339344
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 64
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685320032 of type <class 'ir.PrintStat'> to 139137685339344
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: ident sm_dest_arr
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == ident
getsym: lspar [
Looking up sm_dest_arr
Looking up sm_dest_arr
expecting lspar
accepting lspar == lspar
getsym: number 127
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: rspar ]
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
expecting rspar
accepting rspar == rspar
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685320512 of type <class 'ir.PrintStat'> to 139137685339344
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: semicolon ;
StatList 139137685339344 : [ 139137685339536 139137685339968 139137685320032 139137685320512 ]
end <function Parser.statement at 0x7e8b8452c280>
accepting elsesym == semicolon
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685320656 of type <class 'ir.IfStat'> to 139137684886480
accepting semicolon == semicolon
getsym: print print
start <function Parser.statement at 0x7e8b8452c280>
accepting ident == print
accepting callsym == print
accepting beginsym == print
accepting ifsym == print
accepting whilesym == print
accepting forsym == print
accepting print == print
getsym: number 888880
start <function Parser.expression at 0x7e8b8452c040>
start <function Parser.term at 0x7e8b8450fee0>
start <function Parser.factor at 0x7e8b8450fdc0>
accepting ident == number
accepting number == number
getsym: semicolon ;
end <function Parser.factor at 0x7e8b8450fdc0>
end <function Parser.term at 0x7e8b8450fee0>
end <function Parser.expression at 0x7e8b8452c040>
end <function Parser.statement at 0x7e8b8452c280>
StatList: appending 139137685320800 of type <class 'ir.PrintStat'> to 139137684886480
accepting semicolon == semicolon
getsym: endsym end
Found END immediately after semicolon, ending statement list.
expecting endsym
accepting endsym == endsym
getsym: period .
StatList
end <function Parser.statement at 0x7e8b8452c280>
end <function Parser.block at 0x7e8b8452c3a0>
expecting period
accepting period == period
end <function Parser.program at 0x7e8b8452c700>

--- Initial IR Tree (from Parser) ---
<class 'ir.Block'> 139137685320896 {
                                                                      <<<<<----- BUG? MISSING PARENT
	body: 	<class 'ir.StatList'> 139137684886480 {
	parent = 139137685320896
		children:
		<class 'ir.AssignStat'> 139137684886768 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.UnExpr'> 139137684886672 {
			parent = 139137684886768
				children:
				'minus'
				<class 'ir.Const'> 139137684886576 {
				parent = 139137684886672
					symbol: 	None
					value: 	1
				}
			}
		}
		<class 'ir.AssignStat'> 139137684886864 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.ReadStat'> 139137685357520 {
			parent = 139137684886864
			}
		}
		<class 'ir.IfStat'> 139137684887872 {
		parent = 139137684886480
			thenpart: 	<class 'ir.StatList'> 139137684887392 {
			parent = 139137684887872
				children:
				<class 'ir.PrintStat'> 139137684887536 {
				parent = 139137684887392
					children:
					<class 'ir.UnExpr'> 139137684887632 {
					parent = 139137684887536
						children:
						'minus'
						<class 'ir.Var'> 139137684887488 {
						parent = 139137684887632
							symbol: 	global int x
						}
					}
					expr: 	<class 'ir.UnExpr'> 139137684887632 {
					parent = 139137684887536
						children:
						'minus'
						<class 'ir.Var'> 139137684887488 {
						parent = 139137684887632
							symbol: 	global int x
						}
					}
				}
			}
			elsepart: 	<class 'ir.StatList'> 139137684886960 {
			parent = 139137684887872
				children:
				<class 'ir.PrintStat'> 139137684887776 {
				parent = 139137684886960
					children:
					<class 'ir.Var'> 139137684887248 {
					parent = 139137684887776
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 139137684887248 {
					parent = 139137684887776
						symbol: 	global int x
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137684887344 {
			parent = 139137684887872
				children:
				'gtr'
				<class 'ir.Var'> 139137684886912 {
				parent = 139137684887344
					symbol: 	global int x
				}
				<class 'ir.Const'> 139137684887200 {
				parent = 139137684887344
					symbol: 	None
					value: 	100
				}
			}
		}
		<class 'ir.AssignStat'> 139137684888016 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.Const'> 139137684887920 {
			parent = 139137684888016
				symbol: 	None
				value: 	1
			}
		}
		<class 'ir.WhileStat'> 139137684889168 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137684888352 {
			parent = 139137684889168
				children:
				<class 'ir.CallStat'> 139137684888544 {
				parent = 139137684888352
					call: 	<class 'ir.CallExpr'> 139137684888448 {
					parent = 139137684888544
						symbol: 	auto function square
					}
				}
				<class 'ir.AssignStat'> 139137684888928 {
				parent = 139137684888352
					symbol: 	global int x
					offset: 	None
					expr: 	<class 'ir.BinExpr'> 139137684888832 {
					parent = 139137684888928
						children:
						'plus'
						<class 'ir.Var'> 139137684888640 {
						parent = 139137684888832
							symbol: 	global int x
						}
						<class 'ir.Const'> 139137684888736 {
						parent = 139137684888832
							symbol: 	None
							value: 	1
						}
					}
				}
				<class 'ir.PrintStat'> 139137684889072 {
				parent = 139137684888352
					children:
					<class 'ir.Var'> 139137684888976 {
					parent = 139137684889072
						symbol: 	global int squ
					}
					expr: 	<class 'ir.Var'> 139137684888976 {
					parent = 139137684889072
						symbol: 	global int squ
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137684888208 {
			parent = 139137684889168
				children:
				'leq'
				<class 'ir.Var'> 139137684888160 {
				parent = 139137684888208
					symbol: 	global int x
				}
				<class 'ir.Const'> 139137684888304 {
				parent = 139137684888208
					symbol: 	None
					value: 	10
				}
			}
		}
		<class 'ir.AssignStat'> 139137684889312 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.Const'> 139137684889216 {
			parent = 139137684889312
				symbol: 	None
				value: 	101
			}
		}
		<class 'ir.WhileStat'> 139137685349808 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685351152 {
			parent = 139137685349808
				children:
				<class 'ir.AssignStat'> 139137685351680 {
				parent = 139137685351152
					symbol: 	global char[5] arr
					offset: 	<class 'ir.BinExpr'> 139137685351104 {
					parent = 139137685351680
						children:
						'times'
						<class 'ir.BinExpr'> 139137685351248 {
						parent = 139137685351104
							children:
							'minus'
							<class 'ir.Var'> 139137685351296 {
							parent = 139137685351248
								symbol: 	global int x
							}
							<class 'ir.Const'> 139137685351392 {
							parent = 139137685351248
								symbol: 	None
								value: 	100
							}
						}
						<class 'ir.Const'> 139137685351488 {
						parent = 139137685351104
							symbol: 	None
							value: 	1
						}
					}
					expr: 	<class 'ir.Var'> 139137685351584 {
					parent = 139137685351680
						symbol: 	global int x
					}
				}
				<class 'ir.PrintStat'> 139137685352208 {
				parent = 139137685351152
					children:
					<class 'ir.ArrayElement'> 139137685352016 {
					parent = 139137685352208
						children:
						<class 'ir.BinExpr'> 139137685352112 {
						parent = 139137685352016
							children:
							'times'
							<class 'ir.BinExpr'> 139137685351920 {
							parent = 139137685352112
								children:
								'minus'
								<class 'ir.Var'> 139137685358960 {
								parent = 139137685351920
									symbol: 	global int x
								}
								<class 'ir.Const'> 139137685351824 {
								parent = 139137685351920
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 139137685351728 {
							parent = 139137685352112
								symbol: 	None
								value: 	1
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 139137685352112 {
						parent = 139137685352016
							children:
							'times'
							<class 'ir.BinExpr'> 139137685351920 {
							parent = 139137685352112
								children:
								'minus'
								<class 'ir.Var'> 139137685358960 {
								parent = 139137685351920
									symbol: 	global int x
								}
								<class 'ir.Const'> 139137685351824 {
								parent = 139137685351920
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 139137685351728 {
							parent = 139137685352112
								symbol: 	None
								value: 	1
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 139137685352016 {
					parent = 139137685352208
						children:
						<class 'ir.BinExpr'> 139137685352112 {
						parent = 139137685352016
							children:
							'times'
							<class 'ir.BinExpr'> 139137685351920 {
							parent = 139137685352112
								children:
								'minus'
								<class 'ir.Var'> 139137685358960 {
								parent = 139137685351920
									symbol: 	global int x
								}
								<class 'ir.Const'> 139137685351824 {
								parent = 139137685351920
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 139137685351728 {
							parent = 139137685352112
								symbol: 	None
								value: 	1
							}
						}
						symbol: 	global char[5] arr
						offset: 	<class 'ir.BinExpr'> 139137685352112 {
						parent = 139137685352016
							children:
							'times'
							<class 'ir.BinExpr'> 139137685351920 {
							parent = 139137685352112
								children:
								'minus'
								<class 'ir.Var'> 139137685358960 {
								parent = 139137685351920
									symbol: 	global int x
								}
								<class 'ir.Const'> 139137685351824 {
								parent = 139137685351920
									symbol: 	None
									value: 	100
								}
							}
							<class 'ir.Const'> 139137685351728 {
							parent = 139137685352112
								symbol: 	None
								value: 	1
							}
						}
					}
				}
				<class 'ir.AssignStat'> 139137685349904 {
				parent = 139137685351152
					symbol: 	global int x
					offset: 	None
					expr: 	<class 'ir.BinExpr'> 139137685350048 {
					parent = 139137685349904
						children:
						'plus'
						<class 'ir.Var'> 139137685352352 {
						parent = 139137685350048
							symbol: 	global int x
						}
						<class 'ir.Const'> 139137685350912 {
						parent = 139137685350048
							symbol: 	None
							value: 	1
						}
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137684889552 {
			parent = 139137685349808
				children:
				'leq'
				<class 'ir.Var'> 139137684889360 {
				parent = 139137684889552
					symbol: 	global int x
				}
				<class 'ir.Const'> 139137684889456 {
				parent = 139137684889552
					symbol: 	None
					value: 	105
				}
			}
		}
		<class 'ir.AssignStat'> 139137685349664 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685349760 {
			parent = 139137685349664
				symbol: 	None
				value: 	1
			}
		}
		<class 'ir.AssignStat'> 139137685349136 {
		parent = 139137684886480
			symbol: 	global int y
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685349616 {
			parent = 139137685349136
				symbol: 	None
				value: 	1
			}
		}
		<class 'ir.WhileStat'> 139137685150736 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685348656 {
			parent = 139137685150736
				children:
				<class 'ir.WhileStat'> 139137685150688 {
				parent = 139137685348656
					body: 	<class 'ir.StatList'> 139137685148144 {
					parent = 139137685150688
						children:
						<class 'ir.AssignStat'> 139137685149392 {
						parent = 139137685148144
							symbol: 	global short[5, 5] multid
							offset: 	<class 'ir.BinExpr'> 139137685149776 {
							parent = 139137685149392
								children:
								'plus'
								<class 'ir.BinExpr'> 139137685150064 {
								parent = 139137685149776
									children:
									'times'
									<class 'ir.Var'> 139137685148336 {
									parent = 139137685150064
										symbol: 	global int x
									}
									<class 'ir.Const'> 139137685147856 {
									parent = 139137685150064
										symbol: 	None
										value: 	10
									}
								}
								<class 'ir.BinExpr'> 139137685149872 {
								parent = 139137685149776
									children:
									'times'
									<class 'ir.Var'> 139137685147808 {
									parent = 139137685149872
										symbol: 	global int y
									}
									<class 'ir.Const'> 139137685149968 {
									parent = 139137685149872
										symbol: 	None
										value: 	2
									}
								}
							}
							expr: 	<class 'ir.ArrayElement'> 139137685149584 {
							parent = 139137685149392
								children:
								<class 'ir.BinExpr'> 139137685149488 {
								parent = 139137685149584
									children:
									'times'
									<class 'ir.Var'> 139137685149200 {
									parent = 139137685149488
										symbol: 	global int x
									}
									<class 'ir.Const'> 139137685149680 {
									parent = 139137685149488
										symbol: 	None
										value: 	1
									}
								}
								symbol: 	global char[5] arr
								offset: 	<class 'ir.BinExpr'> 139137685149488 {
								parent = 139137685149584
									children:
									'times'
									<class 'ir.Var'> 139137685149200 {
									parent = 139137685149488
										symbol: 	global int x
									}
									<class 'ir.Const'> 139137685149680 {
									parent = 139137685149488
										symbol: 	None
										value: 	1
									}
								}
							}
						}
						<class 'ir.PrintStat'> 139137685148000 {
						parent = 139137685148144
							children:
							<class 'ir.ArrayElement'> 139137685148960 {
							parent = 139137685148000
								children:
								<class 'ir.BinExpr'> 139137685148528 {
								parent = 139137685148960
									children:
									'plus'
									<class 'ir.BinExpr'> 139137685148864 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685359200 {
										parent = 139137685148864
											symbol: 	global int x
										}
										<class 'ir.Const'> 139137685149296 {
										parent = 139137685148864
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 139137685148624 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685149056 {
										parent = 139137685148624
											symbol: 	global int y
										}
										<class 'ir.Const'> 139137685148768 {
										parent = 139137685148624
											symbol: 	None
											value: 	2
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 139137685148528 {
								parent = 139137685148960
									children:
									'plus'
									<class 'ir.BinExpr'> 139137685148864 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685359200 {
										parent = 139137685148864
											symbol: 	global int x
										}
										<class 'ir.Const'> 139137685149296 {
										parent = 139137685148864
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 139137685148624 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685149056 {
										parent = 139137685148624
											symbol: 	global int y
										}
										<class 'ir.Const'> 139137685148768 {
										parent = 139137685148624
											symbol: 	None
											value: 	2
										}
									}
								}
							}
							expr: 	<class 'ir.ArrayElement'> 139137685148960 {
							parent = 139137685148000
								children:
								<class 'ir.BinExpr'> 139137685148528 {
								parent = 139137685148960
									children:
									'plus'
									<class 'ir.BinExpr'> 139137685148864 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685359200 {
										parent = 139137685148864
											symbol: 	global int x
										}
										<class 'ir.Const'> 139137685149296 {
										parent = 139137685148864
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 139137685148624 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685149056 {
										parent = 139137685148624
											symbol: 	global int y
										}
										<class 'ir.Const'> 139137685148768 {
										parent = 139137685148624
											symbol: 	None
											value: 	2
										}
									}
								}
								symbol: 	global short[5, 5] multid
								offset: 	<class 'ir.BinExpr'> 139137685148528 {
								parent = 139137685148960
									children:
									'plus'
									<class 'ir.BinExpr'> 139137685148864 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685359200 {
										parent = 139137685148864
											symbol: 	global int x
										}
										<class 'ir.Const'> 139137685149296 {
										parent = 139137685148864
											symbol: 	None
											value: 	10
										}
									}
									<class 'ir.BinExpr'> 139137685148624 {
									parent = 139137685148528
										children:
										'times'
										<class 'ir.Var'> 139137685149056 {
										parent = 139137685148624
											symbol: 	global int y
										}
										<class 'ir.Const'> 139137685148768 {
										parent = 139137685148624
											symbol: 	None
											value: 	2
										}
									}
								}
							}
						}
						<class 'ir.AssignStat'> 139137685150304 {
						parent = 139137685148144
							symbol: 	global int x
							offset: 	None
							expr: 	<class 'ir.BinExpr'> 139137685150208 {
							parent = 139137685150304
								children:
								'plus'
								<class 'ir.Var'> 139137685148384 {
								parent = 139137685150208
									symbol: 	global int x
								}
								<class 'ir.Const'> 139137685150112 {
								parent = 139137685150208
									symbol: 	None
									value: 	1
								}
							}
						}
						<class 'ir.AssignStat'> 139137685150640 {
						parent = 139137685148144
							symbol: 	global int y
							offset: 	None
							expr: 	<class 'ir.BinExpr'> 139137685150544 {
							parent = 139137685150640
								children:
								'plus'
								<class 'ir.Var'> 139137685150352 {
								parent = 139137685150544
									symbol: 	global int y
								}
								<class 'ir.Const'> 139137685150448 {
								parent = 139137685150544
									symbol: 	None
									value: 	1
								}
							}
						}
					}
					cond: 	<class 'ir.BinExpr'> 139137685147904 {
					parent = 139137685150688
						children:
						'leq'
						<class 'ir.Var'> 139137685348560 {
						parent = 139137685147904
							symbol: 	global int y
						}
						<class 'ir.Const'> 139137685147712 {
						parent = 139137685147904
							symbol: 	None
							value: 	5
						}
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685348752 {
			parent = 139137685150736
				children:
				'leq'
				<class 'ir.Var'> 139137685357664 {
				parent = 139137685348752
					symbol: 	global int x
				}
				<class 'ir.Const'> 139137685348944 {
				parent = 139137685348752
					symbol: 	None
					value: 	5
				}
			}
		}
		<class 'ir.ForStat'> 139137685610256 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685151216 {
			parent = 139137685610256
				children:
				<class 'ir.PrintStat'> 139137685151696 {
				parent = 139137685151216
					children:
					<class 'ir.Var'> 139137685151360 {
					parent = 139137685151696
						symbol: 	auto int a
					}
					expr: 	<class 'ir.Var'> 139137685151360 {
					parent = 139137685151696
						symbol: 	auto int a
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685151072 {
			parent = 139137685610256
				children:
				'leq'
				<class 'ir.Var'> 139137685151552 {
				parent = 139137685151072
					symbol: 	auto int a
				}
				<class 'ir.Const'> 139137685151024 {
				parent = 139137685151072
					symbol: 	None
					value: 	20
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685610208 {
			parent = 139137685610256
				symbol: 	auto int a
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685610112 {
				parent = 139137685610208
					children:
					'plus'
					<class 'ir.Var'> 139137685151168 {
					parent = 139137685610112
						symbol: 	auto int a
					}
					<class 'ir.Const'> 139137685610016 {
					parent = 139137685610112
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.AssignStat'> 139137685610400 {
		parent = 139137684886480
			symbol: 	global int i
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685610304 {
			parent = 139137685610400
				symbol: 	None
				value: 	10
			}
		}
		<class 'ir.PrintStat'> 139137685609872 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685359296 {
			parent = 139137685609872
				symbol: 	None
				value: 	99991
			}
			expr: 	<class 'ir.Const'> 139137685359296 {
			parent = 139137685609872
				symbol: 	None
				value: 	99991
			}
		}
		<class 'ir.ForStat'> 139137685608576 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685609440 {
			parent = 139137685608576
				children:
				<class 'ir.PrintStat'> 139137685609248 {
				parent = 139137685609440
					children:
					<class 'ir.Var'> 139137685609344 {
					parent = 139137685609248
						symbol: 	global int i
					}
					expr: 	<class 'ir.Var'> 139137685609344 {
					parent = 139137685609248
						symbol: 	global int i
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685609008 {
			parent = 139137685608576
				children:
				'leq'
				<class 'ir.Var'> 139137685609104 {
				parent = 139137685609008
					symbol: 	auto int i
				}
				<class 'ir.Const'> 139137685609536 {
				parent = 139137685609008
					symbol: 	None
					value: 	15
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685608624 {
			parent = 139137685608576
				symbol: 	auto int i
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685608720 {
				parent = 139137685608624
					children:
					'plus'
					<class 'ir.Var'> 139137685608912 {
					parent = 139137685608720
						symbol: 	auto int i
					}
					<class 'ir.Const'> 139137685608816 {
					parent = 139137685608720
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685608432 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685608528 {
			parent = 139137685608432
				symbol: 	None
				value: 	88881
			}
			expr: 	<class 'ir.Const'> 139137685608528 {
			parent = 139137685608432
				symbol: 	None
				value: 	88881
			}
		}
		<class 'ir.PrintStat'> 139137685608240 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685608336 {
			parent = 139137685608240
				symbol: 	None
				value: 	99992
			}
			expr: 	<class 'ir.Const'> 139137685608336 {
			parent = 139137685608240
				symbol: 	None
				value: 	99992
			}
		}
		<class 'ir.ForStat'> 139137685607040 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685607904 {
			parent = 139137685607040
				children:
				<class 'ir.PrintStat'> 139137685607712 {
				parent = 139137685607904
					children:
					<class 'ir.Var'> 139137685607808 {
					parent = 139137685607712
						symbol: 	global int j
					}
					expr: 	<class 'ir.Var'> 139137685607808 {
					parent = 139137685607712
						symbol: 	global int j
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685607472 {
			parent = 139137685607040
				children:
				'leq'
				<class 'ir.Var'> 139137685607568 {
				parent = 139137685607472
					symbol: 	auto int j
				}
				<class 'ir.Const'> 139137685608000 {
				parent = 139137685607472
					symbol: 	None
					value: 	5
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685607088 {
			parent = 139137685607040
				symbol: 	auto int j
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685607184 {
				parent = 139137685607088
					children:
					'plus'
					<class 'ir.Var'> 139137685607376 {
					parent = 139137685607184
						symbol: 	auto int j
					}
					<class 'ir.Const'> 139137685607280 {
					parent = 139137685607184
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685606896 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685606992 {
			parent = 139137685606896
				symbol: 	None
				value: 	88882
			}
			expr: 	<class 'ir.Const'> 139137685606992 {
			parent = 139137685606896
				symbol: 	None
				value: 	88882
			}
		}
		<class 'ir.PrintStat'> 139137685606704 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685606800 {
			parent = 139137685606704
				symbol: 	None
				value: 	99993
			}
			expr: 	<class 'ir.Const'> 139137685606800 {
			parent = 139137685606704
				symbol: 	None
				value: 	99993
			}
		}
		<class 'ir.ForStat'> 139137685509312 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685508256 {
			parent = 139137685509312
				children:
				<class 'ir.PrintStat'> 139137685508400 {
				parent = 139137685508256
					children:
					<class 'ir.Const'> 139137685508304 {
					parent = 139137685508400
						symbol: 	None
						value: 	77777
					}
					expr: 	<class 'ir.Const'> 139137685508304 {
					parent = 139137685508400
						symbol: 	None
						value: 	77777
					}
				}
				<class 'ir.PrintStat'> 139137685508592 {
				parent = 139137685508256
					children:
					<class 'ir.Var'> 139137685508496 {
					parent = 139137685508592
						symbol: 	global int k
					}
					expr: 	<class 'ir.Var'> 139137685508496 {
					parent = 139137685508592
						symbol: 	global int k
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685508832 {
			parent = 139137685509312
				children:
				'leq'
				<class 'ir.Var'> 139137685508736 {
				parent = 139137685508832
					symbol: 	auto int k
				}
				<class 'ir.Const'> 139137685606464 {
				parent = 139137685508832
					symbol: 	None
					value: 	5
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685509264 {
			parent = 139137685509312
				symbol: 	auto int k
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685509168 {
				parent = 139137685509264
					children:
					'plus'
					<class 'ir.Var'> 139137685508976 {
					parent = 139137685509168
						symbol: 	auto int k
					}
					<class 'ir.Const'> 139137685509072 {
					parent = 139137685509168
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685509456 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685509360 {
			parent = 139137685509456
				symbol: 	None
				value: 	88883
			}
			expr: 	<class 'ir.Const'> 139137685509360 {
			parent = 139137685509456
				symbol: 	None
				value: 	88883
			}
		}
		<class 'ir.PrintStat'> 139137685509648 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685509552 {
			parent = 139137685509648
				symbol: 	None
				value: 	99994
			}
			expr: 	<class 'ir.Const'> 139137685509552 {
			parent = 139137685509648
				symbol: 	None
				value: 	99994
			}
		}
		<class 'ir.ForStat'> 139137685511424 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685510032 {
			parent = 139137685511424
				children:
				<class 'ir.PrintStat'> 139137685512096 {
				parent = 139137685510032
					children:
					<class 'ir.Var'> 139137685510128 {
					parent = 139137685512096
						symbol: 	global int m
					}
					expr: 	<class 'ir.Var'> 139137685510128 {
					parent = 139137685512096
						symbol: 	global int m
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685511856 {
			parent = 139137685511424
				children:
				'leq'
				<class 'ir.Var'> 139137685511952 {
				parent = 139137685511856
					symbol: 	auto int m
				}
				<class 'ir.Const'> 139137685509936 {
				parent = 139137685511856
					symbol: 	None
					value: 	6
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685511472 {
			parent = 139137685511424
				symbol: 	auto int m
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685511568 {
				parent = 139137685511472
					children:
					'plus'
					<class 'ir.Var'> 139137685511760 {
					parent = 139137685511568
						symbol: 	auto int m
					}
					<class 'ir.Const'> 139137685511664 {
					parent = 139137685511568
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685511280 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685511376 {
			parent = 139137685511280
				symbol: 	None
				value: 	88884
			}
			expr: 	<class 'ir.Const'> 139137685511376 {
			parent = 139137685511280
				symbol: 	None
				value: 	88884
			}
		}
		<class 'ir.PrintStat'> 139137685511088 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685511184 {
			parent = 139137685511088
				symbol: 	None
				value: 	99995
			}
			expr: 	<class 'ir.Const'> 139137685511184 {
			parent = 139137685511088
				symbol: 	None
				value: 	99995
			}
		}
		<class 'ir.ForStat'> 139137685418192 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685510752 {
			parent = 139137685418192
				children:
				<class 'ir.PrintStat'> 139137685510560 {
				parent = 139137685510752
					children:
					<class 'ir.Var'> 139137685510656 {
					parent = 139137685510560
						symbol: 	global int n
					}
					expr: 	<class 'ir.Var'> 139137685510656 {
					parent = 139137685510560
						symbol: 	global int n
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685510320 {
			parent = 139137685418192
				children:
				'leq'
				<class 'ir.Var'> 139137685510416 {
				parent = 139137685510320
					symbol: 	auto int n
				}
				<class 'ir.Const'> 139137685510848 {
				parent = 139137685510320
					symbol: 	None
					value: 	7
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685418240 {
			parent = 139137685418192
				symbol: 	auto int n
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685418336 {
				parent = 139137685418240
					children:
					'plus'
					<class 'ir.Var'> 139137685510224 {
					parent = 139137685418336
						symbol: 	auto int n
					}
					<class 'ir.Const'> 139137685418144 {
					parent = 139137685418336
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685418432 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685418096 {
			parent = 139137685418432
				symbol: 	None
				value: 	88885
			}
			expr: 	<class 'ir.Const'> 139137685418096 {
			parent = 139137685418432
				symbol: 	None
				value: 	88885
			}
		}
		<class 'ir.PrintStat'> 139137685418624 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685418528 {
			parent = 139137685418624
				symbol: 	None
				value: 	99996
			}
			expr: 	<class 'ir.Const'> 139137685418528 {
			parent = 139137685418624
				symbol: 	None
				value: 	99996
			}
		}
		<class 'ir.ForStat'> 139137685420016 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685419008 {
			parent = 139137685420016
				children:
				<class 'ir.PrintStat'> 139137685419152 {
				parent = 139137685419008
					children:
					<class 'ir.Var'> 139137685418864 {
					parent = 139137685419152
						symbol: 	global int p
					}
					expr: 	<class 'ir.Var'> 139137685418864 {
					parent = 139137685419152
						symbol: 	global int p
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685419344 {
			parent = 139137685420016
				children:
				'leq'
				<class 'ir.Var'> 139137685419440 {
				parent = 139137685419344
					symbol: 	auto int p
				}
				<class 'ir.Const'> 139137685418960 {
				parent = 139137685419344
					symbol: 	None
					value: 	12
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685419968 {
			parent = 139137685420016
				symbol: 	auto int p
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685419872 {
				parent = 139137685419968
					children:
					'plus'
					<class 'ir.Var'> 139137685419488 {
					parent = 139137685419872
						symbol: 	auto int p
					}
					<class 'ir.Const'> 139137685419680 {
					parent = 139137685419872
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685419632 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685419776 {
			parent = 139137685419632
				symbol: 	None
				value: 	88886
			}
			expr: 	<class 'ir.Const'> 139137685419776 {
			parent = 139137685419632
				symbol: 	None
				value: 	88886
			}
		}
		<class 'ir.AssignStat'> 139137685420160 {
		parent = 139137684886480
			symbol: 	global int sum
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685420064 {
			parent = 139137685420160
				symbol: 	None
				value: 	0
			}
		}
		<class 'ir.PrintStat'> 139137685420256 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685359968 {
			parent = 139137685420256
				symbol: 	None
				value: 	99997
			}
			expr: 	<class 'ir.Const'> 139137685359968 {
			parent = 139137685420256
				symbol: 	None
				value: 	99997
			}
		}
		<class 'ir.ForStat'> 139137685421504 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685420592 {
			parent = 139137685421504
				children:
				<class 'ir.AssignStat'> 139137685421168 {
				parent = 139137685420592
					symbol: 	global int sum
					offset: 	None
					expr: 	<class 'ir.BinExpr'> 139137685420976 {
					parent = 139137685421168
						children:
						'plus'
						<class 'ir.Var'> 139137685420688 {
						parent = 139137685420976
							symbol: 	global int sum
						}
						<class 'ir.Var'> 139137685420784 {
						parent = 139137685420976
							symbol: 	global int q
						}
					}
				}
				<class 'ir.PrintStat'> 139137685421312 {
				parent = 139137685420592
					children:
					<class 'ir.Var'> 139137685421216 {
					parent = 139137685421312
						symbol: 	global int q
					}
					expr: 	<class 'ir.Var'> 139137685421216 {
					parent = 139137685421312
						symbol: 	global int q
					}
				}
				<class 'ir.PrintStat'> 139137685420880 {
				parent = 139137685420592
					children:
					<class 'ir.Var'> 139137685421024 {
					parent = 139137685420880
						symbol: 	global int sum
					}
					expr: 	<class 'ir.Var'> 139137685421024 {
					parent = 139137685420880
						symbol: 	global int sum
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685421936 {
			parent = 139137685421504
				children:
				'leq'
				<class 'ir.Var'> 139137685422032 {
				parent = 139137685421936
					symbol: 	auto int q
				}
				<class 'ir.Const'> 139137685420496 {
				parent = 139137685421936
					symbol: 	None
					value: 	5
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685421552 {
			parent = 139137685421504
				symbol: 	auto int q
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685421648 {
				parent = 139137685421552
					children:
					'plus'
					<class 'ir.Var'> 139137685421840 {
					parent = 139137685421648
						symbol: 	auto int q
					}
					<class 'ir.Const'> 139137685421744 {
					parent = 139137685421648
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685846768 {
		parent = 139137684886480
			children:
			<class 'ir.Var'> 139137685846336 {
			parent = 139137685846768
				symbol: 	global int sum
			}
			expr: 	<class 'ir.Var'> 139137685846336 {
			parent = 139137685846768
				symbol: 	global int sum
			}
		}
		<class 'ir.PrintStat'> 139137685847344 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685847248 {
			parent = 139137685847344
				symbol: 	None
				value: 	88887
			}
			expr: 	<class 'ir.Const'> 139137685847248 {
			parent = 139137685847344
				symbol: 	None
				value: 	88887
			}
		}
		<class 'ir.AssignStat'> 139137685848016 {
		parent = 139137684886480
			symbol: 	global int x
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685847440 {
			parent = 139137685848016
				symbol: 	None
				value: 	100
			}
		}
		<class 'ir.PrintStat'> 139137685847872 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685847968 {
			parent = 139137685847872
				symbol: 	None
				value: 	99998
			}
			expr: 	<class 'ir.Const'> 139137685847968 {
			parent = 139137685847872
				symbol: 	None
				value: 	99998
			}
		}
		<class 'ir.ForStat'> 139137685336512 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685847536 {
			parent = 139137685336512
				children:
				<class 'ir.AssignStat'> 139137685846864 {
				parent = 139137685847536
					symbol: 	global int x
					offset: 	None
					expr: 	<class 'ir.BinExpr'> 139137685846960 {
					parent = 139137685846864
						children:
						'plus'
						<class 'ir.Var'> 139137685847152 {
						parent = 139137685846960
							symbol: 	global int x
						}
						<class 'ir.Var'> 139137685847056 {
						parent = 139137685846960
							symbol: 	global int r
						}
					}
				}
				<class 'ir.PrintStat'> 139137685846576 {
				parent = 139137685847536
					children:
					<class 'ir.Var'> 139137685846672 {
					parent = 139137685846576
						symbol: 	global int x
					}
					expr: 	<class 'ir.Var'> 139137685846672 {
					parent = 139137685846576
						symbol: 	global int x
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685846288 {
			parent = 139137685336512
				children:
				'leq'
				<class 'ir.Var'> 139137685846432 {
				parent = 139137685846288
					symbol: 	auto int r
				}
				<class 'ir.Const'> 139137685847632 {
				parent = 139137685846288
					symbol: 	None
					value: 	3
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685336464 {
			parent = 139137685336512
				symbol: 	auto int r
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685336368 {
				parent = 139137685336464
					children:
					'plus'
					<class 'ir.Var'> 139137685336176 {
					parent = 139137685336368
						symbol: 	auto int r
					}
					<class 'ir.Const'> 139137685336272 {
					parent = 139137685336368
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.PrintStat'> 139137685336656 {
		parent = 139137684886480
			children:
			<class 'ir.Var'> 139137685336560 {
			parent = 139137685336656
				symbol: 	global int x
			}
			expr: 	<class 'ir.Var'> 139137685336560 {
			parent = 139137685336656
				symbol: 	global int x
			}
		}
		<class 'ir.PrintStat'> 139137685336848 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685336752 {
			parent = 139137685336848
				symbol: 	None
				value: 	88888
			}
			expr: 	<class 'ir.Const'> 139137685336752 {
			parent = 139137685336848
				symbol: 	None
				value: 	88888
			}
		}
		<class 'ir.PrintStat'> 139137685337040 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685336944 {
			parent = 139137685337040
				symbol: 	None
				value: 	999990
			}
			expr: 	<class 'ir.Const'> 139137685336944 {
			parent = 139137685337040
				symbol: 	None
				value: 	999990
			}
		}
		<class 'ir.AssignStat'> 139137685337232 {
		parent = 139137684886480
			symbol: 	global int sm_idx
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685337136 {
			parent = 139137685337232
				symbol: 	None
				value: 	0
			}
		}
		<class 'ir.ForStat'> 139137685339008 {
		parent = 139137684886480
			body: 	<class 'ir.StatList'> 139137685337472 {
			parent = 139137685339008
				children:
				<class 'ir.AssignStat'> 139137685338432 {
				parent = 139137685337472
					symbol: 	global int[128] sm_dest_arr
					offset: 	<class 'ir.BinExpr'> 139137685337808 {
					parent = 139137685338432
						children:
						'times'
						<class 'ir.Var'> 139137685337568 {
						parent = 139137685337808
							symbol: 	global int sm_idx
						}
						<class 'ir.Const'> 139137685337616 {
						parent = 139137685337808
							symbol: 	None
							value: 	4
						}
					}
					expr: 	<class 'ir.BinExpr'> 139137685338336 {
					parent = 139137685338432
						children:
						'plus'
						<class 'ir.ArrayElement'> 139137685338000 {
						parent = 139137685338336
							children:
							<class 'ir.BinExpr'> 139137685338096 {
							parent = 139137685338000
								children:
								'times'
								<class 'ir.Var'> 139137685337712 {
								parent = 139137685338096
									symbol: 	global int sm_idx
								}
								<class 'ir.Const'> 139137685337904 {
								parent = 139137685338096
									symbol: 	None
									value: 	4
								}
							}
							symbol: 	global int[128] sm_source_arr
							offset: 	<class 'ir.BinExpr'> 139137685338096 {
							parent = 139137685338000
								children:
								'times'
								<class 'ir.Var'> 139137685337712 {
								parent = 139137685338096
									symbol: 	global int sm_idx
								}
								<class 'ir.Const'> 139137685337904 {
								parent = 139137685338096
									symbol: 	None
									value: 	4
								}
							}
						}
						<class 'ir.Var'> 139137685338192 {
						parent = 139137685338336
							symbol: 	global int sm_idx
						}
					}
				}
			}
			cond: 	<class 'ir.BinExpr'> 139137685338576 {
			parent = 139137685339008
				children:
				'leq'
				<class 'ir.Var'> 139137685338480 {
				parent = 139137685338576
					symbol: 	auto int sm_idx
				}
				<class 'ir.Const'> 139137685337376 {
				parent = 139137685338576
					symbol: 	None
					value: 	127
				}
			}
			step: 	<class 'ir.AssignStat'> 139137685338960 {
			parent = 139137685339008
				symbol: 	auto int sm_idx
				offset: 	None
				expr: 	<class 'ir.BinExpr'> 139137685338864 {
				parent = 139137685338960
					children:
					'plus'
					<class 'ir.Var'> 139137685338672 {
					parent = 139137685338864
						symbol: 	auto int sm_idx
					}
					<class 'ir.Const'> 139137685338768 {
					parent = 139137685338864
						symbol: 	None
						value: 	1
					}
				}
			}
		}
		<class 'ir.IfStat'> 139137685320656 {
		parent = 139137684886480
			thenpart: 	<class 'ir.StatList'> 139137685339344 {
			parent = 139137685320656
				children:
				<class 'ir.PrintStat'> 139137685339536 {
				parent = 139137685339344
					children:
					<class 'ir.Const'> 139137685339440 {
					parent = 139137685339536
						symbol: 	None
						value: 	76543
					}
					expr: 	<class 'ir.Const'> 139137685339440 {
					parent = 139137685339536
						symbol: 	None
						value: 	76543
					}
				}
				<class 'ir.PrintStat'> 139137685339968 {
				parent = 139137685339344
					children:
					<class 'ir.ArrayElement'> 139137685339776 {
					parent = 139137685339968
						children:
						<class 'ir.BinExpr'> 139137685339872 {
						parent = 139137685339776
							children:
							'times'
							<class 'ir.Const'> 139137685339632 {
							parent = 139137685339872
								symbol: 	None
								value: 	0
							}
							<class 'ir.Const'> 139137685339680 {
							parent = 139137685339872
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685339872 {
						parent = 139137685339776
							children:
							'times'
							<class 'ir.Const'> 139137685339632 {
							parent = 139137685339872
								symbol: 	None
								value: 	0
							}
							<class 'ir.Const'> 139137685339680 {
							parent = 139137685339872
								symbol: 	None
								value: 	4
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 139137685339776 {
					parent = 139137685339968
						children:
						<class 'ir.BinExpr'> 139137685339872 {
						parent = 139137685339776
							children:
							'times'
							<class 'ir.Const'> 139137685339632 {
							parent = 139137685339872
								symbol: 	None
								value: 	0
							}
							<class 'ir.Const'> 139137685339680 {
							parent = 139137685339872
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685339872 {
						parent = 139137685339776
							children:
							'times'
							<class 'ir.Const'> 139137685339632 {
							parent = 139137685339872
								symbol: 	None
								value: 	0
							}
							<class 'ir.Const'> 139137685339680 {
							parent = 139137685339872
								symbol: 	None
								value: 	4
							}
						}
					}
				}
				<class 'ir.PrintStat'> 139137685320032 {
				parent = 139137685339344
					children:
					<class 'ir.ArrayElement'> 139137685319840 {
					parent = 139137685320032
						children:
						<class 'ir.BinExpr'> 139137685319936 {
						parent = 139137685319840
							children:
							'times'
							<class 'ir.Const'> 139137685340112 {
							parent = 139137685319936
								symbol: 	None
								value: 	64
							}
							<class 'ir.Const'> 139137685319744 {
							parent = 139137685319936
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685319936 {
						parent = 139137685319840
							children:
							'times'
							<class 'ir.Const'> 139137685340112 {
							parent = 139137685319936
								symbol: 	None
								value: 	64
							}
							<class 'ir.Const'> 139137685319744 {
							parent = 139137685319936
								symbol: 	None
								value: 	4
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 139137685319840 {
					parent = 139137685320032
						children:
						<class 'ir.BinExpr'> 139137685319936 {
						parent = 139137685319840
							children:
							'times'
							<class 'ir.Const'> 139137685340112 {
							parent = 139137685319936
								symbol: 	None
								value: 	64
							}
							<class 'ir.Const'> 139137685319744 {
							parent = 139137685319936
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685319936 {
						parent = 139137685319840
							children:
							'times'
							<class 'ir.Const'> 139137685340112 {
							parent = 139137685319936
								symbol: 	None
								value: 	64
							}
							<class 'ir.Const'> 139137685319744 {
							parent = 139137685319936
								symbol: 	None
								value: 	4
							}
						}
					}
				}
				<class 'ir.PrintStat'> 139137685320512 {
				parent = 139137685339344
					children:
					<class 'ir.ArrayElement'> 139137685320320 {
					parent = 139137685320512
						children:
						<class 'ir.BinExpr'> 139137685320416 {
						parent = 139137685320320
							children:
							'times'
							<class 'ir.Const'> 139137685320176 {
							parent = 139137685320416
								symbol: 	None
								value: 	127
							}
							<class 'ir.Const'> 139137685320224 {
							parent = 139137685320416
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685320416 {
						parent = 139137685320320
							children:
							'times'
							<class 'ir.Const'> 139137685320176 {
							parent = 139137685320416
								symbol: 	None
								value: 	127
							}
							<class 'ir.Const'> 139137685320224 {
							parent = 139137685320416
								symbol: 	None
								value: 	4
							}
						}
					}
					expr: 	<class 'ir.ArrayElement'> 139137685320320 {
					parent = 139137685320512
						children:
						<class 'ir.BinExpr'> 139137685320416 {
						parent = 139137685320320
							children:
							'times'
							<class 'ir.Const'> 139137685320176 {
							parent = 139137685320416
								symbol: 	None
								value: 	127
							}
							<class 'ir.Const'> 139137685320224 {
							parent = 139137685320416
								symbol: 	None
								value: 	4
							}
						}
						symbol: 	global int[128] sm_dest_arr
						offset: 	<class 'ir.BinExpr'> 139137685320416 {
						parent = 139137685320320
							children:
							'times'
							<class 'ir.Const'> 139137685320176 {
							parent = 139137685320416
								symbol: 	None
								value: 	127
							}
							<class 'ir.Const'> 139137685320224 {
							parent = 139137685320416
								symbol: 	None
								value: 	4
							}
						}
					}
				}
			}
			elsepart: 	None
			cond: 	<class 'ir.BinExpr'> 139137685339248 {
			parent = 139137685320656
				children:
				'geq'
				<class 'ir.Const'> 139137685339056 {
				parent = 139137685339248
					symbol: 	None
					value: 	127
				}
				<class 'ir.Const'> 139137685339152 {
				parent = 139137685339248
					symbol: 	None
					value: 	0
				}
			}
		}
		<class 'ir.PrintStat'> 139137685320800 {
		parent = 139137684886480
			children:
			<class 'ir.Const'> 139137685320704 {
			parent = 139137685320800
				symbol: 	None
				value: 	888880
			}
			expr: 	<class 'ir.Const'> 139137685320704 {
			parent = 139137685320800
				symbol: 	None
				value: 	888880
			}
		}
	}
	defs: 	<class 'ir.DefinitionList'> 139137686162448 {
	parent = 139137685320896
		children:
		<class 'ir.FunctionDef'> 139137684886384 {
		parent = 139137686162448
			body: 	<class 'ir.Block'> 139137685358720 {
			parent = 139137684886384
				body: 	<class 'ir.StatList'> 139137684885760 {
				parent = 139137685358720
					children:
					<class 'ir.AssignStat'> 139137684886048 {
					parent = 139137684885760
						symbol: 	auto int test
						offset: 	None
						expr: 	<class 'ir.Const'> 139137684885952 {
						parent = 139137684886048
							symbol: 	None
							value: 	1234
						}
					}
					<class 'ir.AssignStat'> 139137684886336 {
					parent = 139137684885760
						symbol: 	global int squ
						offset: 	None
						expr: 	<class 'ir.BinExpr'> 139137684886240 {
						parent = 139137684886336
							children:
							'times'
							<class 'ir.Var'> 139137684886096 {
							parent = 139137684886240
								symbol: 	global int x
							}
							<class 'ir.Var'> 139137684885856 {
							parent = 139137684886240
								symbol: 	global int x
							}
						}
					}
				}
				defs: 	<class 'ir.DefinitionList'> 139137684885568 {
				parent = 139137685358720
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
			}
			symbol: 	auto function square
		}
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.StatList'> 139137684886480 45
navigating children of <class 'ir.UnExpr'> 139137684886672 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886768
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886864
navigating children of <class 'ir.StatList'> 139137684887392 1
navigating children of <class 'ir.PrintStat'> 139137684887536 1
navigating children of <class 'ir.UnExpr'> 139137684887632 2
navigating children of <class 'ir.UnExpr'> 139137684887632 2
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684887536
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 139137684887872
navigating children of <class 'ir.StatList'> 139137684886960 1
navigating children of <class 'ir.PrintStat'> 139137684887776 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684887776
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 139137684887872
navigating children of <class 'ir.BinExpr'> 139137684887344 3
successfully navigated attr  cond  of <class 'ir.IfStat'> 139137684887872
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684888016
navigating children of <class 'ir.StatList'> 139137684888352 3
successfully navigated attr  call  of <class 'ir.CallStat'> 139137684888544
navigating children of <class 'ir.BinExpr'> 139137684888832 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684888928
navigating children of <class 'ir.PrintStat'> 139137684889072 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684889072
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137684889168
navigating children of <class 'ir.BinExpr'> 139137684888208 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137684889168
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684889312
navigating children of <class 'ir.StatList'> 139137685351152 3
navigating children of <class 'ir.BinExpr'> 139137685351104 3
navigating children of <class 'ir.BinExpr'> 139137685351248 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685351680
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685351680
navigating children of <class 'ir.PrintStat'> 139137685352208 1
navigating children of <class 'ir.ArrayElement'> 139137685352016 1
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.BinExpr'> 139137685351920 3
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.BinExpr'> 139137685351920 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685352016
navigating children of <class 'ir.ArrayElement'> 139137685352016 1
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.BinExpr'> 139137685351920 3
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.BinExpr'> 139137685351920 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685352016
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685352208
navigating children of <class 'ir.BinExpr'> 139137685350048 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349904
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685349808
navigating children of <class 'ir.BinExpr'> 139137684889552 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685349808
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349664
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349136
navigating children of <class 'ir.StatList'> 139137685348656 1
navigating children of <class 'ir.StatList'> 139137685148144 4
navigating children of <class 'ir.BinExpr'> 139137685149776 3
navigating children of <class 'ir.BinExpr'> 139137685150064 3
navigating children of <class 'ir.BinExpr'> 139137685149872 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685149392
navigating children of <class 'ir.ArrayElement'> 139137685149584 1
navigating children of <class 'ir.BinExpr'> 139137685149488 3
navigating children of <class 'ir.BinExpr'> 139137685149488 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685149584
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685149392
navigating children of <class 'ir.PrintStat'> 139137685148000 1
navigating children of <class 'ir.ArrayElement'> 139137685148960 1
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.BinExpr'> 139137685148864 3
navigating children of <class 'ir.BinExpr'> 139137685148624 3
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.BinExpr'> 139137685148864 3
navigating children of <class 'ir.BinExpr'> 139137685148624 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685148960
navigating children of <class 'ir.ArrayElement'> 139137685148960 1
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.BinExpr'> 139137685148864 3
navigating children of <class 'ir.BinExpr'> 139137685148624 3
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.BinExpr'> 139137685148864 3
navigating children of <class 'ir.BinExpr'> 139137685148624 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685148960
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685148000
navigating children of <class 'ir.BinExpr'> 139137685150208 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685150304
navigating children of <class 'ir.BinExpr'> 139137685150544 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685150640
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685150688
navigating children of <class 'ir.BinExpr'> 139137685147904 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685150688
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685150736
navigating children of <class 'ir.BinExpr'> 139137685348752 3
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685150736
navigating children of <class 'ir.StatList'> 139137685151216 1
navigating children of <class 'ir.PrintStat'> 139137685151696 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685151696
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685610256
navigating children of <class 'ir.BinExpr'> 139137685151072 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685610256
navigating children of <class 'ir.BinExpr'> 139137685610112 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685610208
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685610256
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685610400
navigating children of <class 'ir.PrintStat'> 139137685609872 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685609872
navigating children of <class 'ir.StatList'> 139137685609440 1
navigating children of <class 'ir.PrintStat'> 139137685609248 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685609248
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.BinExpr'> 139137685609008 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.BinExpr'> 139137685608720 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685608624
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.PrintStat'> 139137685608432 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685608432
navigating children of <class 'ir.PrintStat'> 139137685608240 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685608240
navigating children of <class 'ir.StatList'> 139137685607904 1
navigating children of <class 'ir.PrintStat'> 139137685607712 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685607712
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.BinExpr'> 139137685607472 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.BinExpr'> 139137685607184 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607088
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.PrintStat'> 139137685606896 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685606896
navigating children of <class 'ir.PrintStat'> 139137685606704 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685606704
navigating children of <class 'ir.StatList'> 139137685508256 2
navigating children of <class 'ir.PrintStat'> 139137685508400 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685508400
navigating children of <class 'ir.PrintStat'> 139137685508592 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685508592
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.BinExpr'> 139137685508832 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.BinExpr'> 139137685509168 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685509264
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.PrintStat'> 139137685509456 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685509456
navigating children of <class 'ir.PrintStat'> 139137685509648 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685509648
navigating children of <class 'ir.StatList'> 139137685510032 1
navigating children of <class 'ir.PrintStat'> 139137685512096 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685512096
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.BinExpr'> 139137685511856 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.BinExpr'> 139137685511568 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685511472
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.PrintStat'> 139137685511280 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685511280
navigating children of <class 'ir.PrintStat'> 139137685511088 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685511088
navigating children of <class 'ir.StatList'> 139137685510752 1
navigating children of <class 'ir.PrintStat'> 139137685510560 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685510560
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.BinExpr'> 139137685510320 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.BinExpr'> 139137685418336 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685418240
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.PrintStat'> 139137685418432 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685418432
navigating children of <class 'ir.PrintStat'> 139137685418624 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685418624
navigating children of <class 'ir.StatList'> 139137685419008 1
navigating children of <class 'ir.PrintStat'> 139137685419152 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685419152
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.BinExpr'> 139137685419344 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.BinExpr'> 139137685419872 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419968
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.PrintStat'> 139137685419632 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685419632
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685420160
navigating children of <class 'ir.PrintStat'> 139137685420256 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685420256
navigating children of <class 'ir.StatList'> 139137685420592 3
navigating children of <class 'ir.BinExpr'> 139137685420976 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421168
navigating children of <class 'ir.PrintStat'> 139137685421312 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685421312
navigating children of <class 'ir.PrintStat'> 139137685420880 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685420880
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.BinExpr'> 139137685421936 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.BinExpr'> 139137685421648 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421552
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.PrintStat'> 139137685846768 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685846768
navigating children of <class 'ir.PrintStat'> 139137685847344 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685847344
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685848016
navigating children of <class 'ir.PrintStat'> 139137685847872 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685847872
navigating children of <class 'ir.StatList'> 139137685847536 2
navigating children of <class 'ir.BinExpr'> 139137685846960 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846864
navigating children of <class 'ir.PrintStat'> 139137685846576 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685846576
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.BinExpr'> 139137685846288 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.BinExpr'> 139137685336368 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685336464
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.PrintStat'> 139137685336656 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685336656
navigating children of <class 'ir.PrintStat'> 139137685336848 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685336848
navigating children of <class 'ir.PrintStat'> 139137685337040 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685337040
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685337232
navigating children of <class 'ir.StatList'> 139137685337472 1
navigating children of <class 'ir.BinExpr'> 139137685337808 3
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685338432
navigating children of <class 'ir.BinExpr'> 139137685338336 3
navigating children of <class 'ir.ArrayElement'> 139137685338000 1
navigating children of <class 'ir.BinExpr'> 139137685338096 3
navigating children of <class 'ir.BinExpr'> 139137685338096 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685338000
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685338432
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.BinExpr'> 139137685338576 3
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.BinExpr'> 139137685338864 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685338960
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.StatList'> 139137685339344 4
navigating children of <class 'ir.PrintStat'> 139137685339536 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685339536
navigating children of <class 'ir.PrintStat'> 139137685339968 1
navigating children of <class 'ir.ArrayElement'> 139137685339776 1
navigating children of <class 'ir.BinExpr'> 139137685339872 3
navigating children of <class 'ir.BinExpr'> 139137685339872 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685339776
navigating children of <class 'ir.ArrayElement'> 139137685339776 1
navigating children of <class 'ir.BinExpr'> 139137685339872 3
navigating children of <class 'ir.BinExpr'> 139137685339872 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685339776
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685339968
navigating children of <class 'ir.PrintStat'> 139137685320032 1
navigating children of <class 'ir.ArrayElement'> 139137685319840 1
navigating children of <class 'ir.BinExpr'> 139137685319936 3
navigating children of <class 'ir.BinExpr'> 139137685319936 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685319840
navigating children of <class 'ir.ArrayElement'> 139137685319840 1
navigating children of <class 'ir.BinExpr'> 139137685319936 3
navigating children of <class 'ir.BinExpr'> 139137685319936 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685319840
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320032
navigating children of <class 'ir.PrintStat'> 139137685320512 1
navigating children of <class 'ir.ArrayElement'> 139137685320320 1
navigating children of <class 'ir.BinExpr'> 139137685320416 3
navigating children of <class 'ir.BinExpr'> 139137685320416 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685320320
navigating children of <class 'ir.ArrayElement'> 139137685320320 1
navigating children of <class 'ir.BinExpr'> 139137685320416 3
navigating children of <class 'ir.BinExpr'> 139137685320416 3
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685320320
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320512
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 139137685320656
navigating children of <class 'ir.BinExpr'> 139137685339248 3
successfully navigated attr  cond  of <class 'ir.IfStat'> 139137685320656
navigating children of <class 'ir.PrintStat'> 139137685320800 1
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320800
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 2
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886048
navigating children of <class 'ir.BinExpr'> 139137684886240 3
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886336
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896

--- Navigating: Applying Lowering ---
navigating children of <class 'ir.StatList'> 139137684886480 45
navigating children of <class 'ir.UnExpr'> 139137684886672 2
StatList : new 139137685321232
Lowering <class 'ir.Const'> 139137684886576
StatList : new 139137685321088
Lowering <class 'ir.UnExpr'> 139137684886672
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886768
StatList : new 139137684886672
Lowering <class 'ir.AssignStat'> 139137684886768
StatList : new 139137685321184
Lowering <class 'ir.ReadStat'> 139137685357520
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886864
StatList : new 139137685357520
Lowering <class 'ir.AssignStat'> 139137684886864
navigating children of <class 'ir.StatList'> 139137684887392 1
navigating children of <class 'ir.PrintStat'> 139137684887536 1
navigating children of <class 'ir.UnExpr'> 139137684887632 2
StatList : new 139137685321664
Lowering <class 'ir.Var'> 139137684887488
StatList : new 139137685321952
Lowering <class 'ir.UnExpr'> 139137684887632
navigating children of <class 'ir.UnExpr'> 139137684887632 2
navigating children of <class 'ir.StatList'> 139137685321664 1
Cannot lower 139137685321616 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685321664 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137685321568
Lowering <class 'ir.UnExpr'> 139137684887632
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684887536
StatList : new 139137685322000
Lowering <class 'ir.PrintStat'> 139137684887536
Cannot lower 139137684887392 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 139137684887872
navigating children of <class 'ir.StatList'> 139137684886960 1
navigating children of <class 'ir.PrintStat'> 139137684887776 1
StatList : new 139137685322336
Lowering <class 'ir.Var'> 139137684887248
StatList : new 139137685322480
Lowering <class 'ir.Var'> 139137684887248
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684887776
StatList : new 139137685322576
Lowering <class 'ir.PrintStat'> 139137684887776
Cannot lower 139137684886960 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  elsepart  of <class 'ir.IfStat'> 139137684887872
navigating children of <class 'ir.BinExpr'> 139137684887344 3
StatList : new 139137685322768
Lowering <class 'ir.Var'> 139137684886912
StatList : new 139137685322864
Lowering <class 'ir.Const'> 139137684887200
StatList : new 139137685323056
Lowering <class 'ir.BinExpr'> 139137684887344
successfully navigated attr  cond  of <class 'ir.IfStat'> 139137684887872
StatList : new 139137685323296
Lowering <class 'ir.IfStat'> 139137684887872
StatList : new 139137685323488
Lowering <class 'ir.Const'> 139137684887920
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684888016
StatList : new 139137684887920
Lowering <class 'ir.AssignStat'> 139137684888016
navigating children of <class 'ir.StatList'> 139137684888352 3
Cannot lower 139137684888448 <class 'ir.CallExpr'> 'CallExpr' object has no attribute 'lower'
successfully navigated attr  call  of <class 'ir.CallStat'> 139137684888544
Lowering <class 'ir.CallStat'> 139137684888544
navigating children of <class 'ir.BinExpr'> 139137684888832 3
StatList : new 139137685155904
Lowering <class 'ir.Var'> 139137684888640
StatList : new 139137685156048
Lowering <class 'ir.Const'> 139137684888736
StatList : new 139137685156240
Lowering <class 'ir.BinExpr'> 139137684888832
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684888928
StatList : new 139137684888832
Lowering <class 'ir.AssignStat'> 139137684888928
navigating children of <class 'ir.PrintStat'> 139137684889072 1
StatList : new 139137685156384
Lowering <class 'ir.Var'> 139137684888976
StatList : new 139137685156576
Lowering <class 'ir.Var'> 139137684888976
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137684889072
StatList : new 139137685156672
Lowering <class 'ir.PrintStat'> 139137684889072
Cannot lower 139137684888352 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137684889168
navigating children of <class 'ir.BinExpr'> 139137684888208 3
StatList : new 139137685156864
Lowering <class 'ir.Var'> 139137684888160
StatList : new 139137685156960
Lowering <class 'ir.Const'> 139137684888304
StatList : new 139137685157152
Lowering <class 'ir.BinExpr'> 139137684888208
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137684889168
StatList : new 139137685157392
Lowering <class 'ir.WhileStat'> 139137684889168
StatList : new 139137685157584
Lowering <class 'ir.Const'> 139137684889216
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684889312
StatList : new 139137684889216
Lowering <class 'ir.AssignStat'> 139137684889312
navigating children of <class 'ir.StatList'> 139137685351152 3
navigating children of <class 'ir.BinExpr'> 139137685351104 3
navigating children of <class 'ir.BinExpr'> 139137685351248 3
StatList : new 139137685157776
Lowering <class 'ir.Var'> 139137685351296
StatList : new 139137685158016
Lowering <class 'ir.Const'> 139137685351392
StatList : new 139137685158208
Lowering <class 'ir.BinExpr'> 139137685351248
StatList : new 139137685351200
Lowering <class 'ir.Const'> 139137685351488
StatList : new 139137685158448
Lowering <class 'ir.BinExpr'> 139137685351104
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685351680
StatList : new 139137685351056
Lowering <class 'ir.Var'> 139137685351584
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685351680
StatList : new 139137685158880
Lowering <class 'ir.AssignStat'> 139137685351680
navigating children of <class 'ir.PrintStat'> 139137685352208 1
navigating children of <class 'ir.ArrayElement'> 139137685352016 1
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.BinExpr'> 139137685351920 3
StatList : new 139137685159120
Lowering <class 'ir.Var'> 139137685358960
StatList : new 139137685159456
Lowering <class 'ir.Const'> 139137685351824
StatList : new 139137685159648
Lowering <class 'ir.BinExpr'> 139137685351920
StatList : new 139137685351968
Lowering <class 'ir.Const'> 139137685351728
StatList : new 139137685159888
Lowering <class 'ir.BinExpr'> 139137685352112
navigating children of <class 'ir.BinExpr'> 139137685352112 3
navigating children of <class 'ir.StatList'> 139137685159648 3
navigating children of <class 'ir.StatList'> 139137685159120 1
Cannot lower 139137685159072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685159120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685159456 1
Cannot lower 139137685351776 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685159456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685159408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685159648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685351968 1
Cannot lower 139137685351920 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685351968 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137685311696
Lowering <class 'ir.BinExpr'> 139137685352112
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685352016
StatList : new 139137685312224
Lowering <class 'ir.ArrayElement'> 139137685352016
navigating children of <class 'ir.ArrayElement'> 139137685352016 1
navigating children of <class 'ir.StatList'> 139137685159888 3
navigating children of <class 'ir.StatList'> 139137685159648 3
navigating children of <class 'ir.StatList'> 139137685159120 1
Cannot lower 139137685159072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685159120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685159456 1
Cannot lower 139137685351776 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685159456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685159408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685159648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685351968 1
Cannot lower 139137685351920 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685351968 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685159792 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685159888 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685311696 3
navigating children of <class 'ir.StatList'> 139137685159648 3
navigating children of <class 'ir.StatList'> 139137685159120 1
Cannot lower 139137685159072 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685159120 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685159456 1
Cannot lower 139137685351776 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685159456 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685159408 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685159648 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685351968 1
Cannot lower 139137685351920 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685351968 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685311648 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685311696 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685352016
StatList : new 139137685312656
Lowering <class 'ir.ArrayElement'> 139137685352016
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685352208
StatList : new 139137685312800
Lowering <class 'ir.PrintStat'> 139137685352208
navigating children of <class 'ir.BinExpr'> 139137685350048 3
StatList : new 139137685313040
Lowering <class 'ir.Var'> 139137685352352
StatList : new 139137685313232
Lowering <class 'ir.Const'> 139137685350912
StatList : new 139137685313424
Lowering <class 'ir.BinExpr'> 139137685350048
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349904
StatList : new 139137685350048
Lowering <class 'ir.AssignStat'> 139137685349904
Cannot lower 139137685351152 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685349808
navigating children of <class 'ir.BinExpr'> 139137684889552 3
StatList : new 139137685313520
Lowering <class 'ir.Var'> 139137684889360
StatList : new 139137685313664
Lowering <class 'ir.Const'> 139137684889456
StatList : new 139137685313856
Lowering <class 'ir.BinExpr'> 139137684889552
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685349808
StatList : new 139137685314096
Lowering <class 'ir.WhileStat'> 139137685349808
StatList : new 139137685314288
Lowering <class 'ir.Const'> 139137685349760
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349664
StatList : new 139137685349760
Lowering <class 'ir.AssignStat'> 139137685349664
StatList : new 139137685314480
Lowering <class 'ir.Const'> 139137685349616
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685349136
StatList : new 139137685349616
Lowering <class 'ir.AssignStat'> 139137685349136
navigating children of <class 'ir.StatList'> 139137685348656 1
navigating children of <class 'ir.StatList'> 139137685148144 4
navigating children of <class 'ir.BinExpr'> 139137685149776 3
navigating children of <class 'ir.BinExpr'> 139137685150064 3
StatList : new 139137685314672
Lowering <class 'ir.Var'> 139137685148336
StatList : new 139137685314960
Lowering <class 'ir.Const'> 139137685147856
StatList : new 139137685315152
Lowering <class 'ir.BinExpr'> 139137685150064
navigating children of <class 'ir.BinExpr'> 139137685149872 3
StatList : new 139137685148432
Lowering <class 'ir.Var'> 139137685147808
StatList : new 139137685315248
Lowering <class 'ir.Const'> 139137685149968
StatList : new 139137685315536
Lowering <class 'ir.BinExpr'> 139137685149872
StatList : new 139137685287120
Lowering <class 'ir.BinExpr'> 139137685149776
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685149392
navigating children of <class 'ir.ArrayElement'> 139137685149584 1
navigating children of <class 'ir.BinExpr'> 139137685149488 3
StatList : new 139137685287168
Lowering <class 'ir.Var'> 139137685149200
StatList : new 139137685287312
Lowering <class 'ir.Const'> 139137685149680
StatList : new 139137685287504
Lowering <class 'ir.BinExpr'> 139137685149488
navigating children of <class 'ir.BinExpr'> 139137685149488 3
navigating children of <class 'ir.StatList'> 139137685287168 1
Cannot lower 139137685149728 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685287168 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685287312 1
Cannot lower 139137685149632 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685287312 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137685287696
Lowering <class 'ir.BinExpr'> 139137685149488
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685149584
StatList : new 139137685288224
Lowering <class 'ir.ArrayElement'> 139137685149584
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685149392
StatList : new 139137685288656
Lowering <class 'ir.AssignStat'> 139137685149392
navigating children of <class 'ir.PrintStat'> 139137685148000 1
navigating children of <class 'ir.ArrayElement'> 139137685148960 1
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.BinExpr'> 139137685148864 3
StatList : new 139137685288896
Lowering <class 'ir.Var'> 139137685359200
StatList : new 139137685289232
Lowering <class 'ir.Const'> 139137685149296
StatList : new 139137685289424
Lowering <class 'ir.BinExpr'> 139137685148864
navigating children of <class 'ir.BinExpr'> 139137685148624 3
StatList : new 139137685148816
Lowering <class 'ir.Var'> 139137685149056
StatList : new 139137685289520
Lowering <class 'ir.Const'> 139137685148768
StatList : new 139137685289808
Lowering <class 'ir.BinExpr'> 139137685148624
StatList : new 139137685290000
Lowering <class 'ir.BinExpr'> 139137685148528
navigating children of <class 'ir.BinExpr'> 139137685148528 3
navigating children of <class 'ir.StatList'> 139137685289424 3
navigating children of <class 'ir.StatList'> 139137685288896 1
Cannot lower 139137685288848 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685288896 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289232 1
Cannot lower 139137685149248 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289232 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289184 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289424 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289808 3
navigating children of <class 'ir.StatList'> 139137685148816 1
Cannot lower 139137685148864 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685148816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289520 1
Cannot lower 139137685149008 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289616 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289808 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137685290096
Lowering <class 'ir.BinExpr'> 139137685148528
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685148960
StatList : new 139137685290672
Lowering <class 'ir.ArrayElement'> 139137685148960
navigating children of <class 'ir.ArrayElement'> 139137685148960 1
navigating children of <class 'ir.StatList'> 139137685290000 3
navigating children of <class 'ir.StatList'> 139137685289424 3
navigating children of <class 'ir.StatList'> 139137685288896 1
Cannot lower 139137685288848 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685288896 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289232 1
Cannot lower 139137685149248 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289232 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289184 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289424 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289808 3
navigating children of <class 'ir.StatList'> 139137685148816 1
Cannot lower 139137685148864 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685148816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289520 1
Cannot lower 139137685149008 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289616 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289808 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289952 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685290000 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685290096 3
navigating children of <class 'ir.StatList'> 139137685289424 3
navigating children of <class 'ir.StatList'> 139137685288896 1
Cannot lower 139137685288848 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685288896 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289232 1
Cannot lower 139137685149248 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289232 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289184 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289424 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289808 3
navigating children of <class 'ir.StatList'> 139137685148816 1
Cannot lower 139137685148864 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137685148816 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137685289520 1
Cannot lower 139137685149008 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137685289520 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685289616 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685289808 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137685288944 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137685290096 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685148960
StatList : new 139137685237920
Lowering <class 'ir.ArrayElement'> 139137685148960
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685148000
StatList : new 139137685238064
Lowering <class 'ir.PrintStat'> 139137685148000
navigating children of <class 'ir.BinExpr'> 139137685150208 3
StatList : new 139137685238304
Lowering <class 'ir.Var'> 139137685148384
StatList : new 139137685238496
Lowering <class 'ir.Const'> 139137685150112
StatList : new 139137685238688
Lowering <class 'ir.BinExpr'> 139137685150208
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685150304
StatList : new 139137685150208
Lowering <class 'ir.AssignStat'> 139137685150304
navigating children of <class 'ir.BinExpr'> 139137685150544 3
StatList : new 139137685238832
Lowering <class 'ir.Var'> 139137685150352
StatList : new 139137685238976
Lowering <class 'ir.Const'> 139137685150448
StatList : new 139137685239168
Lowering <class 'ir.BinExpr'> 139137685150544
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685150640
StatList : new 139137685150544
Lowering <class 'ir.AssignStat'> 139137685150640
Cannot lower 139137685148144 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685150688
navigating children of <class 'ir.BinExpr'> 139137685147904 3
StatList : new 139137685239312
Lowering <class 'ir.Var'> 139137685348560
StatList : new 139137685239456
Lowering <class 'ir.Const'> 139137685147712
StatList : new 139137685239648
Lowering <class 'ir.BinExpr'> 139137685147904
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685150688
StatList : new 139137685239888
Lowering <class 'ir.WhileStat'> 139137685150688
Cannot lower 139137685348656 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.WhileStat'> 139137685150736
navigating children of <class 'ir.BinExpr'> 139137685348752 3
StatList : new 139137685240080
Lowering <class 'ir.Var'> 139137685357664
StatList : new 139137685240176
Lowering <class 'ir.Const'> 139137685348944
StatList : new 139137685240368
Lowering <class 'ir.BinExpr'> 139137685348752
successfully navigated attr  cond  of <class 'ir.WhileStat'> 139137685150736
StatList : new 139137685240608
Lowering <class 'ir.WhileStat'> 139137685150736
navigating children of <class 'ir.StatList'> 139137685151216 1
navigating children of <class 'ir.PrintStat'> 139137685151696 1
StatList : new 139137685240800
Lowering <class 'ir.Var'> 139137685151360
StatList : new 139137685240992
Lowering <class 'ir.Var'> 139137685151360
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685151696
StatList : new 139137685241136
Lowering <class 'ir.PrintStat'> 139137685151696
Cannot lower 139137685151216 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685610256
navigating children of <class 'ir.BinExpr'> 139137685151072 3
StatList : new 139137685241328
Lowering <class 'ir.Var'> 139137685151552
StatList : new 139137685241424
Lowering <class 'ir.Const'> 139137685151024
StatList : new 139137685241616
Lowering <class 'ir.BinExpr'> 139137685151072
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685610256
navigating children of <class 'ir.BinExpr'> 139137685610112 3
StatList : new 139137685150928
Lowering <class 'ir.Var'> 139137685151168
StatList : new 139137685241808
Lowering <class 'ir.Const'> 139137685610016
StatList : new 139137685233872
Lowering <class 'ir.BinExpr'> 139137685610112
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685610208
StatList : new 139137685610112
Lowering <class 'ir.AssignStat'> 139137685610208
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685610256
StatList : new 139137685234160
Lowering ForStat 139137685610256 into StatList
StatList : new 139137685234352
Lowering <class 'ir.ForStat'> 139137685610256
StatList : new 139137685234256
Lowering <class 'ir.Const'> 139137685610304
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685610400
StatList : new 139137685610304
Lowering <class 'ir.AssignStat'> 139137685610400
navigating children of <class 'ir.PrintStat'> 139137685609872 1
StatList : new 139137685234640
Lowering <class 'ir.Const'> 139137685359296
StatList : new 139137685234832
Lowering <class 'ir.Const'> 139137685359296
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685609872
StatList : new 139137685234976
Lowering <class 'ir.PrintStat'> 139137685609872
navigating children of <class 'ir.StatList'> 139137685609440 1
navigating children of <class 'ir.PrintStat'> 139137685609248 1
StatList : new 139137685235216
Lowering <class 'ir.Var'> 139137685609344
StatList : new 139137685235408
Lowering <class 'ir.Var'> 139137685609344
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685609248
StatList : new 139137685235504
Lowering <class 'ir.PrintStat'> 139137685609248
Cannot lower 139137685609440 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.BinExpr'> 139137685609008 3
StatList : new 139137685235696
Lowering <class 'ir.Var'> 139137685609104
StatList : new 139137685235792
Lowering <class 'ir.Const'> 139137685609536
StatList : new 139137685235984
Lowering <class 'ir.BinExpr'> 139137685609008
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.BinExpr'> 139137685608720 3
StatList : new 139137685608960
Lowering <class 'ir.Var'> 139137685608912
StatList : new 139137685236176
Lowering <class 'ir.Const'> 139137685608816
StatList : new 139137685236368
Lowering <class 'ir.BinExpr'> 139137685608720
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685608624
StatList : new 139137685608720
Lowering <class 'ir.AssignStat'> 139137685608624
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685608576
StatList : new 139137685236656
Lowering ForStat 139137685608576 into StatList
StatList : new 139137685236848
Lowering <class 'ir.ForStat'> 139137685608576
navigating children of <class 'ir.PrintStat'> 139137685608432 1
StatList : new 139137685236752
Lowering <class 'ir.Const'> 139137685608528
StatList : new 139137685240896
Lowering <class 'ir.Const'> 139137685608528
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685608432
StatList : new 139137685290528
Lowering <class 'ir.PrintStat'> 139137685608432
navigating children of <class 'ir.PrintStat'> 139137685608240 1
StatList : new 139137685290336
Lowering <class 'ir.Const'> 139137685608336
StatList : new 139137685290192
Lowering <class 'ir.Const'> 139137685608336
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685608240
StatList : new 139137685290000
Lowering <class 'ir.PrintStat'> 139137685608240
navigating children of <class 'ir.StatList'> 139137685607904 1
navigating children of <class 'ir.PrintStat'> 139137685607712 1
StatList : new 139137685312176
Lowering <class 'ir.Var'> 139137685607808
StatList : new 139137685312272
Lowering <class 'ir.Var'> 139137685607808
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685607712
StatList : new 139137685312128
Lowering <class 'ir.PrintStat'> 139137685607712
Cannot lower 139137685607904 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.BinExpr'> 139137685607472 3
StatList : new 139137685311744
Lowering <class 'ir.Var'> 139137685607568
StatList : new 139137685159888
Lowering <class 'ir.Const'> 139137685608000
StatList : new 139137685156336
Lowering <class 'ir.BinExpr'> 139137685607472
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.BinExpr'> 139137685607184 3
StatList : new 139137685322288
Lowering <class 'ir.Var'> 139137685607376
StatList : new 139137684889072
Lowering <class 'ir.Const'> 139137685607280
StatList : new 139137684887440
Lowering <class 'ir.BinExpr'> 139137685607184
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607088
StatList : new 139137684888592
Lowering <class 'ir.AssignStat'> 139137685607088
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685607040
StatList : new 139137685607184
Lowering ForStat 139137685607040 into StatList
StatList : new 139137685607376
Lowering <class 'ir.ForStat'> 139137685607040
navigating children of <class 'ir.PrintStat'> 139137685606896 1
StatList : new 139137685607280
Lowering <class 'ir.Const'> 139137685606992
StatList : new 139137685607568
Lowering <class 'ir.Const'> 139137685606992
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685606896
StatList : new 139137685607808
Lowering <class 'ir.PrintStat'> 139137685606896
navigating children of <class 'ir.PrintStat'> 139137685606704 1
StatList : new 139137685606944
Lowering <class 'ir.Const'> 139137685606800
StatList : new 139137685609872
Lowering <class 'ir.Const'> 139137685606800
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685606704
StatList : new 139137685148000
Lowering <class 'ir.PrintStat'> 139137685606704
navigating children of <class 'ir.StatList'> 139137685508256 2
navigating children of <class 'ir.PrintStat'> 139137685508400 1
StatList : new 139137685149584
Lowering <class 'ir.Const'> 139137685508304
StatList : new 139137685148240
Lowering <class 'ir.Const'> 139137685508304
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685508400
StatList : new 139137685235168
Lowering <class 'ir.PrintStat'> 139137685508400
navigating children of <class 'ir.PrintStat'> 139137685508592 1
StatList : new 139137685234592
Lowering <class 'ir.Var'> 139137685508496
StatList : new 139137685234736
Lowering <class 'ir.Var'> 139137685508496
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685508592
StatList : new 139137685236944
Lowering <class 'ir.PrintStat'> 139137685508592
Cannot lower 139137685508256 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.BinExpr'> 139137685508832 3
StatList : new 139137685237232
Lowering <class 'ir.Var'> 139137685508736
StatList : new 139137685237328
Lowering <class 'ir.Const'> 139137685606464
StatList : new 139137685237520
Lowering <class 'ir.BinExpr'> 139137685508832
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.BinExpr'> 139137685509168 3
StatList : new 139137685508880
Lowering <class 'ir.Var'> 139137685508976
StatList : new 139137685237712
Lowering <class 'ir.Const'> 139137685509072
StatList : new 139137685205200
Lowering <class 'ir.BinExpr'> 139137685509168
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685509264
StatList : new 139137685509168
Lowering <class 'ir.AssignStat'> 139137685509264
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685509312
StatList : new 139137685205488
Lowering ForStat 139137685509312 into StatList
StatList : new 139137685205680
Lowering <class 'ir.ForStat'> 139137685509312
navigating children of <class 'ir.PrintStat'> 139137685509456 1
StatList : new 139137685205584
Lowering <class 'ir.Const'> 139137685509360
StatList : new 139137685205920
Lowering <class 'ir.Const'> 139137685509360
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685509456
StatList : new 139137685206064
Lowering <class 'ir.PrintStat'> 139137685509456
navigating children of <class 'ir.PrintStat'> 139137685509648 1
StatList : new 139137685206304
Lowering <class 'ir.Const'> 139137685509552
StatList : new 139137685206448
Lowering <class 'ir.Const'> 139137685509552
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685509648
StatList : new 139137685206544
Lowering <class 'ir.PrintStat'> 139137685509648
navigating children of <class 'ir.StatList'> 139137685510032 1
navigating children of <class 'ir.PrintStat'> 139137685512096 1
StatList : new 139137685206784
Lowering <class 'ir.Var'> 139137685510128
StatList : new 139137685206976
Lowering <class 'ir.Var'> 139137685510128
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685512096
StatList : new 139137685207072
Lowering <class 'ir.PrintStat'> 139137685512096
Cannot lower 139137685510032 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.BinExpr'> 139137685511856 3
StatList : new 139137685207264
Lowering <class 'ir.Var'> 139137685511952
StatList : new 139137685207360
Lowering <class 'ir.Const'> 139137685509936
StatList : new 139137685207552
Lowering <class 'ir.BinExpr'> 139137685511856
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.BinExpr'> 139137685511568 3
StatList : new 139137685511808
Lowering <class 'ir.Var'> 139137685511760
StatList : new 139137685207744
Lowering <class 'ir.Const'> 139137685511664
StatList : new 139137685207936
Lowering <class 'ir.BinExpr'> 139137685511568
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685511472
StatList : new 139137685511568
Lowering <class 'ir.AssignStat'> 139137685511472
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685511424
StatList : new 139137685208224
Lowering ForStat 139137685511424 into StatList
StatList : new 139137685208416
Lowering <class 'ir.ForStat'> 139137685511424
navigating children of <class 'ir.PrintStat'> 139137685511280 1
StatList : new 139137685208320
Lowering <class 'ir.Const'> 139137685511376
StatList : new 139137685208656
Lowering <class 'ir.Const'> 139137685511376
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685511280
StatList : new 139137685208800
Lowering <class 'ir.PrintStat'> 139137685511280
navigating children of <class 'ir.PrintStat'> 139137685511088 1
StatList : new 139137685209040
Lowering <class 'ir.Const'> 139137685511184
StatList : new 139137685192816
Lowering <class 'ir.Const'> 139137685511184
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685511088
StatList : new 139137685192960
Lowering <class 'ir.PrintStat'> 139137685511088
navigating children of <class 'ir.StatList'> 139137685510752 1
navigating children of <class 'ir.PrintStat'> 139137685510560 1
StatList : new 139137685193200
Lowering <class 'ir.Var'> 139137685510656
StatList : new 139137685193392
Lowering <class 'ir.Var'> 139137685510656
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685510560
StatList : new 139137685193488
Lowering <class 'ir.PrintStat'> 139137685510560
Cannot lower 139137685510752 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.BinExpr'> 139137685510320 3
StatList : new 139137685193680
Lowering <class 'ir.Var'> 139137685510416
StatList : new 139137685193776
Lowering <class 'ir.Const'> 139137685510848
StatList : new 139137685193968
Lowering <class 'ir.BinExpr'> 139137685510320
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.BinExpr'> 139137685418336 3
StatList : new 139137685510272
Lowering <class 'ir.Var'> 139137685510224
StatList : new 139137685194160
Lowering <class 'ir.Const'> 139137685418144
StatList : new 139137685194352
Lowering <class 'ir.BinExpr'> 139137685418336
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685418240
StatList : new 139137685418336
Lowering <class 'ir.AssignStat'> 139137685418240
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685418192
StatList : new 139137685194640
Lowering ForStat 139137685418192 into StatList
StatList : new 139137685194832
Lowering <class 'ir.ForStat'> 139137685418192
navigating children of <class 'ir.PrintStat'> 139137685418432 1
StatList : new 139137685194736
Lowering <class 'ir.Const'> 139137685418096
StatList : new 139137685195072
Lowering <class 'ir.Const'> 139137685418096
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685418432
StatList : new 139137685195216
Lowering <class 'ir.PrintStat'> 139137685418432
navigating children of <class 'ir.PrintStat'> 139137685418624 1
StatList : new 139137685195456
Lowering <class 'ir.Const'> 139137685418528
StatList : new 139137685195600
Lowering <class 'ir.Const'> 139137685418528
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685418624
StatList : new 139137685195696
Lowering <class 'ir.PrintStat'> 139137685418624
navigating children of <class 'ir.StatList'> 139137685419008 1
navigating children of <class 'ir.PrintStat'> 139137685419152 1
StatList : new 139137685195936
Lowering <class 'ir.Var'> 139137685418864
StatList : new 139137685196128
Lowering <class 'ir.Var'> 139137685418864
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685419152
StatList : new 139137685196224
Lowering <class 'ir.PrintStat'> 139137685419152
Cannot lower 139137685419008 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.BinExpr'> 139137685419344 3
StatList : new 139137685196416
Lowering <class 'ir.Var'> 139137685419440
StatList : new 139137685196512
Lowering <class 'ir.Const'> 139137685418960
StatList : new 139137685196704
Lowering <class 'ir.BinExpr'> 139137685419344
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.BinExpr'> 139137685419872 3
StatList : new 139137685419296
Lowering <class 'ir.Var'> 139137685419488
StatList : new 139137684873376
Lowering <class 'ir.Const'> 139137685419680
StatList : new 139137684873568
Lowering <class 'ir.BinExpr'> 139137685419872
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419968
StatList : new 139137685419872
Lowering <class 'ir.AssignStat'> 139137685419968
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685420016
StatList : new 139137684873856
Lowering ForStat 139137685420016 into StatList
StatList : new 139137684874048
Lowering <class 'ir.ForStat'> 139137685420016
navigating children of <class 'ir.PrintStat'> 139137685419632 1
StatList : new 139137684873952
Lowering <class 'ir.Const'> 139137685419776
StatList : new 139137684874288
Lowering <class 'ir.Const'> 139137685419776
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685419632
StatList : new 139137684874432
Lowering <class 'ir.PrintStat'> 139137685419632
StatList : new 139137684874624
Lowering <class 'ir.Const'> 139137685420064
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685420160
StatList : new 139137685420064
Lowering <class 'ir.AssignStat'> 139137685420160
navigating children of <class 'ir.PrintStat'> 139137685420256 1
StatList : new 139137684874816
Lowering <class 'ir.Const'> 139137685359968
StatList : new 139137684875008
Lowering <class 'ir.Const'> 139137685359968
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685420256
StatList : new 139137684875104
Lowering <class 'ir.PrintStat'> 139137685420256
navigating children of <class 'ir.StatList'> 139137685420592 3
navigating children of <class 'ir.BinExpr'> 139137685420976 3
StatList : new 139137684875344
Lowering <class 'ir.Var'> 139137685420688
StatList : new 139137684875488
Lowering <class 'ir.Var'> 139137685420784
StatList : new 139137684875680
Lowering <class 'ir.BinExpr'> 139137685420976
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421168
StatList : new 139137685420976
Lowering <class 'ir.AssignStat'> 139137685421168
navigating children of <class 'ir.PrintStat'> 139137685421312 1
StatList : new 139137684875824
Lowering <class 'ir.Var'> 139137685421216
StatList : new 139137684876064
Lowering <class 'ir.Var'> 139137685421216
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685421312
StatList : new 139137684876160
Lowering <class 'ir.PrintStat'> 139137685421312
navigating children of <class 'ir.PrintStat'> 139137685420880 1
StatList : new 139137684876400
Lowering <class 'ir.Var'> 139137685421024
StatList : new 139137684876544
Lowering <class 'ir.Var'> 139137685421024
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685420880
StatList : new 139137684876640
Lowering <class 'ir.PrintStat'> 139137685420880
Cannot lower 139137685420592 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.BinExpr'> 139137685421936 3
StatList : new 139137684876832
Lowering <class 'ir.Var'> 139137685422032
StatList : new 139137684876928
Lowering <class 'ir.Const'> 139137685420496
StatList : new 139137684877120
Lowering <class 'ir.BinExpr'> 139137685421936
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.BinExpr'> 139137685421648 3
StatList : new 139137685421888
Lowering <class 'ir.Var'> 139137685421840
StatList : new 139137684877264
Lowering <class 'ir.Const'> 139137685421744
StatList : new 139137684889856
Lowering <class 'ir.BinExpr'> 139137685421648
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421552
StatList : new 139137685421648
Lowering <class 'ir.AssignStat'> 139137685421552
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685421504
StatList : new 139137684890144
Lowering ForStat 139137685421504 into StatList
StatList : new 139137684890336
Lowering <class 'ir.ForStat'> 139137685421504
navigating children of <class 'ir.PrintStat'> 139137685846768 1
StatList : new 139137684890240
Lowering <class 'ir.Var'> 139137685846336
StatList : new 139137684890576
Lowering <class 'ir.Var'> 139137685846336
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685846768
StatList : new 139137684890720
Lowering <class 'ir.PrintStat'> 139137685846768
navigating children of <class 'ir.PrintStat'> 139137685847344 1
StatList : new 139137684890960
Lowering <class 'ir.Const'> 139137685847248
StatList : new 139137684891104
Lowering <class 'ir.Const'> 139137685847248
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685847344
StatList : new 139137684891200
Lowering <class 'ir.PrintStat'> 139137685847344
StatList : new 139137684891392
Lowering <class 'ir.Const'> 139137685847440
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685848016
StatList : new 139137685847440
Lowering <class 'ir.AssignStat'> 139137685848016
navigating children of <class 'ir.PrintStat'> 139137685847872 1
StatList : new 139137684891584
Lowering <class 'ir.Const'> 139137685847968
StatList : new 139137684891776
Lowering <class 'ir.Const'> 139137685847968
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685847872
StatList : new 139137684891872
Lowering <class 'ir.PrintStat'> 139137685847872
navigating children of <class 'ir.StatList'> 139137685847536 2
navigating children of <class 'ir.BinExpr'> 139137685846960 3
StatList : new 139137684892112
Lowering <class 'ir.Var'> 139137685847152
StatList : new 139137684892256
Lowering <class 'ir.Var'> 139137685847056
StatList : new 139137684892448
Lowering <class 'ir.BinExpr'> 139137685846960
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846864
StatList : new 139137685846960
Lowering <class 'ir.AssignStat'> 139137685846864
navigating children of <class 'ir.PrintStat'> 139137685846576 1
StatList : new 139137684892592
Lowering <class 'ir.Var'> 139137685846672
StatList : new 139137684892832
Lowering <class 'ir.Var'> 139137685846672
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685846576
StatList : new 139137684892928
Lowering <class 'ir.PrintStat'> 139137685846576
Cannot lower 139137685847536 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.BinExpr'> 139137685846288 3
StatList : new 139137684893120
Lowering <class 'ir.Var'> 139137685846432
StatList : new 139137684893216
Lowering <class 'ir.Const'> 139137685847632
StatList : new 139137684893408
Lowering <class 'ir.BinExpr'> 139137685846288
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.BinExpr'> 139137685336368 3
StatList : new 139137685847632
Lowering <class 'ir.Var'> 139137685336176
StatList : new 139137684893600
Lowering <class 'ir.Const'> 139137685336272
StatList : new 139137684926624
Lowering <class 'ir.BinExpr'> 139137685336368
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685336464
StatList : new 139137685336368
Lowering <class 'ir.AssignStat'> 139137685336464
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685336512
StatList : new 139137684926912
Lowering ForStat 139137685336512 into StatList
StatList : new 139137684927104
Lowering <class 'ir.ForStat'> 139137685336512
navigating children of <class 'ir.PrintStat'> 139137685336656 1
StatList : new 139137684927008
Lowering <class 'ir.Var'> 139137685336560
StatList : new 139137684927344
Lowering <class 'ir.Var'> 139137685336560
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685336656
StatList : new 139137684927488
Lowering <class 'ir.PrintStat'> 139137685336656
navigating children of <class 'ir.PrintStat'> 139137685336848 1
StatList : new 139137684927728
Lowering <class 'ir.Const'> 139137685336752
StatList : new 139137684927872
Lowering <class 'ir.Const'> 139137685336752
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685336848
StatList : new 139137684927968
Lowering <class 'ir.PrintStat'> 139137685336848
navigating children of <class 'ir.PrintStat'> 139137685337040 1
StatList : new 139137684928208
Lowering <class 'ir.Const'> 139137685336944
StatList : new 139137684928352
Lowering <class 'ir.Const'> 139137685336944
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685337040
StatList : new 139137684928448
Lowering <class 'ir.PrintStat'> 139137685337040
StatList : new 139137684928640
Lowering <class 'ir.Const'> 139137685337136
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685337232
StatList : new 139137685337136
Lowering <class 'ir.AssignStat'> 139137685337232
navigating children of <class 'ir.StatList'> 139137685337472 1
navigating children of <class 'ir.BinExpr'> 139137685337808 3
StatList : new 139137684928832
Lowering <class 'ir.Var'> 139137685337568
StatList : new 139137684929072
Lowering <class 'ir.Const'> 139137685337616
StatList : new 139137684929264
Lowering <class 'ir.BinExpr'> 139137685337808
successfully navigated attr  offset  of <class 'ir.AssignStat'> 139137685338432
navigating children of <class 'ir.BinExpr'> 139137685338336 3
navigating children of <class 'ir.ArrayElement'> 139137685338000 1
navigating children of <class 'ir.BinExpr'> 139137685338096 3
StatList : new 139137684929408
Lowering <class 'ir.Var'> 139137685337712
StatList : new 139137684929552
Lowering <class 'ir.Const'> 139137685337904
StatList : new 139137684929744
Lowering <class 'ir.BinExpr'> 139137685338096
navigating children of <class 'ir.BinExpr'> 139137685338096 3
navigating children of <class 'ir.StatList'> 139137684929408 1
Cannot lower 139137684929360 <class 'ir.LoadStat'> 'LoadStat' object has no attribute 'lower'
Cannot lower 139137684929408 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684929552 1
Cannot lower 139137685337952 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684929552 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137684929936
Lowering <class 'ir.BinExpr'> 139137685338096
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685338000
StatList : new 139137684930464
Lowering <class 'ir.ArrayElement'> 139137685338000
StatList : new 139137684938816
Lowering <class 'ir.Var'> 139137685338192
StatList : new 139137684939056
Lowering <class 'ir.BinExpr'> 139137685338336
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685338432
StatList : new 139137684939488
Lowering <class 'ir.AssignStat'> 139137685338432
Cannot lower 139137685337472 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.BinExpr'> 139137685338576 3
StatList : new 139137684939728
Lowering <class 'ir.Var'> 139137685338480
StatList : new 139137684939872
Lowering <class 'ir.Const'> 139137685337376
StatList : new 139137684940064
Lowering <class 'ir.BinExpr'> 139137685338576
successfully navigated attr  cond  of <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.BinExpr'> 139137685338864 3
StatList : new 139137685338624
Lowering <class 'ir.Var'> 139137685338672
StatList : new 139137684940256
Lowering <class 'ir.Const'> 139137685338768
StatList : new 139137684940448
Lowering <class 'ir.BinExpr'> 139137685338864
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685338960
StatList : new 139137685338864
Lowering <class 'ir.AssignStat'> 139137685338960
successfully navigated attr  step  of <class 'ir.ForStat'> 139137685339008
StatList : new 139137684940736
Lowering ForStat 139137685339008 into StatList
StatList : new 139137684940928
Lowering <class 'ir.ForStat'> 139137685339008
navigating children of <class 'ir.StatList'> 139137685339344 4
navigating children of <class 'ir.PrintStat'> 139137685339536 1
StatList : new 139137684940832
Lowering <class 'ir.Const'> 139137685339440
StatList : new 139137684941216
Lowering <class 'ir.Const'> 139137685339440
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685339536
StatList : new 139137684941360
Lowering <class 'ir.PrintStat'> 139137685339536
navigating children of <class 'ir.PrintStat'> 139137685339968 1
navigating children of <class 'ir.ArrayElement'> 139137685339776 1
navigating children of <class 'ir.BinExpr'> 139137685339872 3
StatList : new 139137684941600
Lowering <class 'ir.Const'> 139137685339632
StatList : new 139137684941792
Lowering <class 'ir.Const'> 139137685339680
StatList : new 139137684941984
Lowering <class 'ir.BinExpr'> 139137685339872
navigating children of <class 'ir.BinExpr'> 139137685339872 3
navigating children of <class 'ir.StatList'> 139137684941600 1
Cannot lower 139137684941552 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684941792 1
Cannot lower 139137685339728 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941792 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137684942176
Lowering <class 'ir.BinExpr'> 139137685339872
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685339776
StatList : new 139137684942704
Lowering <class 'ir.ArrayElement'> 139137685339776
navigating children of <class 'ir.ArrayElement'> 139137685339776 1
navigating children of <class 'ir.StatList'> 139137684941984 3
navigating children of <class 'ir.StatList'> 139137684941600 1
Cannot lower 139137684941552 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684941792 1
Cannot lower 139137685339728 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941792 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684941744 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684941984 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684942176 3
navigating children of <class 'ir.StatList'> 139137684941600 1
Cannot lower 139137684941552 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941600 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684941792 1
Cannot lower 139137685339728 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684941792 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684942128 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684942176 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685339776
StatList : new 139137684963680
Lowering <class 'ir.ArrayElement'> 139137685339776
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685339968
StatList : new 139137684963824
Lowering <class 'ir.PrintStat'> 139137685339968
navigating children of <class 'ir.PrintStat'> 139137685320032 1
navigating children of <class 'ir.ArrayElement'> 139137685319840 1
navigating children of <class 'ir.BinExpr'> 139137685319936 3
StatList : new 139137684964064
Lowering <class 'ir.Const'> 139137685340112
StatList : new 139137684964352
Lowering <class 'ir.Const'> 139137685319744
StatList : new 139137684964544
Lowering <class 'ir.BinExpr'> 139137685319936
navigating children of <class 'ir.BinExpr'> 139137685319936 3
navigating children of <class 'ir.StatList'> 139137684964064 1
Cannot lower 139137684964016 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964064 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684964352 1
Cannot lower 139137685319792 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964352 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137684964736
Lowering <class 'ir.BinExpr'> 139137685319936
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685319840
StatList : new 139137684965264
Lowering <class 'ir.ArrayElement'> 139137685319840
navigating children of <class 'ir.ArrayElement'> 139137685319840 1
navigating children of <class 'ir.StatList'> 139137684964544 3
navigating children of <class 'ir.StatList'> 139137684964064 1
Cannot lower 139137684964016 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964064 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684964352 1
Cannot lower 139137685319792 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964352 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684964304 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684964544 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684964736 3
navigating children of <class 'ir.StatList'> 139137684964064 1
Cannot lower 139137684964016 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964064 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684964352 1
Cannot lower 139137685319792 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684964352 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684964688 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684964736 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685319840
StatList : new 139137684965696
Lowering <class 'ir.ArrayElement'> 139137685319840
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320032
StatList : new 139137684965936
Lowering <class 'ir.PrintStat'> 139137685320032
navigating children of <class 'ir.PrintStat'> 139137685320512 1
navigating children of <class 'ir.ArrayElement'> 139137685320320 1
navigating children of <class 'ir.BinExpr'> 139137685320416 3
StatList : new 139137684966128
Lowering <class 'ir.Const'> 139137685320176
StatList : new 139137684966416
Lowering <class 'ir.Const'> 139137685320224
StatList : new 139137684966608
Lowering <class 'ir.BinExpr'> 139137685320416
navigating children of <class 'ir.BinExpr'> 139137685320416 3
navigating children of <class 'ir.StatList'> 139137684966128 1
Cannot lower 139137684966080 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966128 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684966416 1
Cannot lower 139137685320272 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
StatList : new 139137684966800
Lowering <class 'ir.BinExpr'> 139137685320416
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685320320
StatList : new 139137684967328
Lowering <class 'ir.ArrayElement'> 139137685320320
navigating children of <class 'ir.ArrayElement'> 139137685320320 1
navigating children of <class 'ir.StatList'> 139137684966608 3
navigating children of <class 'ir.StatList'> 139137684966128 1
Cannot lower 139137684966080 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966128 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684966416 1
Cannot lower 139137685320272 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684966368 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684966608 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684966800 3
navigating children of <class 'ir.StatList'> 139137684966128 1
Cannot lower 139137684966080 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966128 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
navigating children of <class 'ir.StatList'> 139137684966416 1
Cannot lower 139137685320272 <class 'ir.LoadImmStat'> 'LoadImmStat' object has no attribute 'lower'
Cannot lower 139137684966416 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
Cannot lower 139137684966752 <class 'ir.BinStat'> 'BinStat' object has no attribute 'lower'
Cannot lower 139137684966800 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  offset  of <class 'ir.ArrayElement'> 139137685320320
StatList : new 139137684976016
Lowering <class 'ir.ArrayElement'> 139137685320320
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320512
StatList : new 139137684976160
Lowering <class 'ir.PrintStat'> 139137685320512
Cannot lower 139137685339344 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  thenpart  of <class 'ir.IfStat'> 139137685320656
navigating children of <class 'ir.BinExpr'> 139137685339248 3
StatList : new 139137684976400
Lowering <class 'ir.Const'> 139137685339056
StatList : new 139137684976544
Lowering <class 'ir.Const'> 139137685339152
StatList : new 139137684976736
Lowering <class 'ir.BinExpr'> 139137685339248
successfully navigated attr  cond  of <class 'ir.IfStat'> 139137685320656
StatList : new 139137684976832
Lowering <class 'ir.IfStat'> 139137685320656
navigating children of <class 'ir.PrintStat'> 139137685320800 1
StatList : new 139137684977024
Lowering <class 'ir.Const'> 139137685320704
StatList : new 139137684977216
Lowering <class 'ir.Const'> 139137685320704
successfully navigated attr  expr  of <class 'ir.PrintStat'> 139137685320800
StatList : new 139137684977312
Lowering <class 'ir.PrintStat'> 139137685320800
Cannot lower 139137684886480 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 2
StatList : new 139137684977552
Lowering <class 'ir.Const'> 139137684885952
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886048
StatList : new 139137684885952
Lowering <class 'ir.AssignStat'> 139137684886048
navigating children of <class 'ir.BinExpr'> 139137684886240 3
StatList : new 139137684977744
Lowering <class 'ir.Var'> 139137684886096
StatList : new 139137684977936
Lowering <class 'ir.Var'> 139137684885856
StatList : new 139137684978128
Lowering <class 'ir.BinExpr'> 139137684886240
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137684886336
StatList : new 139137684886240
Lowering <class 'ir.AssignStat'> 139137684886336
Cannot lower 139137684885760 <class 'ir.StatList'> 'StatList' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
Cannot lower 139137684885568 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
Cannot lower 139137685358720 <class 'ir.Block'> 'Block' object has no attribute 'lower'
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
Cannot lower 139137684886384 <class 'ir.FunctionDef'> 'FunctionDef' object has no attribute 'lower'
Cannot lower 139137686162448 <class 'ir.DefinitionList'> 'DefinitionList' object has no attribute 'lower'
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896
Cannot lower 139137685320896 <class 'ir.Block'> 'Block' object has no attribute 'lower'

--- IR Tree After Lowering ---
<class 'ir.Block'> 139137685320896 {
                                                                      <<<<<----- BUG? MISSING PARENT
	body: 	<class 'ir.StatList'> 139137684886480 {
	parent = 139137685320896
		children:
		<class 'ir.StatList'> 139137684886672 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685321088 {
			parent = 139137684886672
				children:
				<class 'ir.StatList'> 139137685321232 {
				parent = 139137685321088
					children:
					reg int t0 <- 1
				}
				reg int t1 <- minus reg int t0
			}
			global int x <- reg int t1
		}
		<class 'ir.StatList'> 139137685357520 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685321184 {
			parent = 139137685357520
				children:
				read reg int t2
			}
			global int x <- reg int t2
		}
		<class 'ir.StatList'> 139137685323296 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685323056 {
			parent = 139137685323296
				children:
				<class 'ir.StatList'> 139137685322768 {
				parent = 139137685323056
					children:
					reg int t8 <- global int x
				}
				<class 'ir.StatList'> 139137685322864 {
				parent = 139137685323056
					children:
					reg int t9 <- 100
				}
				reg int32_t t10 <- reg int t8 gtr reg int t9
			}
			branch on reg int32_t t10 to auto label label2
			<class 'ir.StatList'> 139137684886960 {
			parent = 139137685323296
				children:
				<class 'ir.StatList'> 139137685322576 {
				parent = 139137684886960
					children:
					<class 'ir.StatList'> 139137685322480 {
					parent = 139137685322576
						children:
						reg int t7 <- global int x
					}
					print reg int t7
				}
			}
			branch  to auto label label1
			label2: <class 'ir.StatList'> 139137684887392 {
			parent = 139137685323296
				children:
				<class 'ir.StatList'> 139137685322000 {
				parent = 139137684887392
					children:
					<class 'ir.StatList'> 139137685321568 {
					parent = 139137685322000
						children:
						<class 'ir.StatList'> 139137685321664 {
						parent = 139137685321568
							children:
							reg int t3 <- global int x
						}
						reg int t5 <- minus reg int t3
					}
					print reg int t5
				}
			}
			label1: <class 'ir.EmptyStat'> 139137684887104 {
			parent = 139137685323296
			}
		}
		<class 'ir.StatList'> 139137684887920 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685323488 {
			parent = 139137684887920
				children:
				reg int t11 <- 1
			}
			global int x <- reg int t11
		}
		<class 'ir.StatList'> 139137685157392 {
		parent = 139137684886480
			children:
			label3: <class 'ir.StatList'> 139137685157152 {
			parent = 139137685157392
				children:
				<class 'ir.StatList'> 139137685156864 {
				parent = 139137685157152
					children:
					reg int t17 <- global int x
				}
				<class 'ir.StatList'> 139137685156960 {
				parent = 139137685157152
					children:
					reg int t18 <- 10
				}
				reg int32_t t19 <- reg int t17 leq reg int t18
			}
			branch on not reg int32_t t19 to auto label label4
			<class 'ir.StatList'> 139137684888352 {
			parent = 139137685157392
				children:
				call  to auto function square
				<class 'ir.StatList'> 139137684888832 {
				parent = 139137684888352
					children:
					<class 'ir.StatList'> 139137685156240 {
					parent = 139137684888832
						children:
						<class 'ir.StatList'> 139137685155904 {
						parent = 139137685156240
							children:
							reg int t12 <- global int x
						}
						<class 'ir.StatList'> 139137685156048 {
						parent = 139137685156240
							children:
							reg int t13 <- 1
						}
						reg int32_t t14 <- reg int t12 plus reg int t13
					}
					global int x <- reg int32_t t14
				}
				<class 'ir.StatList'> 139137685156672 {
				parent = 139137684888352
					children:
					<class 'ir.StatList'> 139137685156576 {
					parent = 139137685156672
						children:
						reg int t16 <- global int squ
					}
					print reg int t16
				}
			}
			branch  to auto label label3
			label4: <class 'ir.EmptyStat'> 139137684888304 {
			parent = 139137685157392
			}
		}
		<class 'ir.StatList'> 139137684889216 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685157584 {
			parent = 139137684889216
				children:
				reg int t20 <- 101
			}
			global int x <- reg int t20
		}
		<class 'ir.StatList'> 139137685314096 {
		parent = 139137684886480
			children:
			label5: <class 'ir.StatList'> 139137685313856 {
			parent = 139137685314096
				children:
				<class 'ir.StatList'> 139137685313520 {
				parent = 139137685313856
					children:
					reg int t44 <- global int x
				}
				<class 'ir.StatList'> 139137685313664 {
				parent = 139137685313856
					children:
					reg int t45 <- 105
				}
				reg int32_t t46 <- reg int t44 leq reg int t45
			}
			branch on not reg int32_t t46 to auto label label6
			<class 'ir.StatList'> 139137685351152 {
			parent = 139137685314096
				children:
				<class 'ir.StatList'> 139137685158880 {
				parent = 139137685351152
					children:
					<class 'ir.StatList'> 139137685351056 {
					parent = 139137685158880
						children:
						reg int t26 <- global int x
					}
					<class 'ir.StatList'> 139137685158448 {
					parent = 139137685158880
						children:
						<class 'ir.StatList'> 139137685158208 {
						parent = 139137685158448
							children:
							<class 'ir.StatList'> 139137685157776 {
							parent = 139137685158208
								children:
								reg int t21 <- global int x
							}
							<class 'ir.StatList'> 139137685158016 {
							parent = 139137685158208
								children:
								reg int t22 <- 100
							}
							reg int32_t t23 <- reg int t21 minus reg int t22
						}
						<class 'ir.StatList'> 139137685351200 {
						parent = 139137685158448
							children:
							reg int t24 <- 1
						}
						reg int32_t t25 <- reg int32_t t23 times reg int t24
					}
					reg &char t27 <- &(global char[5] arr)
					reg &char t28 <- reg &char t27 plus reg int32_t t25
					[reg &char t28] <- reg int t26
				}
				<class 'ir.StatList'> 139137685312800 {
				parent = 139137685351152
					children:
					<class 'ir.StatList'> 139137685312656 {
					parent = 139137685312800
						children:
						<class 'ir.StatList'> 139137685311696 {
						parent = 139137685312656
							children:
							<class 'ir.StatList'> 139137685159648 {
							parent = 139137685311696
								children:
								<class 'ir.StatList'> 139137685159120 {
								parent = 139137685159648
									children:
									reg int t29 <- global int x
								}
								<class 'ir.StatList'> 139137685159456 {
								parent = 139137685159648
									children:
									reg int t30 <- 100
								}
								reg int32_t t31 <- reg int t29 minus reg int t30
							}
							<class 'ir.StatList'> 139137685351968 {
							parent = 139137685311696
								children:
								reg int t32 <- 1
							}
							reg int32_t t34 <- reg int32_t t31 times reg int t32
						}
						reg &char t39 <- &(global char[5] arr)
						reg &char t40 <- reg &char t39 plus reg int32_t t34
						reg char t38 <- [reg &char t40]
					}
					print reg char t38
				}
				<class 'ir.StatList'> 139137685350048 {
				parent = 139137685351152
					children:
					<class 'ir.StatList'> 139137685313424 {
					parent = 139137685350048
						children:
						<class 'ir.StatList'> 139137685313040 {
						parent = 139137685313424
							children:
							reg int t41 <- global int x
						}
						<class 'ir.StatList'> 139137685313232 {
						parent = 139137685313424
							children:
							reg int t42 <- 1
						}
						reg int32_t t43 <- reg int t41 plus reg int t42
					}
					global int x <- reg int32_t t43
				}
			}
			branch  to auto label label5
			label6: <class 'ir.EmptyStat'> 139137684889456 {
			parent = 139137685314096
			}
		}
		<class 'ir.StatList'> 139137685349760 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685314288 {
			parent = 139137685349760
				children:
				reg int t47 <- 1
			}
			global int x <- reg int t47
		}
		<class 'ir.StatList'> 139137685349616 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685314480 {
			parent = 139137685349616
				children:
				reg int t48 <- 1
			}
			global int y <- reg int t48
		}
		<class 'ir.StatList'> 139137685240608 {
		parent = 139137684886480
			children:
			label9: <class 'ir.StatList'> 139137685240368 {
			parent = 139137685240608
				children:
				<class 'ir.StatList'> 139137685240080 {
				parent = 139137685240368
					children:
					reg int t88 <- global int x
				}
				<class 'ir.StatList'> 139137685240176 {
				parent = 139137685240368
					children:
					reg int t89 <- 5
				}
				reg int32_t t90 <- reg int t88 leq reg int t89
			}
			branch on not reg int32_t t90 to auto label label10
			<class 'ir.StatList'> 139137685348656 {
			parent = 139137685240608
				children:
				<class 'ir.StatList'> 139137685239888 {
				parent = 139137685348656
					children:
					label7: <class 'ir.StatList'> 139137685239648 {
					parent = 139137685239888
						children:
						<class 'ir.StatList'> 139137685239312 {
						parent = 139137685239648
							children:
							reg int t85 <- global int y
						}
						<class 'ir.StatList'> 139137685239456 {
						parent = 139137685239648
							children:
							reg int t86 <- 5
						}
						reg int32_t t87 <- reg int t85 leq reg int t86
					}
					branch on not reg int32_t t87 to auto label label8
					<class 'ir.StatList'> 139137685148144 {
					parent = 139137685239888
						children:
						<class 'ir.StatList'> 139137685288656 {
						parent = 139137685148144
							children:
							<class 'ir.StatList'> 139137685288224 {
							parent = 139137685288656
								children:
								<class 'ir.StatList'> 139137685287696 {
								parent = 139137685288224
									children:
									<class 'ir.StatList'> 139137685287168 {
									parent = 139137685287696
										children:
										reg int t56 <- global int x
									}
									<class 'ir.StatList'> 139137685287312 {
									parent = 139137685287696
										children:
										reg int t57 <- 1
									}
									reg int32_t t59 <- reg int t56 times reg int t57
								}
								reg &char t61 <- &(global char[5] arr)
								reg &char t62 <- reg &char t61 plus reg int32_t t59
								reg char t60 <- [reg &char t62]
							}
							<class 'ir.StatList'> 139137685287120 {
							parent = 139137685288656
								children:
								<class 'ir.StatList'> 139137685315152 {
								parent = 139137685287120
									children:
									<class 'ir.StatList'> 139137685314672 {
									parent = 139137685315152
										children:
										reg int t49 <- global int x
									}
									<class 'ir.StatList'> 139137685314960 {
									parent = 139137685315152
										children:
										reg int t50 <- 10
									}
									reg int32_t t51 <- reg int t49 times reg int t50
								}
								<class 'ir.StatList'> 139137685315536 {
								parent = 139137685287120
									children:
									<class 'ir.StatList'> 139137685148432 {
									parent = 139137685315536
										children:
										reg int t52 <- global int y
									}
									<class 'ir.StatList'> 139137685315248 {
									parent = 139137685315536
										children:
										reg int t53 <- 2
									}
									reg int32_t t54 <- reg int t52 times reg int t53
								}
								reg int32_t t55 <- reg int32_t t51 plus reg int32_t t54
							}
							reg &short t63 <- &(global short[5, 5] multid)
							reg &short t64 <- reg &short t63 plus reg int32_t t55
							[reg &short t64] <- reg char t60
						}
						<class 'ir.StatList'> 139137685238064 {
						parent = 139137685148144
							children:
							<class 'ir.StatList'> 139137685237920 {
							parent = 139137685238064
								children:
								<class 'ir.StatList'> 139137685290096 {
								parent = 139137685237920
									children:
									<class 'ir.StatList'> 139137685289424 {
									parent = 139137685290096
										children:
										<class 'ir.StatList'> 139137685288896 {
										parent = 139137685289424
											children:
											reg int t65 <- global int x
										}
										<class 'ir.StatList'> 139137685289232 {
										parent = 139137685289424
											children:
											reg int t66 <- 10
										}
										reg int32_t t67 <- reg int t65 times reg int t66
									}
									<class 'ir.StatList'> 139137685289808 {
									parent = 139137685290096
										children:
										<class 'ir.StatList'> 139137685148816 {
										parent = 139137685289808
											children:
											reg int t68 <- global int y
										}
										<class 'ir.StatList'> 139137685289520 {
										parent = 139137685289808
											children:
											reg int t69 <- 2
										}
										reg int32_t t70 <- reg int t68 times reg int t69
									}
									reg int32_t t72 <- reg int32_t t67 plus reg int32_t t70
								}
								reg &short t77 <- &(global short[5, 5] multid)
								reg &short t78 <- reg &short t77 plus reg int32_t t72
								reg short t76 <- [reg &short t78]
							}
							print reg short t76
						}
						<class 'ir.StatList'> 139137685150208 {
						parent = 139137685148144
							children:
							<class 'ir.StatList'> 139137685238688 {
							parent = 139137685150208
								children:
								<class 'ir.StatList'> 139137685238304 {
								parent = 139137685238688
									children:
									reg int t79 <- global int x
								}
								<class 'ir.StatList'> 139137685238496 {
								parent = 139137685238688
									children:
									reg int t80 <- 1
								}
								reg int32_t t81 <- reg int t79 plus reg int t80
							}
							global int x <- reg int32_t t81
						}
						<class 'ir.StatList'> 139137685150544 {
						parent = 139137685148144
							children:
							<class 'ir.StatList'> 139137685239168 {
							parent = 139137685150544
								children:
								<class 'ir.StatList'> 139137685238832 {
								parent = 139137685239168
									children:
									reg int t82 <- global int y
								}
								<class 'ir.StatList'> 139137685238976 {
								parent = 139137685239168
									children:
									reg int t83 <- 1
								}
								reg int32_t t84 <- reg int t82 plus reg int t83
							}
							global int y <- reg int32_t t84
						}
					}
					branch  to auto label label7
					label8: <class 'ir.EmptyStat'> 139137685147712 {
					parent = 139137685239888
					}
				}
			}
			branch  to auto label label9
			label10: <class 'ir.EmptyStat'> 139137685348944 {
			parent = 139137685240608
			}
		}
		<class 'ir.StatList'> 139137685234352 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685151600 {
			parent = 139137685234352
				symbol: 	auto int a
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685150832 {
				parent = 139137685151600
					symbol: 	None
					value: 	10
				}
			}
			label11: <class 'ir.StatList'> 139137685241616 {
			parent = 139137685234352
				children:
				<class 'ir.StatList'> 139137685241328 {
				parent = 139137685241616
					children:
					reg int t93 <- auto int a
				}
				<class 'ir.StatList'> 139137685241424 {
				parent = 139137685241616
					children:
					reg int t94 <- 20
				}
				reg int32_t t95 <- reg int t93 leq reg int t94
			}
			branch on not reg int32_t t95 to auto label label13
			<class 'ir.StatList'> 139137685241136 {
			parent = 139137685234352
				children:
				<class 'ir.StatList'> 139137685240992 {
				parent = 139137685241136
					children:
					reg int t92 <- auto int a
				}
				print reg int t92
			}
			<class 'ir.StatList'> 139137685233872 {
			parent = 139137685234352
				children:
				<class 'ir.StatList'> 139137685150928 {
				parent = 139137685233872
					children:
					reg int t96 <- auto int a
				}
				<class 'ir.StatList'> 139137685241808 {
				parent = 139137685233872
					children:
					reg int t97 <- 1
				}
				reg int32_t t98 <- reg int t96 plus reg int t97
			}
			auto int a <- reg int32_t t98
			branch  to auto label label11
			label13: <class 'ir.EmptyStat'> 139137685234064 {
			parent = 139137685234352
			}
		}
		<class 'ir.StatList'> 139137685610304 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685234256 {
			parent = 139137685610304
				children:
				reg int t99 <- 10
			}
			global int i <- reg int t99
		}
		<class 'ir.StatList'> 139137685234976 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685234832 {
			parent = 139137685234976
				children:
				reg int t101 <- 99991
			}
			print reg int t101
		}
		<class 'ir.StatList'> 139137685236848 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685609152 {
			parent = 139137685236848
				symbol: 	auto int i
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685609728 {
				parent = 139137685609152
					symbol: 	None
					value: 	10
				}
			}
			label14: <class 'ir.StatList'> 139137685235984 {
			parent = 139137685236848
				children:
				<class 'ir.StatList'> 139137685235696 {
				parent = 139137685235984
					children:
					reg int t104 <- auto int i
				}
				<class 'ir.StatList'> 139137685235792 {
				parent = 139137685235984
					children:
					reg int t105 <- 15
				}
				reg int32_t t106 <- reg int t104 leq reg int t105
			}
			branch on not reg int32_t t106 to auto label label16
			<class 'ir.StatList'> 139137685235504 {
			parent = 139137685236848
				children:
				<class 'ir.StatList'> 139137685235408 {
				parent = 139137685235504
					children:
					reg int t103 <- global int i
				}
				print reg int t103
			}
			<class 'ir.StatList'> 139137685236368 {
			parent = 139137685236848
				children:
				<class 'ir.StatList'> 139137685608960 {
				parent = 139137685236368
					children:
					reg int t107 <- auto int i
				}
				<class 'ir.StatList'> 139137685236176 {
				parent = 139137685236368
					children:
					reg int t108 <- 1
				}
				reg int32_t t109 <- reg int t107 plus reg int t108
			}
			auto int i <- reg int32_t t109
			branch  to auto label label14
			label16: <class 'ir.EmptyStat'> 139137685236560 {
			parent = 139137685236848
			}
		}
		<class 'ir.StatList'> 139137685290528 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685240896 {
			parent = 139137685290528
				children:
				reg int t111 <- 88881
			}
			print reg int t111
		}
		<class 'ir.StatList'> 139137685290000 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685290192 {
			parent = 139137685290000
				children:
				reg int t113 <- 99992
			}
			print reg int t113
		}
		<class 'ir.StatList'> 139137685607376 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685607616 {
			parent = 139137685607376
				symbol: 	auto int j
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685608096 {
				parent = 139137685607616
					symbol: 	None
					value: 	5
				}
			}
			label17: <class 'ir.StatList'> 139137685156336 {
			parent = 139137685607376
				children:
				<class 'ir.StatList'> 139137685311744 {
				parent = 139137685156336
					children:
					reg int t116 <- auto int j
				}
				<class 'ir.StatList'> 139137685159888 {
				parent = 139137685156336
					children:
					reg int t117 <- 5
				}
				reg int32_t t118 <- reg int t116 leq reg int t117
			}
			branch on not reg int32_t t118 to auto label label19
			<class 'ir.StatList'> 139137685312128 {
			parent = 139137685607376
				children:
				<class 'ir.StatList'> 139137685312272 {
				parent = 139137685312128
					children:
					reg int t115 <- global int j
				}
				print reg int t115
			}
			<class 'ir.StatList'> 139137684887440 {
			parent = 139137685607376
				children:
				<class 'ir.StatList'> 139137685322288 {
				parent = 139137684887440
					children:
					reg int t119 <- auto int j
				}
				<class 'ir.StatList'> 139137684889072 {
				parent = 139137684887440
					children:
					reg int t120 <- 1
				}
				reg int32_t t121 <- reg int t119 plus reg int t120
			}
			auto int j <- reg int32_t t121
			branch  to auto label label17
			label19: <class 'ir.EmptyStat'> 139137685352256 {
			parent = 139137685607376
			}
		}
		<class 'ir.StatList'> 139137685607808 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685607568 {
			parent = 139137685607808
				children:
				reg int t123 <- 88882
			}
			print reg int t123
		}
		<class 'ir.StatList'> 139137685148000 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685609872 {
			parent = 139137685148000
				children:
				reg int t125 <- 99993
			}
			print reg int t125
		}
		<class 'ir.StatList'> 139137685205680 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685508688 {
			parent = 139137685205680
				symbol: 	auto int k
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685606560 {
				parent = 139137685508688
					symbol: 	None
					value: 	10
				}
			}
			label20: <class 'ir.StatList'> 139137685237520 {
			parent = 139137685205680
				children:
				<class 'ir.StatList'> 139137685237232 {
				parent = 139137685237520
					children:
					reg int t130 <- auto int k
				}
				<class 'ir.StatList'> 139137685237328 {
				parent = 139137685237520
					children:
					reg int t131 <- 5
				}
				reg int32_t t132 <- reg int t130 leq reg int t131
			}
			branch on not reg int32_t t132 to auto label label22
			<class 'ir.StatList'> 139137685235168 {
			parent = 139137685205680
				children:
				<class 'ir.StatList'> 139137685148240 {
				parent = 139137685235168
					children:
					reg int t127 <- 77777
				}
				print reg int t127
			}
			<class 'ir.StatList'> 139137685236944 {
			parent = 139137685205680
				children:
				<class 'ir.StatList'> 139137685234736 {
				parent = 139137685236944
					children:
					reg int t129 <- global int k
				}
				print reg int t129
			}
			<class 'ir.StatList'> 139137685205200 {
			parent = 139137685205680
				children:
				<class 'ir.StatList'> 139137685508880 {
				parent = 139137685205200
					children:
					reg int t133 <- auto int k
				}
				<class 'ir.StatList'> 139137685237712 {
				parent = 139137685205200
					children:
					reg int t134 <- 1
				}
				reg int32_t t135 <- reg int t133 plus reg int t134
			}
			auto int k <- reg int32_t t135
			branch  to auto label label20
			label22: <class 'ir.EmptyStat'> 139137685205392 {
			parent = 139137685205680
			}
		}
		<class 'ir.StatList'> 139137685206064 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685205920 {
			parent = 139137685206064
				children:
				reg int t137 <- 88883
			}
			print reg int t137
		}
		<class 'ir.StatList'> 139137685206544 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685206448 {
			parent = 139137685206544
				children:
				reg int t139 <- 99994
			}
			print reg int t139
		}
		<class 'ir.StatList'> 139137685208416 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685512000 {
			parent = 139137685208416
				symbol: 	auto int m
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685509792 {
				parent = 139137685512000
					symbol: 	None
					value: 	1
				}
			}
			label23: <class 'ir.StatList'> 139137685207552 {
			parent = 139137685208416
				children:
				<class 'ir.StatList'> 139137685207264 {
				parent = 139137685207552
					children:
					reg int t142 <- auto int m
				}
				<class 'ir.StatList'> 139137685207360 {
				parent = 139137685207552
					children:
					reg int t143 <- 6
				}
				reg int32_t t144 <- reg int t142 leq reg int t143
			}
			branch on not reg int32_t t144 to auto label label25
			<class 'ir.StatList'> 139137685207072 {
			parent = 139137685208416
				children:
				<class 'ir.StatList'> 139137685206976 {
				parent = 139137685207072
					children:
					reg int t141 <- global int m
				}
				print reg int t141
			}
			<class 'ir.StatList'> 139137685207936 {
			parent = 139137685208416
				children:
				<class 'ir.StatList'> 139137685511808 {
				parent = 139137685207936
					children:
					reg int t145 <- auto int m
				}
				<class 'ir.StatList'> 139137685207744 {
				parent = 139137685207936
					children:
					reg int t146 <- 1
				}
				reg int32_t t147 <- reg int t145 plus reg int t146
			}
			auto int m <- reg int32_t t147
			branch  to auto label label23
			label25: <class 'ir.EmptyStat'> 139137685208128 {
			parent = 139137685208416
			}
		}
		<class 'ir.StatList'> 139137685208800 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685208656 {
			parent = 139137685208800
				children:
				reg int t149 <- 88884
			}
			print reg int t149
		}
		<class 'ir.StatList'> 139137685192960 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685192816 {
			parent = 139137685192960
				children:
				reg int t151 <- 99995
			}
			print reg int t151
		}
		<class 'ir.StatList'> 139137685194832 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685510464 {
			parent = 139137685194832
				symbol: 	auto int n
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685510944 {
				parent = 139137685510464
					symbol: 	None
					value: 	1
				}
			}
			label26: <class 'ir.StatList'> 139137685193968 {
			parent = 139137685194832
				children:
				<class 'ir.StatList'> 139137685193680 {
				parent = 139137685193968
					children:
					reg int t154 <- auto int n
				}
				<class 'ir.StatList'> 139137685193776 {
				parent = 139137685193968
					children:
					reg int t155 <- 7
				}
				reg int32_t t156 <- reg int t154 leq reg int t155
			}
			branch on not reg int32_t t156 to auto label label28
			<class 'ir.StatList'> 139137685193488 {
			parent = 139137685194832
				children:
				<class 'ir.StatList'> 139137685193392 {
				parent = 139137685193488
					children:
					reg int t153 <- global int n
				}
				print reg int t153
			}
			<class 'ir.StatList'> 139137685194352 {
			parent = 139137685194832
				children:
				<class 'ir.StatList'> 139137685510272 {
				parent = 139137685194352
					children:
					reg int t157 <- auto int n
				}
				<class 'ir.StatList'> 139137685194160 {
				parent = 139137685194352
					children:
					reg int t158 <- 1
				}
				reg int32_t t159 <- reg int t157 plus reg int t158
			}
			auto int n <- reg int32_t t159
			branch  to auto label label26
			label28: <class 'ir.EmptyStat'> 139137685194544 {
			parent = 139137685194832
			}
		}
		<class 'ir.StatList'> 139137685195216 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685195072 {
			parent = 139137685195216
				children:
				reg int t161 <- 88885
			}
			print reg int t161
		}
		<class 'ir.StatList'> 139137685195696 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137685195600 {
			parent = 139137685195696
				children:
				reg int t163 <- 99996
			}
			print reg int t163
		}
		<class 'ir.StatList'> 139137684874048 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685419248 {
			parent = 139137684874048
				symbol: 	auto int p
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685418768 {
				parent = 139137685419248
					symbol: 	None
					value: 	10
				}
			}
			label29: <class 'ir.StatList'> 139137685196704 {
			parent = 139137684874048
				children:
				<class 'ir.StatList'> 139137685196416 {
				parent = 139137685196704
					children:
					reg int t166 <- auto int p
				}
				<class 'ir.StatList'> 139137685196512 {
				parent = 139137685196704
					children:
					reg int t167 <- 12
				}
				reg int32_t t168 <- reg int t166 leq reg int t167
			}
			branch on not reg int32_t t168 to auto label label31
			<class 'ir.StatList'> 139137685196224 {
			parent = 139137684874048
				children:
				<class 'ir.StatList'> 139137685196128 {
				parent = 139137685196224
					children:
					reg int t165 <- global int p
				}
				print reg int t165
			}
			<class 'ir.StatList'> 139137684873568 {
			parent = 139137684874048
				children:
				<class 'ir.StatList'> 139137685419296 {
				parent = 139137684873568
					children:
					reg int t169 <- auto int p
				}
				<class 'ir.StatList'> 139137684873376 {
				parent = 139137684873568
					children:
					reg int t170 <- 1
				}
				reg int32_t t171 <- reg int t169 plus reg int t170
			}
			auto int p <- reg int32_t t171
			branch  to auto label label29
			label31: <class 'ir.EmptyStat'> 139137684873760 {
			parent = 139137684874048
			}
		}
		<class 'ir.StatList'> 139137684874432 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684874288 {
			parent = 139137684874432
				children:
				reg int t173 <- 88886
			}
			print reg int t173
		}
		<class 'ir.StatList'> 139137685420064 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684874624 {
			parent = 139137685420064
				children:
				reg int t174 <- 0
			}
			global int sum <- reg int t174
		}
		<class 'ir.StatList'> 139137684875104 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684875008 {
			parent = 139137684875104
				children:
				reg int t176 <- 99997
			}
			print reg int t176
		}
		<class 'ir.StatList'> 139137684890336 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685421456 {
			parent = 139137684890336
				symbol: 	auto int q
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685420400 {
				parent = 139137685421456
					symbol: 	None
					value: 	1
				}
			}
			label32: <class 'ir.StatList'> 139137684877120 {
			parent = 139137684890336
				children:
				<class 'ir.StatList'> 139137684876832 {
				parent = 139137684877120
					children:
					reg int t184 <- auto int q
				}
				<class 'ir.StatList'> 139137684876928 {
				parent = 139137684877120
					children:
					reg int t185 <- 5
				}
				reg int32_t t186 <- reg int t184 leq reg int t185
			}
			branch on not reg int32_t t186 to auto label label34
			<class 'ir.StatList'> 139137685420976 {
			parent = 139137684890336
				children:
				<class 'ir.StatList'> 139137684875680 {
				parent = 139137685420976
					children:
					<class 'ir.StatList'> 139137684875344 {
					parent = 139137684875680
						children:
						reg int t177 <- global int sum
					}
					<class 'ir.StatList'> 139137684875488 {
					parent = 139137684875680
						children:
						reg int t178 <- global int q
					}
					reg int32_t t179 <- reg int t177 plus reg int t178
				}
				global int sum <- reg int32_t t179
			}
			<class 'ir.StatList'> 139137684876160 {
			parent = 139137684890336
				children:
				<class 'ir.StatList'> 139137684876064 {
				parent = 139137684876160
					children:
					reg int t181 <- global int q
				}
				print reg int t181
			}
			<class 'ir.StatList'> 139137684876640 {
			parent = 139137684890336
				children:
				<class 'ir.StatList'> 139137684876544 {
				parent = 139137684876640
					children:
					reg int t183 <- global int sum
				}
				print reg int t183
			}
			<class 'ir.StatList'> 139137684889856 {
			parent = 139137684890336
				children:
				<class 'ir.StatList'> 139137685421888 {
				parent = 139137684889856
					children:
					reg int t187 <- auto int q
				}
				<class 'ir.StatList'> 139137684877264 {
				parent = 139137684889856
					children:
					reg int t188 <- 1
				}
				reg int32_t t189 <- reg int t187 plus reg int t188
			}
			auto int q <- reg int32_t t189
			branch  to auto label label32
			label34: <class 'ir.EmptyStat'> 139137684890048 {
			parent = 139137684890336
			}
		}
		<class 'ir.StatList'> 139137684890720 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684890576 {
			parent = 139137684890720
				children:
				reg int t191 <- global int sum
			}
			print reg int t191
		}
		<class 'ir.StatList'> 139137684891200 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684891104 {
			parent = 139137684891200
				children:
				reg int t193 <- 88887
			}
			print reg int t193
		}
		<class 'ir.StatList'> 139137685847440 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684891392 {
			parent = 139137685847440
				children:
				reg int t194 <- 100
			}
			global int x <- reg int t194
		}
		<class 'ir.StatList'> 139137684891872 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684891776 {
			parent = 139137684891872
				children:
				reg int t196 <- 99998
			}
			print reg int t196
		}
		<class 'ir.StatList'> 139137684927104 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685846480 {
			parent = 139137684927104
				symbol: 	auto int r
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685847728 {
				parent = 139137685846480
					symbol: 	None
					value: 	1
				}
			}
			label35: <class 'ir.StatList'> 139137684893408 {
			parent = 139137684927104
				children:
				<class 'ir.StatList'> 139137684893120 {
				parent = 139137684893408
					children:
					reg int t202 <- auto int r
				}
				<class 'ir.StatList'> 139137684893216 {
				parent = 139137684893408
					children:
					reg int t203 <- 3
				}
				reg int32_t t204 <- reg int t202 leq reg int t203
			}
			branch on not reg int32_t t204 to auto label label37
			<class 'ir.StatList'> 139137685846960 {
			parent = 139137684927104
				children:
				<class 'ir.StatList'> 139137684892448 {
				parent = 139137685846960
					children:
					<class 'ir.StatList'> 139137684892112 {
					parent = 139137684892448
						children:
						reg int t197 <- global int x
					}
					<class 'ir.StatList'> 139137684892256 {
					parent = 139137684892448
						children:
						reg int t198 <- global int r
					}
					reg int32_t t199 <- reg int t197 plus reg int t198
				}
				global int x <- reg int32_t t199
			}
			<class 'ir.StatList'> 139137684892928 {
			parent = 139137684927104
				children:
				<class 'ir.StatList'> 139137684892832 {
				parent = 139137684892928
					children:
					reg int t201 <- global int x
				}
				print reg int t201
			}
			<class 'ir.StatList'> 139137684926624 {
			parent = 139137684927104
				children:
				<class 'ir.StatList'> 139137685847632 {
				parent = 139137684926624
					children:
					reg int t205 <- auto int r
				}
				<class 'ir.StatList'> 139137684893600 {
				parent = 139137684926624
					children:
					reg int t206 <- 1
				}
				reg int32_t t207 <- reg int t205 plus reg int t206
			}
			auto int r <- reg int32_t t207
			branch  to auto label label35
			label37: <class 'ir.EmptyStat'> 139137684926816 {
			parent = 139137684927104
			}
		}
		<class 'ir.StatList'> 139137684927488 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684927344 {
			parent = 139137684927488
				children:
				reg int t209 <- global int x
			}
			print reg int t209
		}
		<class 'ir.StatList'> 139137684927968 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684927872 {
			parent = 139137684927968
				children:
				reg int t211 <- 88888
			}
			print reg int t211
		}
		<class 'ir.StatList'> 139137684928448 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684928352 {
			parent = 139137684928448
				children:
				reg int t213 <- 999990
			}
			print reg int t213
		}
		<class 'ir.StatList'> 139137685337136 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684928640 {
			parent = 139137685337136
				children:
				reg int t214 <- 0
			}
			global int sm_idx <- reg int t214
		}
		<class 'ir.StatList'> 139137684940928 {
		parent = 139137684886480
			children:
			<class 'ir.AssignStat'> 139137685360544 {
			parent = 139137684940928
				symbol: 	auto int sm_idx
				offset: 	None
				expr: 	<class 'ir.Const'> 139137685337280 {
				parent = 139137685360544
					symbol: 	None
					value: 	0
				}
			}
			label38: <class 'ir.StatList'> 139137684940064 {
			parent = 139137684940928
				children:
				<class 'ir.StatList'> 139137684939728 {
				parent = 139137684940064
					children:
					reg int t229 <- auto int sm_idx
				}
				<class 'ir.StatList'> 139137684939872 {
				parent = 139137684940064
					children:
					reg int t230 <- 127
				}
				reg int32_t t231 <- reg int t229 leq reg int t230
			}
			branch on not reg int32_t t231 to auto label label40
			<class 'ir.StatList'> 139137684939488 {
			parent = 139137684940928
				children:
				<class 'ir.StatList'> 139137684939056 {
				parent = 139137684939488
					children:
					<class 'ir.StatList'> 139137684930464 {
					parent = 139137684939056
						children:
						<class 'ir.StatList'> 139137684929936 {
						parent = 139137684930464
							children:
							<class 'ir.StatList'> 139137684929408 {
							parent = 139137684929936
								children:
								reg int t218 <- global int sm_idx
							}
							<class 'ir.StatList'> 139137684929552 {
							parent = 139137684929936
								children:
								reg int t219 <- 4
							}
							reg int32_t t221 <- reg int t218 times reg int t219
						}
						reg &int t223 <- &(global int[128] sm_source_arr)
						reg &int t224 <- reg &int t223 plus reg int32_t t221
						reg int t222 <- [reg &int t224]
					}
					<class 'ir.StatList'> 139137684938816 {
					parent = 139137684939056
						children:
						reg int t225 <- global int sm_idx
					}
					reg int32_t t226 <- reg int t222 plus reg int t225
				}
				<class 'ir.StatList'> 139137684929264 {
				parent = 139137684939488
					children:
					<class 'ir.StatList'> 139137684928832 {
					parent = 139137684929264
						children:
						reg int t215 <- global int sm_idx
					}
					<class 'ir.StatList'> 139137684929072 {
					parent = 139137684929264
						children:
						reg int t216 <- 4
					}
					reg int32_t t217 <- reg int t215 times reg int t216
				}
				reg &int t227 <- &(global int[128] sm_dest_arr)
				reg &int t228 <- reg &int t227 plus reg int32_t t217
				[reg &int t228] <- reg int32_t t226
			}
			<class 'ir.StatList'> 139137684940448 {
			parent = 139137684940928
				children:
				<class 'ir.StatList'> 139137685338624 {
				parent = 139137684940448
					children:
					reg int t232 <- auto int sm_idx
				}
				<class 'ir.StatList'> 139137684940256 {
				parent = 139137684940448
					children:
					reg int t233 <- 1
				}
				reg int32_t t234 <- reg int t232 plus reg int t233
			}
			auto int sm_idx <- reg int32_t t234
			branch  to auto label label38
			label40: <class 'ir.EmptyStat'> 139137684940640 {
			parent = 139137684940928
			}
		}
		<class 'ir.StatList'> 139137684976832 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684976736 {
			parent = 139137684976832
				children:
				<class 'ir.StatList'> 139137684976400 {
				parent = 139137684976736
					children:
					reg int t267 <- 127
				}
				<class 'ir.StatList'> 139137684976544 {
				parent = 139137684976736
					children:
					reg int t268 <- 0
				}
				reg int32_t t269 <- reg int t267 geq reg int t268
			}
			branch on not reg int32_t t269 to auto label label41
			<class 'ir.StatList'> 139137685339344 {
			parent = 139137684976832
				children:
				<class 'ir.StatList'> 139137684941360 {
				parent = 139137685339344
					children:
					<class 'ir.StatList'> 139137684941216 {
					parent = 139137684941360
						children:
						reg int t236 <- 76543
					}
					print reg int t236
				}
				<class 'ir.StatList'> 139137684963824 {
				parent = 139137685339344
					children:
					<class 'ir.StatList'> 139137684963680 {
					parent = 139137684963824
						children:
						<class 'ir.StatList'> 139137684942176 {
						parent = 139137684963680
							children:
							<class 'ir.StatList'> 139137684941600 {
							parent = 139137684942176
								children:
								reg int t237 <- 0
							}
							<class 'ir.StatList'> 139137684941792 {
							parent = 139137684942176
								children:
								reg int t238 <- 4
							}
							reg int32_t t240 <- reg int t237 times reg int t238
						}
						reg &int t245 <- &(global int[128] sm_dest_arr)
						reg &int t246 <- reg &int t245 plus reg int32_t t240
						reg int t244 <- [reg &int t246]
					}
					print reg int t244
				}
				<class 'ir.StatList'> 139137684965936 {
				parent = 139137685339344
					children:
					<class 'ir.StatList'> 139137684965696 {
					parent = 139137684965936
						children:
						<class 'ir.StatList'> 139137684964736 {
						parent = 139137684965696
							children:
							<class 'ir.StatList'> 139137684964064 {
							parent = 139137684964736
								children:
								reg int t247 <- 64
							}
							<class 'ir.StatList'> 139137684964352 {
							parent = 139137684964736
								children:
								reg int t248 <- 4
							}
							reg int32_t t250 <- reg int t247 times reg int t248
						}
						reg &int t255 <- &(global int[128] sm_dest_arr)
						reg &int t256 <- reg &int t255 plus reg int32_t t250
						reg int t254 <- [reg &int t256]
					}
					print reg int t254
				}
				<class 'ir.StatList'> 139137684976160 {
				parent = 139137685339344
					children:
					<class 'ir.StatList'> 139137684976016 {
					parent = 139137684976160
						children:
						<class 'ir.StatList'> 139137684966800 {
						parent = 139137684976016
							children:
							<class 'ir.StatList'> 139137684966128 {
							parent = 139137684966800
								children:
								reg int t257 <- 127
							}
							<class 'ir.StatList'> 139137684966416 {
							parent = 139137684966800
								children:
								reg int t258 <- 4
							}
							reg int32_t t260 <- reg int t257 times reg int t258
						}
						reg &int t265 <- &(global int[128] sm_dest_arr)
						reg &int t266 <- reg &int t265 plus reg int32_t t260
						reg int t264 <- [reg &int t266]
					}
					print reg int t264
				}
			}
			label41: <class 'ir.EmptyStat'> 139137685339296 {
			parent = 139137684976832
			}
		}
		<class 'ir.StatList'> 139137684977312 {
		parent = 139137684886480
			children:
			<class 'ir.StatList'> 139137684977216 {
			parent = 139137684977312
				children:
				reg int t271 <- 888880
			}
			print reg int t271
		}
	}
	defs: 	<class 'ir.DefinitionList'> 139137686162448 {
	parent = 139137685320896
		children:
		<class 'ir.FunctionDef'> 139137684886384 {
		parent = 139137686162448
			body: 	<class 'ir.Block'> 139137685358720 {
			parent = 139137684886384
				body: 	<class 'ir.StatList'> 139137684885760 {
				parent = 139137685358720
					children:
					<class 'ir.StatList'> 139137684885952 {
					parent = 139137684885760
						children:
						<class 'ir.StatList'> 139137684977552 {
						parent = 139137684885952
							children:
							reg int t272 <- 1234
						}
						auto int test <- reg int t272
					}
					<class 'ir.StatList'> 139137684886240 {
					parent = 139137684885760
						children:
						<class 'ir.StatList'> 139137684978128 {
						parent = 139137684886240
							children:
							<class 'ir.StatList'> 139137684977744 {
							parent = 139137684978128
								children:
								reg int t273 <- global int x
							}
							<class 'ir.StatList'> 139137684977936 {
							parent = 139137684978128
								children:
								reg int t274 <- global int x
							}
							reg int32_t t275 <- reg int t273 times reg int t274
						}
						global int squ <- reg int32_t t275
					}
				}
				defs: 	<class 'ir.DefinitionList'> 139137684885568 {
				parent = 139137685358720
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
			}
			symbol: 	auto function square
		}
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.StatList'> 139137684886480 45
navigating children of <class 'ir.StatList'> 139137684886672 2
navigating children of <class 'ir.StatList'> 139137685321088 2
navigating children of <class 'ir.StatList'> 139137685321232 1
navigating children of <class 'ir.StatList'> 139137685357520 2
navigating children of <class 'ir.StatList'> 139137685321184 1
navigating children of <class 'ir.StatList'> 139137685323296 6
navigating children of <class 'ir.StatList'> 139137685323056 3
navigating children of <class 'ir.StatList'> 139137685322768 1
navigating children of <class 'ir.StatList'> 139137685322864 1
navigating children of <class 'ir.StatList'> 139137684886960 1
navigating children of <class 'ir.StatList'> 139137685322576 2
navigating children of <class 'ir.StatList'> 139137685322480 1
navigating children of <class 'ir.StatList'> 139137684887392 1
navigating children of <class 'ir.StatList'> 139137685322000 2
navigating children of <class 'ir.StatList'> 139137685321568 2
navigating children of <class 'ir.StatList'> 139137685321664 1
navigating children of <class 'ir.StatList'> 139137684887920 2
navigating children of <class 'ir.StatList'> 139137685323488 1
navigating children of <class 'ir.StatList'> 139137685157392 5
navigating children of <class 'ir.StatList'> 139137685157152 3
navigating children of <class 'ir.StatList'> 139137685156864 1
navigating children of <class 'ir.StatList'> 139137685156960 1
navigating children of <class 'ir.StatList'> 139137684888352 3
navigating children of <class 'ir.StatList'> 139137684888832 2
navigating children of <class 'ir.StatList'> 139137685156240 3
navigating children of <class 'ir.StatList'> 139137685155904 1
navigating children of <class 'ir.StatList'> 139137685156048 1
navigating children of <class 'ir.StatList'> 139137685156672 2
navigating children of <class 'ir.StatList'> 139137685156576 1
navigating children of <class 'ir.StatList'> 139137684889216 2
navigating children of <class 'ir.StatList'> 139137685157584 1
navigating children of <class 'ir.StatList'> 139137685314096 5
navigating children of <class 'ir.StatList'> 139137685313856 3
navigating children of <class 'ir.StatList'> 139137685313520 1
navigating children of <class 'ir.StatList'> 139137685313664 1
navigating children of <class 'ir.StatList'> 139137685351152 3
navigating children of <class 'ir.StatList'> 139137685158880 5
navigating children of <class 'ir.StatList'> 139137685351056 1
navigating children of <class 'ir.StatList'> 139137685158448 3
navigating children of <class 'ir.StatList'> 139137685158208 3
navigating children of <class 'ir.StatList'> 139137685157776 1
navigating children of <class 'ir.StatList'> 139137685158016 1
navigating children of <class 'ir.StatList'> 139137685351200 1
navigating children of <class 'ir.StatList'> 139137685312800 2
navigating children of <class 'ir.StatList'> 139137685312656 4
navigating children of <class 'ir.StatList'> 139137685311696 3
navigating children of <class 'ir.StatList'> 139137685159648 3
navigating children of <class 'ir.StatList'> 139137685159120 1
navigating children of <class 'ir.StatList'> 139137685159456 1
navigating children of <class 'ir.StatList'> 139137685351968 1
navigating children of <class 'ir.StatList'> 139137685350048 2
navigating children of <class 'ir.StatList'> 139137685313424 3
navigating children of <class 'ir.StatList'> 139137685313040 1
navigating children of <class 'ir.StatList'> 139137685313232 1
navigating children of <class 'ir.StatList'> 139137685349760 2
navigating children of <class 'ir.StatList'> 139137685314288 1
navigating children of <class 'ir.StatList'> 139137685349616 2
navigating children of <class 'ir.StatList'> 139137685314480 1
navigating children of <class 'ir.StatList'> 139137685240608 5
navigating children of <class 'ir.StatList'> 139137685240368 3
navigating children of <class 'ir.StatList'> 139137685240080 1
navigating children of <class 'ir.StatList'> 139137685240176 1
navigating children of <class 'ir.StatList'> 139137685348656 1
navigating children of <class 'ir.StatList'> 139137685239888 5
navigating children of <class 'ir.StatList'> 139137685239648 3
navigating children of <class 'ir.StatList'> 139137685239312 1
navigating children of <class 'ir.StatList'> 139137685239456 1
navigating children of <class 'ir.StatList'> 139137685148144 4
navigating children of <class 'ir.StatList'> 139137685288656 5
navigating children of <class 'ir.StatList'> 139137685288224 4
navigating children of <class 'ir.StatList'> 139137685287696 3
navigating children of <class 'ir.StatList'> 139137685287168 1
navigating children of <class 'ir.StatList'> 139137685287312 1
navigating children of <class 'ir.StatList'> 139137685287120 3
navigating children of <class 'ir.StatList'> 139137685315152 3
navigating children of <class 'ir.StatList'> 139137685314672 1
navigating children of <class 'ir.StatList'> 139137685314960 1
navigating children of <class 'ir.StatList'> 139137685315536 3
navigating children of <class 'ir.StatList'> 139137685148432 1
navigating children of <class 'ir.StatList'> 139137685315248 1
navigating children of <class 'ir.StatList'> 139137685238064 2
navigating children of <class 'ir.StatList'> 139137685237920 4
navigating children of <class 'ir.StatList'> 139137685290096 3
navigating children of <class 'ir.StatList'> 139137685289424 3
navigating children of <class 'ir.StatList'> 139137685288896 1
navigating children of <class 'ir.StatList'> 139137685289232 1
navigating children of <class 'ir.StatList'> 139137685289808 3
navigating children of <class 'ir.StatList'> 139137685148816 1
navigating children of <class 'ir.StatList'> 139137685289520 1
navigating children of <class 'ir.StatList'> 139137685150208 2
navigating children of <class 'ir.StatList'> 139137685238688 3
navigating children of <class 'ir.StatList'> 139137685238304 1
navigating children of <class 'ir.StatList'> 139137685238496 1
navigating children of <class 'ir.StatList'> 139137685150544 2
navigating children of <class 'ir.StatList'> 139137685239168 3
navigating children of <class 'ir.StatList'> 139137685238832 1
navigating children of <class 'ir.StatList'> 139137685238976 1
navigating children of <class 'ir.StatList'> 139137685234352 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685151600
navigating children of <class 'ir.StatList'> 139137685241616 3
navigating children of <class 'ir.StatList'> 139137685241328 1
navigating children of <class 'ir.StatList'> 139137685241424 1
navigating children of <class 'ir.StatList'> 139137685241136 2
navigating children of <class 'ir.StatList'> 139137685240992 1
navigating children of <class 'ir.StatList'> 139137685233872 3
navigating children of <class 'ir.StatList'> 139137685150928 1
navigating children of <class 'ir.StatList'> 139137685241808 1
navigating children of <class 'ir.StatList'> 139137685610304 2
navigating children of <class 'ir.StatList'> 139137685234256 1
navigating children of <class 'ir.StatList'> 139137685234976 2
navigating children of <class 'ir.StatList'> 139137685234832 1
navigating children of <class 'ir.StatList'> 139137685236848 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685609152
navigating children of <class 'ir.StatList'> 139137685235984 3
navigating children of <class 'ir.StatList'> 139137685235696 1
navigating children of <class 'ir.StatList'> 139137685235792 1
navigating children of <class 'ir.StatList'> 139137685235504 2
navigating children of <class 'ir.StatList'> 139137685235408 1
navigating children of <class 'ir.StatList'> 139137685236368 3
navigating children of <class 'ir.StatList'> 139137685608960 1
navigating children of <class 'ir.StatList'> 139137685236176 1
navigating children of <class 'ir.StatList'> 139137685290528 2
navigating children of <class 'ir.StatList'> 139137685240896 1
navigating children of <class 'ir.StatList'> 139137685290000 2
navigating children of <class 'ir.StatList'> 139137685290192 1
navigating children of <class 'ir.StatList'> 139137685607376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607616
navigating children of <class 'ir.StatList'> 139137685156336 3
navigating children of <class 'ir.StatList'> 139137685311744 1
navigating children of <class 'ir.StatList'> 139137685159888 1
navigating children of <class 'ir.StatList'> 139137685312128 2
navigating children of <class 'ir.StatList'> 139137685312272 1
navigating children of <class 'ir.StatList'> 139137684887440 3
navigating children of <class 'ir.StatList'> 139137685322288 1
navigating children of <class 'ir.StatList'> 139137684889072 1
navigating children of <class 'ir.StatList'> 139137685607808 2
navigating children of <class 'ir.StatList'> 139137685607568 1
navigating children of <class 'ir.StatList'> 139137685148000 2
navigating children of <class 'ir.StatList'> 139137685609872 1
navigating children of <class 'ir.StatList'> 139137685205680 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685508688
navigating children of <class 'ir.StatList'> 139137685237520 3
navigating children of <class 'ir.StatList'> 139137685237232 1
navigating children of <class 'ir.StatList'> 139137685237328 1
navigating children of <class 'ir.StatList'> 139137685235168 2
navigating children of <class 'ir.StatList'> 139137685148240 1
navigating children of <class 'ir.StatList'> 139137685236944 2
navigating children of <class 'ir.StatList'> 139137685234736 1
navigating children of <class 'ir.StatList'> 139137685205200 3
navigating children of <class 'ir.StatList'> 139137685508880 1
navigating children of <class 'ir.StatList'> 139137685237712 1
navigating children of <class 'ir.StatList'> 139137685206064 2
navigating children of <class 'ir.StatList'> 139137685205920 1
navigating children of <class 'ir.StatList'> 139137685206544 2
navigating children of <class 'ir.StatList'> 139137685206448 1
navigating children of <class 'ir.StatList'> 139137685208416 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685512000
navigating children of <class 'ir.StatList'> 139137685207552 3
navigating children of <class 'ir.StatList'> 139137685207264 1
navigating children of <class 'ir.StatList'> 139137685207360 1
navigating children of <class 'ir.StatList'> 139137685207072 2
navigating children of <class 'ir.StatList'> 139137685206976 1
navigating children of <class 'ir.StatList'> 139137685207936 3
navigating children of <class 'ir.StatList'> 139137685511808 1
navigating children of <class 'ir.StatList'> 139137685207744 1
navigating children of <class 'ir.StatList'> 139137685208800 2
navigating children of <class 'ir.StatList'> 139137685208656 1
navigating children of <class 'ir.StatList'> 139137685192960 2
navigating children of <class 'ir.StatList'> 139137685192816 1
navigating children of <class 'ir.StatList'> 139137685194832 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685510464
navigating children of <class 'ir.StatList'> 139137685193968 3
navigating children of <class 'ir.StatList'> 139137685193680 1
navigating children of <class 'ir.StatList'> 139137685193776 1
navigating children of <class 'ir.StatList'> 139137685193488 2
navigating children of <class 'ir.StatList'> 139137685193392 1
navigating children of <class 'ir.StatList'> 139137685194352 3
navigating children of <class 'ir.StatList'> 139137685510272 1
navigating children of <class 'ir.StatList'> 139137685194160 1
navigating children of <class 'ir.StatList'> 139137685195216 2
navigating children of <class 'ir.StatList'> 139137685195072 1
navigating children of <class 'ir.StatList'> 139137685195696 2
navigating children of <class 'ir.StatList'> 139137685195600 1
navigating children of <class 'ir.StatList'> 139137684874048 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419248
navigating children of <class 'ir.StatList'> 139137685196704 3
navigating children of <class 'ir.StatList'> 139137685196416 1
navigating children of <class 'ir.StatList'> 139137685196512 1
navigating children of <class 'ir.StatList'> 139137685196224 2
navigating children of <class 'ir.StatList'> 139137685196128 1
navigating children of <class 'ir.StatList'> 139137684873568 3
navigating children of <class 'ir.StatList'> 139137685419296 1
navigating children of <class 'ir.StatList'> 139137684873376 1
navigating children of <class 'ir.StatList'> 139137684874432 2
navigating children of <class 'ir.StatList'> 139137684874288 1
navigating children of <class 'ir.StatList'> 139137685420064 2
navigating children of <class 'ir.StatList'> 139137684874624 1
navigating children of <class 'ir.StatList'> 139137684875104 2
navigating children of <class 'ir.StatList'> 139137684875008 1
navigating children of <class 'ir.StatList'> 139137684890336 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421456
navigating children of <class 'ir.StatList'> 139137684877120 3
navigating children of <class 'ir.StatList'> 139137684876832 1
navigating children of <class 'ir.StatList'> 139137684876928 1
navigating children of <class 'ir.StatList'> 139137685420976 2
navigating children of <class 'ir.StatList'> 139137684875680 3
navigating children of <class 'ir.StatList'> 139137684875344 1
navigating children of <class 'ir.StatList'> 139137684875488 1
navigating children of <class 'ir.StatList'> 139137684876160 2
navigating children of <class 'ir.StatList'> 139137684876064 1
navigating children of <class 'ir.StatList'> 139137684876640 2
navigating children of <class 'ir.StatList'> 139137684876544 1
navigating children of <class 'ir.StatList'> 139137684889856 3
navigating children of <class 'ir.StatList'> 139137685421888 1
navigating children of <class 'ir.StatList'> 139137684877264 1
navigating children of <class 'ir.StatList'> 139137684890720 2
navigating children of <class 'ir.StatList'> 139137684890576 1
navigating children of <class 'ir.StatList'> 139137684891200 2
navigating children of <class 'ir.StatList'> 139137684891104 1
navigating children of <class 'ir.StatList'> 139137685847440 2
navigating children of <class 'ir.StatList'> 139137684891392 1
navigating children of <class 'ir.StatList'> 139137684891872 2
navigating children of <class 'ir.StatList'> 139137684891776 1
navigating children of <class 'ir.StatList'> 139137684927104 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846480
navigating children of <class 'ir.StatList'> 139137684893408 3
navigating children of <class 'ir.StatList'> 139137684893120 1
navigating children of <class 'ir.StatList'> 139137684893216 1
navigating children of <class 'ir.StatList'> 139137685846960 2
navigating children of <class 'ir.StatList'> 139137684892448 3
navigating children of <class 'ir.StatList'> 139137684892112 1
navigating children of <class 'ir.StatList'> 139137684892256 1
navigating children of <class 'ir.StatList'> 139137684892928 2
navigating children of <class 'ir.StatList'> 139137684892832 1
navigating children of <class 'ir.StatList'> 139137684926624 3
navigating children of <class 'ir.StatList'> 139137685847632 1
navigating children of <class 'ir.StatList'> 139137684893600 1
navigating children of <class 'ir.StatList'> 139137684927488 2
navigating children of <class 'ir.StatList'> 139137684927344 1
navigating children of <class 'ir.StatList'> 139137684927968 2
navigating children of <class 'ir.StatList'> 139137684927872 1
navigating children of <class 'ir.StatList'> 139137684928448 2
navigating children of <class 'ir.StatList'> 139137684928352 1
navigating children of <class 'ir.StatList'> 139137685337136 2
navigating children of <class 'ir.StatList'> 139137684928640 1
navigating children of <class 'ir.StatList'> 139137684940928 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685360544
navigating children of <class 'ir.StatList'> 139137684940064 3
navigating children of <class 'ir.StatList'> 139137684939728 1
navigating children of <class 'ir.StatList'> 139137684939872 1
navigating children of <class 'ir.StatList'> 139137684939488 5
navigating children of <class 'ir.StatList'> 139137684939056 3
navigating children of <class 'ir.StatList'> 139137684930464 4
navigating children of <class 'ir.StatList'> 139137684929936 3
navigating children of <class 'ir.StatList'> 139137684929408 1
navigating children of <class 'ir.StatList'> 139137684929552 1
navigating children of <class 'ir.StatList'> 139137684938816 1
navigating children of <class 'ir.StatList'> 139137684929264 3
navigating children of <class 'ir.StatList'> 139137684928832 1
navigating children of <class 'ir.StatList'> 139137684929072 1
navigating children of <class 'ir.StatList'> 139137684940448 3
navigating children of <class 'ir.StatList'> 139137685338624 1
navigating children of <class 'ir.StatList'> 139137684940256 1
navigating children of <class 'ir.StatList'> 139137684976832 4
navigating children of <class 'ir.StatList'> 139137684976736 3
navigating children of <class 'ir.StatList'> 139137684976400 1
navigating children of <class 'ir.StatList'> 139137684976544 1
navigating children of <class 'ir.StatList'> 139137685339344 4
navigating children of <class 'ir.StatList'> 139137684941360 2
navigating children of <class 'ir.StatList'> 139137684941216 1
navigating children of <class 'ir.StatList'> 139137684963824 2
navigating children of <class 'ir.StatList'> 139137684963680 4
navigating children of <class 'ir.StatList'> 139137684942176 3
navigating children of <class 'ir.StatList'> 139137684941600 1
navigating children of <class 'ir.StatList'> 139137684941792 1
navigating children of <class 'ir.StatList'> 139137684965936 2
navigating children of <class 'ir.StatList'> 139137684965696 4
navigating children of <class 'ir.StatList'> 139137684964736 3
navigating children of <class 'ir.StatList'> 139137684964064 1
navigating children of <class 'ir.StatList'> 139137684964352 1
navigating children of <class 'ir.StatList'> 139137684976160 2
navigating children of <class 'ir.StatList'> 139137684976016 4
navigating children of <class 'ir.StatList'> 139137684966800 3
navigating children of <class 'ir.StatList'> 139137684966128 1
navigating children of <class 'ir.StatList'> 139137684966416 1
navigating children of <class 'ir.StatList'> 139137684977312 2
navigating children of <class 'ir.StatList'> 139137684977216 1
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 2
navigating children of <class 'ir.StatList'> 139137684885952 2
navigating children of <class 'ir.StatList'> 139137684977552 1
navigating children of <class 'ir.StatList'> 139137684886240 2
navigating children of <class 'ir.StatList'> 139137684978128 3
navigating children of <class 'ir.StatList'> 139137684977744 1
navigating children of <class 'ir.StatList'> 139137684977936 1
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896

--- Navigating: Applying Flattening ---
navigating children of <class 'ir.StatList'> 139137684886480 45
navigating children of <class 'ir.StatList'> 139137684886672 2
navigating children of <class 'ir.StatList'> 139137685321088 2
navigating children of <class 'ir.StatList'> 139137685321232 1
Flattening 139137685321232 into 139137685321088
Flattening <class 'ir.StatList'> 139137685321232
Flattening 139137685321088 into 139137684886672
Flattening <class 'ir.StatList'> 139137685321088
Flattening 139137684886672 into 139137684886480
Flattening <class 'ir.StatList'> 139137684886672
navigating children of <class 'ir.StatList'> 139137685357520 2
navigating children of <class 'ir.StatList'> 139137685321184 1
Flattening 139137685321184 into 139137685357520
Flattening <class 'ir.StatList'> 139137685321184
Flattening 139137685357520 into 139137684886480
Flattening <class 'ir.StatList'> 139137685357520
navigating children of <class 'ir.StatList'> 139137685323296 6
navigating children of <class 'ir.StatList'> 139137685323056 3
navigating children of <class 'ir.StatList'> 139137685322768 1
Flattening 139137685322768 into 139137685323056
Flattening <class 'ir.StatList'> 139137685322768
navigating children of <class 'ir.StatList'> 139137685322864 1
Flattening 139137685322864 into 139137685323056
Flattening <class 'ir.StatList'> 139137685322864
Flattening 139137685323056 into 139137685323296
Flattening <class 'ir.StatList'> 139137685323056
navigating children of <class 'ir.StatList'> 139137684886960 1
navigating children of <class 'ir.StatList'> 139137685322576 2
navigating children of <class 'ir.StatList'> 139137685322480 1
Flattening 139137685322480 into 139137685322576
Flattening <class 'ir.StatList'> 139137685322480
Flattening 139137685322576 into 139137684886960
Flattening <class 'ir.StatList'> 139137685322576
Flattening 139137684886960 into 139137685323296
Flattening <class 'ir.StatList'> 139137684886960
navigating children of <class 'ir.StatList'> 139137684887392 1
navigating children of <class 'ir.StatList'> 139137685322000 2
navigating children of <class 'ir.StatList'> 139137685321568 2
navigating children of <class 'ir.StatList'> 139137685321664 1
Flattening 139137685321664 into 139137685321568
Flattening <class 'ir.StatList'> 139137685321664
Flattening 139137685321568 into 139137685322000
Flattening <class 'ir.StatList'> 139137685321568
Flattening 139137685322000 into 139137684887392
Flattening <class 'ir.StatList'> 139137685322000
Flattening 139137684887392 into 139137685323296
Flattening <class 'ir.StatList'> 139137684887392
Flattening 139137685323296 into 139137684886480
Flattening <class 'ir.StatList'> 139137685323296
navigating children of <class 'ir.StatList'> 139137684887920 2
navigating children of <class 'ir.StatList'> 139137685323488 1
Flattening 139137685323488 into 139137684887920
Flattening <class 'ir.StatList'> 139137685323488
Flattening 139137684887920 into 139137684886480
Flattening <class 'ir.StatList'> 139137684887920
navigating children of <class 'ir.StatList'> 139137685157392 5
navigating children of <class 'ir.StatList'> 139137685157152 3
navigating children of <class 'ir.StatList'> 139137685156864 1
Flattening 139137685156864 into 139137685157152
Flattening <class 'ir.StatList'> 139137685156864
navigating children of <class 'ir.StatList'> 139137685156960 1
Flattening 139137685156960 into 139137685157152
Flattening <class 'ir.StatList'> 139137685156960
Flattening 139137685157152 into 139137685157392
Flattening <class 'ir.StatList'> 139137685157152
navigating children of <class 'ir.StatList'> 139137684888352 3
navigating children of <class 'ir.StatList'> 139137684888832 2
navigating children of <class 'ir.StatList'> 139137685156240 3
navigating children of <class 'ir.StatList'> 139137685155904 1
Flattening 139137685155904 into 139137685156240
Flattening <class 'ir.StatList'> 139137685155904
navigating children of <class 'ir.StatList'> 139137685156048 1
Flattening 139137685156048 into 139137685156240
Flattening <class 'ir.StatList'> 139137685156048
Flattening 139137685156240 into 139137684888832
Flattening <class 'ir.StatList'> 139137685156240
Flattening 139137684888832 into 139137684888352
Flattening <class 'ir.StatList'> 139137684888832
navigating children of <class 'ir.StatList'> 139137685156672 2
navigating children of <class 'ir.StatList'> 139137685156576 1
Flattening 139137685156576 into 139137685156672
Flattening <class 'ir.StatList'> 139137685156576
Flattening 139137685156672 into 139137684888352
Flattening <class 'ir.StatList'> 139137685156672
Flattening 139137684888352 into 139137685157392
Flattening <class 'ir.StatList'> 139137684888352
Flattening 139137685157392 into 139137684886480
Flattening <class 'ir.StatList'> 139137685157392
navigating children of <class 'ir.StatList'> 139137684889216 2
navigating children of <class 'ir.StatList'> 139137685157584 1
Flattening 139137685157584 into 139137684889216
Flattening <class 'ir.StatList'> 139137685157584
Flattening 139137684889216 into 139137684886480
Flattening <class 'ir.StatList'> 139137684889216
navigating children of <class 'ir.StatList'> 139137685314096 5
navigating children of <class 'ir.StatList'> 139137685313856 3
navigating children of <class 'ir.StatList'> 139137685313520 1
Flattening 139137685313520 into 139137685313856
Flattening <class 'ir.StatList'> 139137685313520
navigating children of <class 'ir.StatList'> 139137685313664 1
Flattening 139137685313664 into 139137685313856
Flattening <class 'ir.StatList'> 139137685313664
Flattening 139137685313856 into 139137685314096
Flattening <class 'ir.StatList'> 139137685313856
navigating children of <class 'ir.StatList'> 139137685351152 3
navigating children of <class 'ir.StatList'> 139137685158880 5
navigating children of <class 'ir.StatList'> 139137685351056 1
Flattening 139137685351056 into 139137685158880
Flattening <class 'ir.StatList'> 139137685351056
navigating children of <class 'ir.StatList'> 139137685158448 3
navigating children of <class 'ir.StatList'> 139137685158208 3
navigating children of <class 'ir.StatList'> 139137685157776 1
Flattening 139137685157776 into 139137685158208
Flattening <class 'ir.StatList'> 139137685157776
navigating children of <class 'ir.StatList'> 139137685158016 1
Flattening 139137685158016 into 139137685158208
Flattening <class 'ir.StatList'> 139137685158016
Flattening 139137685158208 into 139137685158448
Flattening <class 'ir.StatList'> 139137685158208
navigating children of <class 'ir.StatList'> 139137685351200 1
Flattening 139137685351200 into 139137685158448
Flattening <class 'ir.StatList'> 139137685351200
Flattening 139137685158448 into 139137685158880
Flattening <class 'ir.StatList'> 139137685158448
Flattening 139137685158880 into 139137685351152
Flattening <class 'ir.StatList'> 139137685158880
navigating children of <class 'ir.StatList'> 139137685312800 2
navigating children of <class 'ir.StatList'> 139137685312656 4
navigating children of <class 'ir.StatList'> 139137685311696 3
navigating children of <class 'ir.StatList'> 139137685159648 3
navigating children of <class 'ir.StatList'> 139137685159120 1
Flattening 139137685159120 into 139137685159648
Flattening <class 'ir.StatList'> 139137685159120
navigating children of <class 'ir.StatList'> 139137685159456 1
Flattening 139137685159456 into 139137685159648
Flattening <class 'ir.StatList'> 139137685159456
Flattening 139137685159648 into 139137685311696
Flattening <class 'ir.StatList'> 139137685159648
navigating children of <class 'ir.StatList'> 139137685351968 1
Flattening 139137685351968 into 139137685311696
Flattening <class 'ir.StatList'> 139137685351968
Flattening 139137685311696 into 139137685312656
Flattening <class 'ir.StatList'> 139137685311696
Flattening 139137685312656 into 139137685312800
Flattening <class 'ir.StatList'> 139137685312656
Flattening 139137685312800 into 139137685351152
Flattening <class 'ir.StatList'> 139137685312800
navigating children of <class 'ir.StatList'> 139137685350048 2
navigating children of <class 'ir.StatList'> 139137685313424 3
navigating children of <class 'ir.StatList'> 139137685313040 1
Flattening 139137685313040 into 139137685313424
Flattening <class 'ir.StatList'> 139137685313040
navigating children of <class 'ir.StatList'> 139137685313232 1
Flattening 139137685313232 into 139137685313424
Flattening <class 'ir.StatList'> 139137685313232
Flattening 139137685313424 into 139137685350048
Flattening <class 'ir.StatList'> 139137685313424
Flattening 139137685350048 into 139137685351152
Flattening <class 'ir.StatList'> 139137685350048
Flattening 139137685351152 into 139137685314096
Flattening <class 'ir.StatList'> 139137685351152
Flattening 139137685314096 into 139137684886480
Flattening <class 'ir.StatList'> 139137685314096
navigating children of <class 'ir.StatList'> 139137685349760 2
navigating children of <class 'ir.StatList'> 139137685314288 1
Flattening 139137685314288 into 139137685349760
Flattening <class 'ir.StatList'> 139137685314288
Flattening 139137685349760 into 139137684886480
Flattening <class 'ir.StatList'> 139137685349760
navigating children of <class 'ir.StatList'> 139137685349616 2
navigating children of <class 'ir.StatList'> 139137685314480 1
Flattening 139137685314480 into 139137685349616
Flattening <class 'ir.StatList'> 139137685314480
Flattening 139137685349616 into 139137684886480
Flattening <class 'ir.StatList'> 139137685349616
navigating children of <class 'ir.StatList'> 139137685240608 5
navigating children of <class 'ir.StatList'> 139137685240368 3
navigating children of <class 'ir.StatList'> 139137685240080 1
Flattening 139137685240080 into 139137685240368
Flattening <class 'ir.StatList'> 139137685240080
navigating children of <class 'ir.StatList'> 139137685240176 1
Flattening 139137685240176 into 139137685240368
Flattening <class 'ir.StatList'> 139137685240176
Flattening 139137685240368 into 139137685240608
Flattening <class 'ir.StatList'> 139137685240368
navigating children of <class 'ir.StatList'> 139137685348656 1
navigating children of <class 'ir.StatList'> 139137685239888 5
navigating children of <class 'ir.StatList'> 139137685239648 3
navigating children of <class 'ir.StatList'> 139137685239312 1
Flattening 139137685239312 into 139137685239648
Flattening <class 'ir.StatList'> 139137685239312
navigating children of <class 'ir.StatList'> 139137685239456 1
Flattening 139137685239456 into 139137685239648
Flattening <class 'ir.StatList'> 139137685239456
Flattening 139137685239648 into 139137685239888
Flattening <class 'ir.StatList'> 139137685239648
navigating children of <class 'ir.StatList'> 139137685148144 4
navigating children of <class 'ir.StatList'> 139137685288656 5
navigating children of <class 'ir.StatList'> 139137685288224 4
navigating children of <class 'ir.StatList'> 139137685287696 3
navigating children of <class 'ir.StatList'> 139137685287168 1
Flattening 139137685287168 into 139137685287696
Flattening <class 'ir.StatList'> 139137685287168
navigating children of <class 'ir.StatList'> 139137685287312 1
Flattening 139137685287312 into 139137685287696
Flattening <class 'ir.StatList'> 139137685287312
Flattening 139137685287696 into 139137685288224
Flattening <class 'ir.StatList'> 139137685287696
Flattening 139137685288224 into 139137685288656
Flattening <class 'ir.StatList'> 139137685288224
navigating children of <class 'ir.StatList'> 139137685287120 3
navigating children of <class 'ir.StatList'> 139137685315152 3
navigating children of <class 'ir.StatList'> 139137685314672 1
Flattening 139137685314672 into 139137685315152
Flattening <class 'ir.StatList'> 139137685314672
navigating children of <class 'ir.StatList'> 139137685314960 1
Flattening 139137685314960 into 139137685315152
Flattening <class 'ir.StatList'> 139137685314960
Flattening 139137685315152 into 139137685287120
Flattening <class 'ir.StatList'> 139137685315152
navigating children of <class 'ir.StatList'> 139137685315536 3
navigating children of <class 'ir.StatList'> 139137685148432 1
Flattening 139137685148432 into 139137685315536
Flattening <class 'ir.StatList'> 139137685148432
navigating children of <class 'ir.StatList'> 139137685315248 1
Flattening 139137685315248 into 139137685315536
Flattening <class 'ir.StatList'> 139137685315248
Flattening 139137685315536 into 139137685287120
Flattening <class 'ir.StatList'> 139137685315536
Flattening 139137685287120 into 139137685288656
Flattening <class 'ir.StatList'> 139137685287120
Flattening 139137685288656 into 139137685148144
Flattening <class 'ir.StatList'> 139137685288656
navigating children of <class 'ir.StatList'> 139137685238064 2
navigating children of <class 'ir.StatList'> 139137685237920 4
navigating children of <class 'ir.StatList'> 139137685290096 3
navigating children of <class 'ir.StatList'> 139137685289424 3
navigating children of <class 'ir.StatList'> 139137685288896 1
Flattening 139137685288896 into 139137685289424
Flattening <class 'ir.StatList'> 139137685288896
navigating children of <class 'ir.StatList'> 139137685289232 1
Flattening 139137685289232 into 139137685289424
Flattening <class 'ir.StatList'> 139137685289232
Flattening 139137685289424 into 139137685290096
Flattening <class 'ir.StatList'> 139137685289424
navigating children of <class 'ir.StatList'> 139137685289808 3
navigating children of <class 'ir.StatList'> 139137685148816 1
Flattening 139137685148816 into 139137685289808
Flattening <class 'ir.StatList'> 139137685148816
navigating children of <class 'ir.StatList'> 139137685289520 1
Flattening 139137685289520 into 139137685289808
Flattening <class 'ir.StatList'> 139137685289520
Flattening 139137685289808 into 139137685290096
Flattening <class 'ir.StatList'> 139137685289808
Flattening 139137685290096 into 139137685237920
Flattening <class 'ir.StatList'> 139137685290096
Flattening 139137685237920 into 139137685238064
Flattening <class 'ir.StatList'> 139137685237920
Flattening 139137685238064 into 139137685148144
Flattening <class 'ir.StatList'> 139137685238064
navigating children of <class 'ir.StatList'> 139137685150208 2
navigating children of <class 'ir.StatList'> 139137685238688 3
navigating children of <class 'ir.StatList'> 139137685238304 1
Flattening 139137685238304 into 139137685238688
Flattening <class 'ir.StatList'> 139137685238304
navigating children of <class 'ir.StatList'> 139137685238496 1
Flattening 139137685238496 into 139137685238688
Flattening <class 'ir.StatList'> 139137685238496
Flattening 139137685238688 into 139137685150208
Flattening <class 'ir.StatList'> 139137685238688
Flattening 139137685150208 into 139137685148144
Flattening <class 'ir.StatList'> 139137685150208
navigating children of <class 'ir.StatList'> 139137685150544 2
navigating children of <class 'ir.StatList'> 139137685239168 3
navigating children of <class 'ir.StatList'> 139137685238832 1
Flattening 139137685238832 into 139137685239168
Flattening <class 'ir.StatList'> 139137685238832
navigating children of <class 'ir.StatList'> 139137685238976 1
Flattening 139137685238976 into 139137685239168
Flattening <class 'ir.StatList'> 139137685238976
Flattening 139137685239168 into 139137685150544
Flattening <class 'ir.StatList'> 139137685239168
Flattening 139137685150544 into 139137685148144
Flattening <class 'ir.StatList'> 139137685150544
Flattening 139137685148144 into 139137685239888
Flattening <class 'ir.StatList'> 139137685148144
Flattening 139137685239888 into 139137685348656
Flattening <class 'ir.StatList'> 139137685239888
Flattening 139137685348656 into 139137685240608
Flattening <class 'ir.StatList'> 139137685348656
Flattening 139137685240608 into 139137684886480
Flattening <class 'ir.StatList'> 139137685240608
navigating children of <class 'ir.StatList'> 139137685234352 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685151600
navigating children of <class 'ir.StatList'> 139137685241616 3
navigating children of <class 'ir.StatList'> 139137685241328 1
Flattening 139137685241328 into 139137685241616
Flattening <class 'ir.StatList'> 139137685241328
navigating children of <class 'ir.StatList'> 139137685241424 1
Flattening 139137685241424 into 139137685241616
Flattening <class 'ir.StatList'> 139137685241424
Flattening 139137685241616 into 139137685234352
Flattening <class 'ir.StatList'> 139137685241616
navigating children of <class 'ir.StatList'> 139137685241136 2
navigating children of <class 'ir.StatList'> 139137685240992 1
Flattening 139137685240992 into 139137685241136
Flattening <class 'ir.StatList'> 139137685240992
Flattening 139137685241136 into 139137685234352
Flattening <class 'ir.StatList'> 139137685241136
navigating children of <class 'ir.StatList'> 139137685233872 3
navigating children of <class 'ir.StatList'> 139137685150928 1
Flattening 139137685150928 into 139137685233872
Flattening <class 'ir.StatList'> 139137685150928
navigating children of <class 'ir.StatList'> 139137685241808 1
Flattening 139137685241808 into 139137685233872
Flattening <class 'ir.StatList'> 139137685241808
Flattening 139137685233872 into 139137685234352
Flattening <class 'ir.StatList'> 139137685233872
Flattening 139137685234352 into 139137684886480
Flattening <class 'ir.StatList'> 139137685234352
navigating children of <class 'ir.StatList'> 139137685610304 2
navigating children of <class 'ir.StatList'> 139137685234256 1
Flattening 139137685234256 into 139137685610304
Flattening <class 'ir.StatList'> 139137685234256
Flattening 139137685610304 into 139137684886480
Flattening <class 'ir.StatList'> 139137685610304
navigating children of <class 'ir.StatList'> 139137685234976 2
navigating children of <class 'ir.StatList'> 139137685234832 1
Flattening 139137685234832 into 139137685234976
Flattening <class 'ir.StatList'> 139137685234832
Flattening 139137685234976 into 139137684886480
Flattening <class 'ir.StatList'> 139137685234976
navigating children of <class 'ir.StatList'> 139137685236848 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685609152
navigating children of <class 'ir.StatList'> 139137685235984 3
navigating children of <class 'ir.StatList'> 139137685235696 1
Flattening 139137685235696 into 139137685235984
Flattening <class 'ir.StatList'> 139137685235696
navigating children of <class 'ir.StatList'> 139137685235792 1
Flattening 139137685235792 into 139137685235984
Flattening <class 'ir.StatList'> 139137685235792
Flattening 139137685235984 into 139137685236848
Flattening <class 'ir.StatList'> 139137685235984
navigating children of <class 'ir.StatList'> 139137685235504 2
navigating children of <class 'ir.StatList'> 139137685235408 1
Flattening 139137685235408 into 139137685235504
Flattening <class 'ir.StatList'> 139137685235408
Flattening 139137685235504 into 139137685236848
Flattening <class 'ir.StatList'> 139137685235504
navigating children of <class 'ir.StatList'> 139137685236368 3
navigating children of <class 'ir.StatList'> 139137685608960 1
Flattening 139137685608960 into 139137685236368
Flattening <class 'ir.StatList'> 139137685608960
navigating children of <class 'ir.StatList'> 139137685236176 1
Flattening 139137685236176 into 139137685236368
Flattening <class 'ir.StatList'> 139137685236176
Flattening 139137685236368 into 139137685236848
Flattening <class 'ir.StatList'> 139137685236368
Flattening 139137685236848 into 139137684886480
Flattening <class 'ir.StatList'> 139137685236848
navigating children of <class 'ir.StatList'> 139137685290528 2
navigating children of <class 'ir.StatList'> 139137685240896 1
Flattening 139137685240896 into 139137685290528
Flattening <class 'ir.StatList'> 139137685240896
Flattening 139137685290528 into 139137684886480
Flattening <class 'ir.StatList'> 139137685290528
navigating children of <class 'ir.StatList'> 139137685290000 2
navigating children of <class 'ir.StatList'> 139137685290192 1
Flattening 139137685290192 into 139137685290000
Flattening <class 'ir.StatList'> 139137685290192
Flattening 139137685290000 into 139137684886480
Flattening <class 'ir.StatList'> 139137685290000
navigating children of <class 'ir.StatList'> 139137685607376 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607616
navigating children of <class 'ir.StatList'> 139137685156336 3
navigating children of <class 'ir.StatList'> 139137685311744 1
Flattening 139137685311744 into 139137685156336
Flattening <class 'ir.StatList'> 139137685311744
navigating children of <class 'ir.StatList'> 139137685159888 1
Flattening 139137685159888 into 139137685156336
Flattening <class 'ir.StatList'> 139137685159888
Flattening 139137685156336 into 139137685607376
Flattening <class 'ir.StatList'> 139137685156336
navigating children of <class 'ir.StatList'> 139137685312128 2
navigating children of <class 'ir.StatList'> 139137685312272 1
Flattening 139137685312272 into 139137685312128
Flattening <class 'ir.StatList'> 139137685312272
Flattening 139137685312128 into 139137685607376
Flattening <class 'ir.StatList'> 139137685312128
navigating children of <class 'ir.StatList'> 139137684887440 3
navigating children of <class 'ir.StatList'> 139137685322288 1
Flattening 139137685322288 into 139137684887440
Flattening <class 'ir.StatList'> 139137685322288
navigating children of <class 'ir.StatList'> 139137684889072 1
Flattening 139137684889072 into 139137684887440
Flattening <class 'ir.StatList'> 139137684889072
Flattening 139137684887440 into 139137685607376
Flattening <class 'ir.StatList'> 139137684887440
Flattening 139137685607376 into 139137684886480
Flattening <class 'ir.StatList'> 139137685607376
navigating children of <class 'ir.StatList'> 139137685607808 2
navigating children of <class 'ir.StatList'> 139137685607568 1
Flattening 139137685607568 into 139137685607808
Flattening <class 'ir.StatList'> 139137685607568
Flattening 139137685607808 into 139137684886480
Flattening <class 'ir.StatList'> 139137685607808
navigating children of <class 'ir.StatList'> 139137685148000 2
navigating children of <class 'ir.StatList'> 139137685609872 1
Flattening 139137685609872 into 139137685148000
Flattening <class 'ir.StatList'> 139137685609872
Flattening 139137685148000 into 139137684886480
Flattening <class 'ir.StatList'> 139137685148000
navigating children of <class 'ir.StatList'> 139137685205680 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685508688
navigating children of <class 'ir.StatList'> 139137685237520 3
navigating children of <class 'ir.StatList'> 139137685237232 1
Flattening 139137685237232 into 139137685237520
Flattening <class 'ir.StatList'> 139137685237232
navigating children of <class 'ir.StatList'> 139137685237328 1
Flattening 139137685237328 into 139137685237520
Flattening <class 'ir.StatList'> 139137685237328
Flattening 139137685237520 into 139137685205680
Flattening <class 'ir.StatList'> 139137685237520
navigating children of <class 'ir.StatList'> 139137685235168 2
navigating children of <class 'ir.StatList'> 139137685148240 1
Flattening 139137685148240 into 139137685235168
Flattening <class 'ir.StatList'> 139137685148240
Flattening 139137685235168 into 139137685205680
Flattening <class 'ir.StatList'> 139137685235168
navigating children of <class 'ir.StatList'> 139137685236944 2
navigating children of <class 'ir.StatList'> 139137685234736 1
Flattening 139137685234736 into 139137685236944
Flattening <class 'ir.StatList'> 139137685234736
Flattening 139137685236944 into 139137685205680
Flattening <class 'ir.StatList'> 139137685236944
navigating children of <class 'ir.StatList'> 139137685205200 3
navigating children of <class 'ir.StatList'> 139137685508880 1
Flattening 139137685508880 into 139137685205200
Flattening <class 'ir.StatList'> 139137685508880
navigating children of <class 'ir.StatList'> 139137685237712 1
Flattening 139137685237712 into 139137685205200
Flattening <class 'ir.StatList'> 139137685237712
Flattening 139137685205200 into 139137685205680
Flattening <class 'ir.StatList'> 139137685205200
Flattening 139137685205680 into 139137684886480
Flattening <class 'ir.StatList'> 139137685205680
navigating children of <class 'ir.StatList'> 139137685206064 2
navigating children of <class 'ir.StatList'> 139137685205920 1
Flattening 139137685205920 into 139137685206064
Flattening <class 'ir.StatList'> 139137685205920
Flattening 139137685206064 into 139137684886480
Flattening <class 'ir.StatList'> 139137685206064
navigating children of <class 'ir.StatList'> 139137685206544 2
navigating children of <class 'ir.StatList'> 139137685206448 1
Flattening 139137685206448 into 139137685206544
Flattening <class 'ir.StatList'> 139137685206448
Flattening 139137685206544 into 139137684886480
Flattening <class 'ir.StatList'> 139137685206544
navigating children of <class 'ir.StatList'> 139137685208416 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685512000
navigating children of <class 'ir.StatList'> 139137685207552 3
navigating children of <class 'ir.StatList'> 139137685207264 1
Flattening 139137685207264 into 139137685207552
Flattening <class 'ir.StatList'> 139137685207264
navigating children of <class 'ir.StatList'> 139137685207360 1
Flattening 139137685207360 into 139137685207552
Flattening <class 'ir.StatList'> 139137685207360
Flattening 139137685207552 into 139137685208416
Flattening <class 'ir.StatList'> 139137685207552
navigating children of <class 'ir.StatList'> 139137685207072 2
navigating children of <class 'ir.StatList'> 139137685206976 1
Flattening 139137685206976 into 139137685207072
Flattening <class 'ir.StatList'> 139137685206976
Flattening 139137685207072 into 139137685208416
Flattening <class 'ir.StatList'> 139137685207072
navigating children of <class 'ir.StatList'> 139137685207936 3
navigating children of <class 'ir.StatList'> 139137685511808 1
Flattening 139137685511808 into 139137685207936
Flattening <class 'ir.StatList'> 139137685511808
navigating children of <class 'ir.StatList'> 139137685207744 1
Flattening 139137685207744 into 139137685207936
Flattening <class 'ir.StatList'> 139137685207744
Flattening 139137685207936 into 139137685208416
Flattening <class 'ir.StatList'> 139137685207936
Flattening 139137685208416 into 139137684886480
Flattening <class 'ir.StatList'> 139137685208416
navigating children of <class 'ir.StatList'> 139137685208800 2
navigating children of <class 'ir.StatList'> 139137685208656 1
Flattening 139137685208656 into 139137685208800
Flattening <class 'ir.StatList'> 139137685208656
Flattening 139137685208800 into 139137684886480
Flattening <class 'ir.StatList'> 139137685208800
navigating children of <class 'ir.StatList'> 139137685192960 2
navigating children of <class 'ir.StatList'> 139137685192816 1
Flattening 139137685192816 into 139137685192960
Flattening <class 'ir.StatList'> 139137685192816
Flattening 139137685192960 into 139137684886480
Flattening <class 'ir.StatList'> 139137685192960
navigating children of <class 'ir.StatList'> 139137685194832 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685510464
navigating children of <class 'ir.StatList'> 139137685193968 3
navigating children of <class 'ir.StatList'> 139137685193680 1
Flattening 139137685193680 into 139137685193968
Flattening <class 'ir.StatList'> 139137685193680
navigating children of <class 'ir.StatList'> 139137685193776 1
Flattening 139137685193776 into 139137685193968
Flattening <class 'ir.StatList'> 139137685193776
Flattening 139137685193968 into 139137685194832
Flattening <class 'ir.StatList'> 139137685193968
navigating children of <class 'ir.StatList'> 139137685193488 2
navigating children of <class 'ir.StatList'> 139137685193392 1
Flattening 139137685193392 into 139137685193488
Flattening <class 'ir.StatList'> 139137685193392
Flattening 139137685193488 into 139137685194832
Flattening <class 'ir.StatList'> 139137685193488
navigating children of <class 'ir.StatList'> 139137685194352 3
navigating children of <class 'ir.StatList'> 139137685510272 1
Flattening 139137685510272 into 139137685194352
Flattening <class 'ir.StatList'> 139137685510272
navigating children of <class 'ir.StatList'> 139137685194160 1
Flattening 139137685194160 into 139137685194352
Flattening <class 'ir.StatList'> 139137685194160
Flattening 139137685194352 into 139137685194832
Flattening <class 'ir.StatList'> 139137685194352
Flattening 139137685194832 into 139137684886480
Flattening <class 'ir.StatList'> 139137685194832
navigating children of <class 'ir.StatList'> 139137685195216 2
navigating children of <class 'ir.StatList'> 139137685195072 1
Flattening 139137685195072 into 139137685195216
Flattening <class 'ir.StatList'> 139137685195072
Flattening 139137685195216 into 139137684886480
Flattening <class 'ir.StatList'> 139137685195216
navigating children of <class 'ir.StatList'> 139137685195696 2
navigating children of <class 'ir.StatList'> 139137685195600 1
Flattening 139137685195600 into 139137685195696
Flattening <class 'ir.StatList'> 139137685195600
Flattening 139137685195696 into 139137684886480
Flattening <class 'ir.StatList'> 139137685195696
navigating children of <class 'ir.StatList'> 139137684874048 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419248
navigating children of <class 'ir.StatList'> 139137685196704 3
navigating children of <class 'ir.StatList'> 139137685196416 1
Flattening 139137685196416 into 139137685196704
Flattening <class 'ir.StatList'> 139137685196416
navigating children of <class 'ir.StatList'> 139137685196512 1
Flattening 139137685196512 into 139137685196704
Flattening <class 'ir.StatList'> 139137685196512
Flattening 139137685196704 into 139137684874048
Flattening <class 'ir.StatList'> 139137685196704
navigating children of <class 'ir.StatList'> 139137685196224 2
navigating children of <class 'ir.StatList'> 139137685196128 1
Flattening 139137685196128 into 139137685196224
Flattening <class 'ir.StatList'> 139137685196128
Flattening 139137685196224 into 139137684874048
Flattening <class 'ir.StatList'> 139137685196224
navigating children of <class 'ir.StatList'> 139137684873568 3
navigating children of <class 'ir.StatList'> 139137685419296 1
Flattening 139137685419296 into 139137684873568
Flattening <class 'ir.StatList'> 139137685419296
navigating children of <class 'ir.StatList'> 139137684873376 1
Flattening 139137684873376 into 139137684873568
Flattening <class 'ir.StatList'> 139137684873376
Flattening 139137684873568 into 139137684874048
Flattening <class 'ir.StatList'> 139137684873568
Flattening 139137684874048 into 139137684886480
Flattening <class 'ir.StatList'> 139137684874048
navigating children of <class 'ir.StatList'> 139137684874432 2
navigating children of <class 'ir.StatList'> 139137684874288 1
Flattening 139137684874288 into 139137684874432
Flattening <class 'ir.StatList'> 139137684874288
Flattening 139137684874432 into 139137684886480
Flattening <class 'ir.StatList'> 139137684874432
navigating children of <class 'ir.StatList'> 139137685420064 2
navigating children of <class 'ir.StatList'> 139137684874624 1
Flattening 139137684874624 into 139137685420064
Flattening <class 'ir.StatList'> 139137684874624
Flattening 139137685420064 into 139137684886480
Flattening <class 'ir.StatList'> 139137685420064
navigating children of <class 'ir.StatList'> 139137684875104 2
navigating children of <class 'ir.StatList'> 139137684875008 1
Flattening 139137684875008 into 139137684875104
Flattening <class 'ir.StatList'> 139137684875008
Flattening 139137684875104 into 139137684886480
Flattening <class 'ir.StatList'> 139137684875104
navigating children of <class 'ir.StatList'> 139137684890336 10
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421456
navigating children of <class 'ir.StatList'> 139137684877120 3
navigating children of <class 'ir.StatList'> 139137684876832 1
Flattening 139137684876832 into 139137684877120
Flattening <class 'ir.StatList'> 139137684876832
navigating children of <class 'ir.StatList'> 139137684876928 1
Flattening 139137684876928 into 139137684877120
Flattening <class 'ir.StatList'> 139137684876928
Flattening 139137684877120 into 139137684890336
Flattening <class 'ir.StatList'> 139137684877120
navigating children of <class 'ir.StatList'> 139137685420976 2
navigating children of <class 'ir.StatList'> 139137684875680 3
navigating children of <class 'ir.StatList'> 139137684875344 1
Flattening 139137684875344 into 139137684875680
Flattening <class 'ir.StatList'> 139137684875344
navigating children of <class 'ir.StatList'> 139137684875488 1
Flattening 139137684875488 into 139137684875680
Flattening <class 'ir.StatList'> 139137684875488
Flattening 139137684875680 into 139137685420976
Flattening <class 'ir.StatList'> 139137684875680
Flattening 139137685420976 into 139137684890336
Flattening <class 'ir.StatList'> 139137685420976
navigating children of <class 'ir.StatList'> 139137684876160 2
navigating children of <class 'ir.StatList'> 139137684876064 1
Flattening 139137684876064 into 139137684876160
Flattening <class 'ir.StatList'> 139137684876064
Flattening 139137684876160 into 139137684890336
Flattening <class 'ir.StatList'> 139137684876160
navigating children of <class 'ir.StatList'> 139137684876640 2
navigating children of <class 'ir.StatList'> 139137684876544 1
Flattening 139137684876544 into 139137684876640
Flattening <class 'ir.StatList'> 139137684876544
Flattening 139137684876640 into 139137684890336
Flattening <class 'ir.StatList'> 139137684876640
navigating children of <class 'ir.StatList'> 139137684889856 3
navigating children of <class 'ir.StatList'> 139137685421888 1
Flattening 139137685421888 into 139137684889856
Flattening <class 'ir.StatList'> 139137685421888
navigating children of <class 'ir.StatList'> 139137684877264 1
Flattening 139137684877264 into 139137684889856
Flattening <class 'ir.StatList'> 139137684877264
Flattening 139137684889856 into 139137684890336
Flattening <class 'ir.StatList'> 139137684889856
Flattening 139137684890336 into 139137684886480
Flattening <class 'ir.StatList'> 139137684890336
navigating children of <class 'ir.StatList'> 139137684890720 2
navigating children of <class 'ir.StatList'> 139137684890576 1
Flattening 139137684890576 into 139137684890720
Flattening <class 'ir.StatList'> 139137684890576
Flattening 139137684890720 into 139137684886480
Flattening <class 'ir.StatList'> 139137684890720
navigating children of <class 'ir.StatList'> 139137684891200 2
navigating children of <class 'ir.StatList'> 139137684891104 1
Flattening 139137684891104 into 139137684891200
Flattening <class 'ir.StatList'> 139137684891104
Flattening 139137684891200 into 139137684886480
Flattening <class 'ir.StatList'> 139137684891200
navigating children of <class 'ir.StatList'> 139137685847440 2
navigating children of <class 'ir.StatList'> 139137684891392 1
Flattening 139137684891392 into 139137685847440
Flattening <class 'ir.StatList'> 139137684891392
Flattening 139137685847440 into 139137684886480
Flattening <class 'ir.StatList'> 139137685847440
navigating children of <class 'ir.StatList'> 139137684891872 2
navigating children of <class 'ir.StatList'> 139137684891776 1
Flattening 139137684891776 into 139137684891872
Flattening <class 'ir.StatList'> 139137684891776
Flattening 139137684891872 into 139137684886480
Flattening <class 'ir.StatList'> 139137684891872
navigating children of <class 'ir.StatList'> 139137684927104 9
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846480
navigating children of <class 'ir.StatList'> 139137684893408 3
navigating children of <class 'ir.StatList'> 139137684893120 1
Flattening 139137684893120 into 139137684893408
Flattening <class 'ir.StatList'> 139137684893120
navigating children of <class 'ir.StatList'> 139137684893216 1
Flattening 139137684893216 into 139137684893408
Flattening <class 'ir.StatList'> 139137684893216
Flattening 139137684893408 into 139137684927104
Flattening <class 'ir.StatList'> 139137684893408
navigating children of <class 'ir.StatList'> 139137685846960 2
navigating children of <class 'ir.StatList'> 139137684892448 3
navigating children of <class 'ir.StatList'> 139137684892112 1
Flattening 139137684892112 into 139137684892448
Flattening <class 'ir.StatList'> 139137684892112
navigating children of <class 'ir.StatList'> 139137684892256 1
Flattening 139137684892256 into 139137684892448
Flattening <class 'ir.StatList'> 139137684892256
Flattening 139137684892448 into 139137685846960
Flattening <class 'ir.StatList'> 139137684892448
Flattening 139137685846960 into 139137684927104
Flattening <class 'ir.StatList'> 139137685846960
navigating children of <class 'ir.StatList'> 139137684892928 2
navigating children of <class 'ir.StatList'> 139137684892832 1
Flattening 139137684892832 into 139137684892928
Flattening <class 'ir.StatList'> 139137684892832
Flattening 139137684892928 into 139137684927104
Flattening <class 'ir.StatList'> 139137684892928
navigating children of <class 'ir.StatList'> 139137684926624 3
navigating children of <class 'ir.StatList'> 139137685847632 1
Flattening 139137685847632 into 139137684926624
Flattening <class 'ir.StatList'> 139137685847632
navigating children of <class 'ir.StatList'> 139137684893600 1
Flattening 139137684893600 into 139137684926624
Flattening <class 'ir.StatList'> 139137684893600
Flattening 139137684926624 into 139137684927104
Flattening <class 'ir.StatList'> 139137684926624
Flattening 139137684927104 into 139137684886480
Flattening <class 'ir.StatList'> 139137684927104
navigating children of <class 'ir.StatList'> 139137684927488 2
navigating children of <class 'ir.StatList'> 139137684927344 1
Flattening 139137684927344 into 139137684927488
Flattening <class 'ir.StatList'> 139137684927344
Flattening 139137684927488 into 139137684886480
Flattening <class 'ir.StatList'> 139137684927488
navigating children of <class 'ir.StatList'> 139137684927968 2
navigating children of <class 'ir.StatList'> 139137684927872 1
Flattening 139137684927872 into 139137684927968
Flattening <class 'ir.StatList'> 139137684927872
Flattening 139137684927968 into 139137684886480
Flattening <class 'ir.StatList'> 139137684927968
navigating children of <class 'ir.StatList'> 139137684928448 2
navigating children of <class 'ir.StatList'> 139137684928352 1
Flattening 139137684928352 into 139137684928448
Flattening <class 'ir.StatList'> 139137684928352
Flattening 139137684928448 into 139137684886480
Flattening <class 'ir.StatList'> 139137684928448
navigating children of <class 'ir.StatList'> 139137685337136 2
navigating children of <class 'ir.StatList'> 139137684928640 1
Flattening 139137684928640 into 139137685337136
Flattening <class 'ir.StatList'> 139137684928640
Flattening 139137685337136 into 139137684886480
Flattening <class 'ir.StatList'> 139137685337136
navigating children of <class 'ir.StatList'> 139137684940928 8
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685360544
navigating children of <class 'ir.StatList'> 139137684940064 3
navigating children of <class 'ir.StatList'> 139137684939728 1
Flattening 139137684939728 into 139137684940064
Flattening <class 'ir.StatList'> 139137684939728
navigating children of <class 'ir.StatList'> 139137684939872 1
Flattening 139137684939872 into 139137684940064
Flattening <class 'ir.StatList'> 139137684939872
Flattening 139137684940064 into 139137684940928
Flattening <class 'ir.StatList'> 139137684940064
navigating children of <class 'ir.StatList'> 139137684939488 5
navigating children of <class 'ir.StatList'> 139137684939056 3
navigating children of <class 'ir.StatList'> 139137684930464 4
navigating children of <class 'ir.StatList'> 139137684929936 3
navigating children of <class 'ir.StatList'> 139137684929408 1
Flattening 139137684929408 into 139137684929936
Flattening <class 'ir.StatList'> 139137684929408
navigating children of <class 'ir.StatList'> 139137684929552 1
Flattening 139137684929552 into 139137684929936
Flattening <class 'ir.StatList'> 139137684929552
Flattening 139137684929936 into 139137684930464
Flattening <class 'ir.StatList'> 139137684929936
Flattening 139137684930464 into 139137684939056
Flattening <class 'ir.StatList'> 139137684930464
navigating children of <class 'ir.StatList'> 139137684938816 1
Flattening 139137684938816 into 139137684939056
Flattening <class 'ir.StatList'> 139137684938816
Flattening 139137684939056 into 139137684939488
Flattening <class 'ir.StatList'> 139137684939056
navigating children of <class 'ir.StatList'> 139137684929264 3
navigating children of <class 'ir.StatList'> 139137684928832 1
Flattening 139137684928832 into 139137684929264
Flattening <class 'ir.StatList'> 139137684928832
navigating children of <class 'ir.StatList'> 139137684929072 1
Flattening 139137684929072 into 139137684929264
Flattening <class 'ir.StatList'> 139137684929072
Flattening 139137684929264 into 139137684939488
Flattening <class 'ir.StatList'> 139137684929264
Flattening 139137684939488 into 139137684940928
Flattening <class 'ir.StatList'> 139137684939488
navigating children of <class 'ir.StatList'> 139137684940448 3
navigating children of <class 'ir.StatList'> 139137685338624 1
Flattening 139137685338624 into 139137684940448
Flattening <class 'ir.StatList'> 139137685338624
navigating children of <class 'ir.StatList'> 139137684940256 1
Flattening 139137684940256 into 139137684940448
Flattening <class 'ir.StatList'> 139137684940256
Flattening 139137684940448 into 139137684940928
Flattening <class 'ir.StatList'> 139137684940448
Flattening 139137684940928 into 139137684886480
Flattening <class 'ir.StatList'> 139137684940928
navigating children of <class 'ir.StatList'> 139137684976832 4
navigating children of <class 'ir.StatList'> 139137684976736 3
navigating children of <class 'ir.StatList'> 139137684976400 1
Flattening 139137684976400 into 139137684976736
Flattening <class 'ir.StatList'> 139137684976400
navigating children of <class 'ir.StatList'> 139137684976544 1
Flattening 139137684976544 into 139137684976736
Flattening <class 'ir.StatList'> 139137684976544
Flattening 139137684976736 into 139137684976832
Flattening <class 'ir.StatList'> 139137684976736
navigating children of <class 'ir.StatList'> 139137685339344 4
navigating children of <class 'ir.StatList'> 139137684941360 2
navigating children of <class 'ir.StatList'> 139137684941216 1
Flattening 139137684941216 into 139137684941360
Flattening <class 'ir.StatList'> 139137684941216
Flattening 139137684941360 into 139137685339344
Flattening <class 'ir.StatList'> 139137684941360
navigating children of <class 'ir.StatList'> 139137684963824 2
navigating children of <class 'ir.StatList'> 139137684963680 4
navigating children of <class 'ir.StatList'> 139137684942176 3
navigating children of <class 'ir.StatList'> 139137684941600 1
Flattening 139137684941600 into 139137684942176
Flattening <class 'ir.StatList'> 139137684941600
navigating children of <class 'ir.StatList'> 139137684941792 1
Flattening 139137684941792 into 139137684942176
Flattening <class 'ir.StatList'> 139137684941792
Flattening 139137684942176 into 139137684963680
Flattening <class 'ir.StatList'> 139137684942176
Flattening 139137684963680 into 139137684963824
Flattening <class 'ir.StatList'> 139137684963680
Flattening 139137684963824 into 139137685339344
Flattening <class 'ir.StatList'> 139137684963824
navigating children of <class 'ir.StatList'> 139137684965936 2
navigating children of <class 'ir.StatList'> 139137684965696 4
navigating children of <class 'ir.StatList'> 139137684964736 3
navigating children of <class 'ir.StatList'> 139137684964064 1
Flattening 139137684964064 into 139137684964736
Flattening <class 'ir.StatList'> 139137684964064
navigating children of <class 'ir.StatList'> 139137684964352 1
Flattening 139137684964352 into 139137684964736
Flattening <class 'ir.StatList'> 139137684964352
Flattening 139137684964736 into 139137684965696
Flattening <class 'ir.StatList'> 139137684964736
Flattening 139137684965696 into 139137684965936
Flattening <class 'ir.StatList'> 139137684965696
Flattening 139137684965936 into 139137685339344
Flattening <class 'ir.StatList'> 139137684965936
navigating children of <class 'ir.StatList'> 139137684976160 2
navigating children of <class 'ir.StatList'> 139137684976016 4
navigating children of <class 'ir.StatList'> 139137684966800 3
navigating children of <class 'ir.StatList'> 139137684966128 1
Flattening 139137684966128 into 139137684966800
Flattening <class 'ir.StatList'> 139137684966128
navigating children of <class 'ir.StatList'> 139137684966416 1
Flattening 139137684966416 into 139137684966800
Flattening <class 'ir.StatList'> 139137684966416
Flattening 139137684966800 into 139137684976016
Flattening <class 'ir.StatList'> 139137684966800
Flattening 139137684976016 into 139137684976160
Flattening <class 'ir.StatList'> 139137684976016
Flattening 139137684976160 into 139137685339344
Flattening <class 'ir.StatList'> 139137684976160
Flattening 139137685339344 into 139137684976832
Flattening <class 'ir.StatList'> 139137685339344
Flattening 139137684976832 into 139137684886480
Flattening <class 'ir.StatList'> 139137684976832
navigating children of <class 'ir.StatList'> 139137684977312 2
navigating children of <class 'ir.StatList'> 139137684977216 1
Flattening 139137684977216 into 139137684977312
Flattening <class 'ir.StatList'> 139137684977216
Flattening 139137684977312 into 139137684886480
Flattening <class 'ir.StatList'> 139137684977312
Not flattening 139137684886480 into 139137685320896 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 139137684886480
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 2
navigating children of <class 'ir.StatList'> 139137684885952 2
navigating children of <class 'ir.StatList'> 139137684977552 1
Flattening 139137684977552 into 139137684885952
Flattening <class 'ir.StatList'> 139137684977552
Flattening 139137684885952 into 139137684885760
Flattening <class 'ir.StatList'> 139137684885952
navigating children of <class 'ir.StatList'> 139137684886240 2
navigating children of <class 'ir.StatList'> 139137684978128 3
navigating children of <class 'ir.StatList'> 139137684977744 1
Flattening 139137684977744 into 139137684978128
Flattening <class 'ir.StatList'> 139137684977744
navigating children of <class 'ir.StatList'> 139137684977936 1
Flattening 139137684977936 into 139137684978128
Flattening <class 'ir.StatList'> 139137684977936
Flattening 139137684978128 into 139137684886240
Flattening <class 'ir.StatList'> 139137684978128
Flattening 139137684886240 into 139137684885760
Flattening <class 'ir.StatList'> 139137684886240
Not flattening 139137684885760 into 139137685358720 of type <class 'ir.Block'>
Flattening <class 'ir.StatList'> 139137684885760
Failed!
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896

--- IR Tree After Flattening ---
<class 'ir.Block'> 139137685320896 {
                                                                      <<<<<----- BUG? MISSING PARENT
	body: 	<class 'ir.StatList'> 139137684886480 {
	parent = 139137685320896
		children:
		reg int t0 <- 1
		reg int t1 <- minus reg int t0
		global int x <- reg int t1
		read reg int t2
		global int x <- reg int t2
		reg int t8 <- global int x
		reg int t9 <- 100
		reg int32_t t10 <- reg int t8 gtr reg int t9
		branch on reg int32_t t10 to auto label label2
		reg int t7 <- global int x
		print reg int t7
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 139137685322816 {
		parent = 139137684886480
		}
		reg int t3 <- global int x
		reg int t5 <- minus reg int t3
		print reg int t5
		label1: <class 'ir.EmptyStat'> 139137684887104 {
		parent = 139137684886480
		}
		reg int t11 <- 1
		global int x <- reg int t11
		label3: <class 'ir.EmptyStat'> 139137685156864 {
		parent = 139137684886480
		}
		reg int t17 <- global int x
		reg int t18 <- 10
		reg int32_t t19 <- reg int t17 leq reg int t18
		branch on not reg int32_t t19 to auto label label4
		call  to auto function square
		reg int t12 <- global int x
		reg int t13 <- 1
		reg int32_t t14 <- reg int t12 plus reg int t13
		global int x <- reg int32_t t14
		reg int t16 <- global int squ
		print reg int t16
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 139137684888304 {
		parent = 139137684886480
		}
		reg int t20 <- 101
		global int x <- reg int t20
		label5: <class 'ir.EmptyStat'> 139137685313520 {
		parent = 139137684886480
		}
		reg int t44 <- global int x
		reg int t45 <- 105
		reg int32_t t46 <- reg int t44 leq reg int t45
		branch on not reg int32_t t46 to auto label label6
		reg int t26 <- global int x
		reg int t21 <- global int x
		reg int t22 <- 100
		reg int32_t t23 <- reg int t21 minus reg int t22
		reg int t24 <- 1
		reg int32_t t25 <- reg int32_t t23 times reg int t24
		reg &char t27 <- &(global char[5] arr)
		reg &char t28 <- reg &char t27 plus reg int32_t t25
		[reg &char t28] <- reg int t26
		reg int t29 <- global int x
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t34 <- reg int32_t t31 times reg int t32
		reg &char t39 <- &(global char[5] arr)
		reg &char t40 <- reg &char t39 plus reg int32_t t34
		reg char t38 <- [reg &char t40]
		print reg char t38
		reg int t41 <- global int x
		reg int t42 <- 1
		reg int32_t t43 <- reg int t41 plus reg int t42
		global int x <- reg int32_t t43
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 139137684889456 {
		parent = 139137684886480
		}
		reg int t47 <- 1
		global int x <- reg int t47
		reg int t48 <- 1
		global int y <- reg int t48
		label9: <class 'ir.EmptyStat'> 139137685240080 {
		parent = 139137684886480
		}
		reg int t88 <- global int x
		reg int t89 <- 5
		reg int32_t t90 <- reg int t88 leq reg int t89
		branch on not reg int32_t t90 to auto label label10
		label7: <class 'ir.EmptyStat'> 139137685239312 {
		parent = 139137684886480
		}
		reg int t85 <- global int y
		reg int t86 <- 5
		reg int32_t t87 <- reg int t85 leq reg int t86
		branch on not reg int32_t t87 to auto label label8
		reg int t56 <- global int x
		reg int t57 <- 1
		reg int32_t t59 <- reg int t56 times reg int t57
		reg &char t61 <- &(global char[5] arr)
		reg &char t62 <- reg &char t61 plus reg int32_t t59
		reg char t60 <- [reg &char t62]
		reg int t49 <- global int x
		reg int t50 <- 10
		reg int32_t t51 <- reg int t49 times reg int t50
		reg int t52 <- global int y
		reg int t53 <- 2
		reg int32_t t54 <- reg int t52 times reg int t53
		reg int32_t t55 <- reg int32_t t51 plus reg int32_t t54
		reg &short t63 <- &(global short[5, 5] multid)
		reg &short t64 <- reg &short t63 plus reg int32_t t55
		[reg &short t64] <- reg char t60
		reg int t65 <- global int x
		reg int t66 <- 10
		reg int32_t t67 <- reg int t65 times reg int t66
		reg int t68 <- global int y
		reg int t69 <- 2
		reg int32_t t70 <- reg int t68 times reg int t69
		reg int32_t t72 <- reg int32_t t67 plus reg int32_t t70
		reg &short t77 <- &(global short[5, 5] multid)
		reg &short t78 <- reg &short t77 plus reg int32_t t72
		reg short t76 <- [reg &short t78]
		print reg short t76
		reg int t79 <- global int x
		reg int t80 <- 1
		reg int32_t t81 <- reg int t79 plus reg int t80
		global int x <- reg int32_t t81
		reg int t82 <- global int y
		reg int t83 <- 1
		reg int32_t t84 <- reg int t82 plus reg int t83
		global int y <- reg int32_t t84
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 139137685147712 {
		parent = 139137684886480
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 139137685348944 {
		parent = 139137684886480
		}
		<class 'ir.AssignStat'> 139137685151600 {
		parent = 139137684886480
			symbol: 	auto int a
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685150832 {
			parent = 139137685151600
				symbol: 	None
				value: 	10
			}
		}
		label11: <class 'ir.EmptyStat'> 139137685240368 {
		parent = 139137684886480
		}
		reg int t93 <- auto int a
		reg int t94 <- 20
		reg int32_t t95 <- reg int t93 leq reg int t94
		branch on not reg int32_t t95 to auto label label13
		reg int t92 <- auto int a
		print reg int t92
		reg int t96 <- auto int a
		reg int t97 <- 1
		reg int32_t t98 <- reg int t96 plus reg int t97
		auto int a <- reg int32_t t98
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 139137685234064 {
		parent = 139137684886480
		}
		reg int t99 <- 10
		global int i <- reg int t99
		reg int t101 <- 99991
		print reg int t101
		<class 'ir.AssignStat'> 139137685609152 {
		parent = 139137684886480
			symbol: 	auto int i
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685609728 {
			parent = 139137685609152
				symbol: 	None
				value: 	10
			}
		}
		label14: <class 'ir.EmptyStat'> 139137685234784 {
		parent = 139137684886480
		}
		reg int t104 <- auto int i
		reg int t105 <- 15
		reg int32_t t106 <- reg int t104 leq reg int t105
		branch on not reg int32_t t106 to auto label label16
		reg int t103 <- global int i
		print reg int t103
		reg int t107 <- auto int i
		reg int t108 <- 1
		reg int32_t t109 <- reg int t107 plus reg int t108
		auto int i <- reg int32_t t109
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 139137685236560 {
		parent = 139137684886480
		}
		reg int t111 <- 88881
		print reg int t111
		reg int t113 <- 99992
		print reg int t113
		<class 'ir.AssignStat'> 139137685607616 {
		parent = 139137684886480
			symbol: 	auto int j
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685608096 {
			parent = 139137685607616
				symbol: 	None
				value: 	5
			}
		}
		label17: <class 'ir.EmptyStat'> 139137685234832 {
		parent = 139137684886480
		}
		reg int t116 <- auto int j
		reg int t117 <- 5
		reg int32_t t118 <- reg int t116 leq reg int t117
		branch on not reg int32_t t118 to auto label label19
		reg int t115 <- global int j
		print reg int t115
		reg int t119 <- auto int j
		reg int t120 <- 1
		reg int32_t t121 <- reg int t119 plus reg int t120
		auto int j <- reg int32_t t121
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 139137685352256 {
		parent = 139137684886480
		}
		reg int t123 <- 88882
		print reg int t123
		reg int t125 <- 99993
		print reg int t125
		<class 'ir.AssignStat'> 139137685508688 {
		parent = 139137684886480
			symbol: 	auto int k
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685606560 {
			parent = 139137685508688
				symbol: 	None
				value: 	10
			}
		}
		label20: <class 'ir.EmptyStat'> 139137685235312 {
		parent = 139137684886480
		}
		reg int t130 <- auto int k
		reg int t131 <- 5
		reg int32_t t132 <- reg int t130 leq reg int t131
		branch on not reg int32_t t132 to auto label label22
		reg int t127 <- 77777
		print reg int t127
		reg int t129 <- global int k
		print reg int t129
		reg int t133 <- auto int k
		reg int t134 <- 1
		reg int32_t t135 <- reg int t133 plus reg int t134
		auto int k <- reg int32_t t135
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 139137685205392 {
		parent = 139137684886480
		}
		reg int t137 <- 88883
		print reg int t137
		reg int t139 <- 99994
		print reg int t139
		<class 'ir.AssignStat'> 139137685512000 {
		parent = 139137684886480
			symbol: 	auto int m
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685509792 {
			parent = 139137685512000
				symbol: 	None
				value: 	1
			}
		}
		label23: <class 'ir.EmptyStat'> 139137685508880 {
		parent = 139137684886480
		}
		reg int t142 <- auto int m
		reg int t143 <- 6
		reg int32_t t144 <- reg int t142 leq reg int t143
		branch on not reg int32_t t144 to auto label label25
		reg int t141 <- global int m
		print reg int t141
		reg int t145 <- auto int m
		reg int t146 <- 1
		reg int32_t t147 <- reg int t145 plus reg int t146
		auto int m <- reg int32_t t147
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 139137685208128 {
		parent = 139137684886480
		}
		reg int t149 <- 88884
		print reg int t149
		reg int t151 <- 99995
		print reg int t151
		<class 'ir.AssignStat'> 139137685510464 {
		parent = 139137684886480
			symbol: 	auto int n
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685510944 {
			parent = 139137685510464
				symbol: 	None
				value: 	1
			}
		}
		label26: <class 'ir.EmptyStat'> 139137685511808 {
		parent = 139137684886480
		}
		reg int t154 <- auto int n
		reg int t155 <- 7
		reg int32_t t156 <- reg int t154 leq reg int t155
		branch on not reg int32_t t156 to auto label label28
		reg int t153 <- global int n
		print reg int t153
		reg int t157 <- auto int n
		reg int t158 <- 1
		reg int32_t t159 <- reg int t157 plus reg int t158
		auto int n <- reg int32_t t159
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 139137685194544 {
		parent = 139137684886480
		}
		reg int t161 <- 88885
		print reg int t161
		reg int t163 <- 99996
		print reg int t163
		<class 'ir.AssignStat'> 139137685419248 {
		parent = 139137684886480
			symbol: 	auto int p
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685418768 {
			parent = 139137685419248
				symbol: 	None
				value: 	10
			}
		}
		label29: <class 'ir.EmptyStat'> 139137685510272 {
		parent = 139137684886480
		}
		reg int t166 <- auto int p
		reg int t167 <- 12
		reg int32_t t168 <- reg int t166 leq reg int t167
		branch on not reg int32_t t168 to auto label label31
		reg int t165 <- global int p
		print reg int t165
		reg int t169 <- auto int p
		reg int t170 <- 1
		reg int32_t t171 <- reg int t169 plus reg int t170
		auto int p <- reg int32_t t171
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 139137684873760 {
		parent = 139137684886480
		}
		reg int t173 <- 88886
		print reg int t173
		reg int t174 <- 0
		global int sum <- reg int t174
		reg int t176 <- 99997
		print reg int t176
		<class 'ir.AssignStat'> 139137685421456 {
		parent = 139137684886480
			symbol: 	auto int q
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685420400 {
			parent = 139137685421456
				symbol: 	None
				value: 	1
			}
		}
		label32: <class 'ir.EmptyStat'> 139137685419296 {
		parent = 139137684886480
		}
		reg int t184 <- auto int q
		reg int t185 <- 5
		reg int32_t t186 <- reg int t184 leq reg int t185
		branch on not reg int32_t t186 to auto label label34
		reg int t177 <- global int sum
		reg int t178 <- global int q
		reg int32_t t179 <- reg int t177 plus reg int t178
		global int sum <- reg int32_t t179
		reg int t181 <- global int q
		print reg int t181
		reg int t183 <- global int sum
		print reg int t183
		reg int t187 <- auto int q
		reg int t188 <- 1
		reg int32_t t189 <- reg int t187 plus reg int t188
		auto int q <- reg int32_t t189
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 139137684890048 {
		parent = 139137684886480
		}
		reg int t191 <- global int sum
		print reg int t191
		reg int t193 <- 88887
		print reg int t193
		reg int t194 <- 100
		global int x <- reg int t194
		reg int t196 <- 99998
		print reg int t196
		<class 'ir.AssignStat'> 139137685846480 {
		parent = 139137684886480
			symbol: 	auto int r
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685847728 {
			parent = 139137685846480
				symbol: 	None
				value: 	1
			}
		}
		label35: <class 'ir.EmptyStat'> 139137685421888 {
		parent = 139137684886480
		}
		reg int t202 <- auto int r
		reg int t203 <- 3
		reg int32_t t204 <- reg int t202 leq reg int t203
		branch on not reg int32_t t204 to auto label label37
		reg int t197 <- global int x
		reg int t198 <- global int r
		reg int32_t t199 <- reg int t197 plus reg int t198
		global int x <- reg int32_t t199
		reg int t201 <- global int x
		print reg int t201
		reg int t205 <- auto int r
		reg int t206 <- 1
		reg int32_t t207 <- reg int t205 plus reg int t206
		auto int r <- reg int32_t t207
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 139137684926816 {
		parent = 139137684886480
		}
		reg int t209 <- global int x
		print reg int t209
		reg int t211 <- 88888
		print reg int t211
		reg int t213 <- 999990
		print reg int t213
		reg int t214 <- 0
		global int sm_idx <- reg int t214
		<class 'ir.AssignStat'> 139137685360544 {
		parent = 139137684886480
			symbol: 	auto int sm_idx
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685337280 {
			parent = 139137685360544
				symbol: 	None
				value: 	0
			}
		}
		label38: <class 'ir.EmptyStat'> 139137685847632 {
		parent = 139137684886480
		}
		reg int t229 <- auto int sm_idx
		reg int t230 <- 127
		reg int32_t t231 <- reg int t229 leq reg int t230
		branch on not reg int32_t t231 to auto label label40
		reg int t218 <- global int sm_idx
		reg int t219 <- 4
		reg int32_t t221 <- reg int t218 times reg int t219
		reg &int t223 <- &(global int[128] sm_source_arr)
		reg &int t224 <- reg &int t223 plus reg int32_t t221
		reg int t222 <- [reg &int t224]
		reg int t225 <- global int sm_idx
		reg int32_t t226 <- reg int t222 plus reg int t225
		reg int t215 <- global int sm_idx
		reg int t216 <- 4
		reg int32_t t217 <- reg int t215 times reg int t216
		reg &int t227 <- &(global int[128] sm_dest_arr)
		reg &int t228 <- reg &int t227 plus reg int32_t t217
		[reg &int t228] <- reg int32_t t226
		reg int t232 <- auto int sm_idx
		reg int t233 <- 1
		reg int32_t t234 <- reg int t232 plus reg int t233
		auto int sm_idx <- reg int32_t t234
		branch  to auto label label38
		label40: <class 'ir.EmptyStat'> 139137684940640 {
		parent = 139137684886480
		}
		reg int t267 <- 127
		reg int t268 <- 0
		reg int32_t t269 <- reg int t267 geq reg int t268
		branch on not reg int32_t t269 to auto label label41
		reg int t236 <- 76543
		print reg int t236
		reg int t237 <- 0
		reg int t238 <- 4
		reg int32_t t240 <- reg int t237 times reg int t238
		reg &int t245 <- &(global int[128] sm_dest_arr)
		reg &int t246 <- reg &int t245 plus reg int32_t t240
		reg int t244 <- [reg &int t246]
		print reg int t244
		reg int t247 <- 64
		reg int t248 <- 4
		reg int32_t t250 <- reg int t247 times reg int t248
		reg &int t255 <- &(global int[128] sm_dest_arr)
		reg &int t256 <- reg &int t255 plus reg int32_t t250
		reg int t254 <- [reg &int t256]
		print reg int t254
		reg int t257 <- 127
		reg int t258 <- 4
		reg int32_t t260 <- reg int t257 times reg int t258
		reg &int t265 <- &(global int[128] sm_dest_arr)
		reg &int t266 <- reg &int t265 plus reg int32_t t260
		reg int t264 <- [reg &int t266]
		print reg int t264
		label41: <class 'ir.EmptyStat'> 139137685339296 {
		parent = 139137684886480
		}
		reg int t271 <- 888880
		print reg int t271
	}
	defs: 	<class 'ir.DefinitionList'> 139137686162448 {
	parent = 139137685320896
		children:
		<class 'ir.FunctionDef'> 139137684886384 {
		parent = 139137686162448
			body: 	<class 'ir.Block'> 139137685358720 {
			parent = 139137684886384
				body: 	<class 'ir.StatList'> 139137684885760 {
				parent = 139137685358720
					children:
					reg int t272 <- 1234
					auto int test <- reg int t272
					reg int t273 <- global int x
					reg int t274 <- global int x
					reg int32_t t275 <- reg int t273 times reg int t274
					global int squ <- reg int32_t t275
				}
				defs: 	<class 'ir.DefinitionList'> 139137684885568 {
				parent = 139137685358720
				}
				global_symtab: 	SymbolTable:
				global int x
				global int y
				global int squ
				global char[5] arr
				global short[5, 5] multid
				global int i
				global int j
				global int k
				global int m
				global int n
				global int p
				global int q
				global int sum
				global int r
				global int sm_idx
				global int[128] sm_source_arr
				global int[128] sm_dest_arr
				auto function square
				
			}
			symbol: 	auto function square
		}
	}
	global_symtab: 	SymbolTable:
	
}
navigating children of <class 'ir.StatList'> 139137684886480 357
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685151600
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685609152
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607616
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685508688
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685512000
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685510464
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419248
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421456
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846480
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685360544
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 6
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896

--- Performing Data Layout ---

--- IR Tree After Data Layout (Symbols might have allocinfo) ---
<class 'ir.Block'> 139137685320896 {
                                                                      <<<<<----- BUG? MISSING PARENT
	body: 	<class 'ir.StatList'> 139137684886480 {
	parent = 139137685320896
		children:
		reg int t0 <- 1
		reg int t1 <- minus reg int t0
		global int x; _g_x: def byte 4 <- reg int t1
		read reg int t2
		global int x; _g_x: def byte 4 <- reg int t2
		reg int t8 <- global int x; _g_x: def byte 4
		reg int t9 <- 100
		reg int32_t t10 <- reg int t8 gtr reg int t9
		branch on reg int32_t t10 to auto label label2
		reg int t7 <- global int x; _g_x: def byte 4
		print reg int t7
		branch  to auto label label1
		label2: <class 'ir.EmptyStat'> 139137685322816 {
		parent = 139137684886480
		}
		reg int t3 <- global int x; _g_x: def byte 4
		reg int t5 <- minus reg int t3
		print reg int t5
		label1: <class 'ir.EmptyStat'> 139137684887104 {
		parent = 139137684886480
		}
		reg int t11 <- 1
		global int x; _g_x: def byte 4 <- reg int t11
		label3: <class 'ir.EmptyStat'> 139137685156864 {
		parent = 139137684886480
		}
		reg int t17 <- global int x; _g_x: def byte 4
		reg int t18 <- 10
		reg int32_t t19 <- reg int t17 leq reg int t18
		branch on not reg int32_t t19 to auto label label4
		call  to auto function square
		reg int t12 <- global int x; _g_x: def byte 4
		reg int t13 <- 1
		reg int32_t t14 <- reg int t12 plus reg int t13
		global int x; _g_x: def byte 4 <- reg int32_t t14
		reg int t16 <- global int squ; _g_squ: def byte 4
		print reg int t16
		branch  to auto label label3
		label4: <class 'ir.EmptyStat'> 139137684888304 {
		parent = 139137684886480
		}
		reg int t20 <- 101
		global int x; _g_x: def byte 4 <- reg int t20
		label5: <class 'ir.EmptyStat'> 139137685313520 {
		parent = 139137684886480
		}
		reg int t44 <- global int x; _g_x: def byte 4
		reg int t45 <- 105
		reg int32_t t46 <- reg int t44 leq reg int t45
		branch on not reg int32_t t46 to auto label label6
		reg int t26 <- global int x; _g_x: def byte 4
		reg int t21 <- global int x; _g_x: def byte 4
		reg int t22 <- 100
		reg int32_t t23 <- reg int t21 minus reg int t22
		reg int t24 <- 1
		reg int32_t t25 <- reg int32_t t23 times reg int t24
		reg &char t27 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t28 <- reg &char t27 plus reg int32_t t25
		[reg &char t28] <- reg int t26
		reg int t29 <- global int x; _g_x: def byte 4
		reg int t30 <- 100
		reg int32_t t31 <- reg int t29 minus reg int t30
		reg int t32 <- 1
		reg int32_t t34 <- reg int32_t t31 times reg int t32
		reg &char t39 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t40 <- reg &char t39 plus reg int32_t t34
		reg char t38 <- [reg &char t40]
		print reg char t38
		reg int t41 <- global int x; _g_x: def byte 4
		reg int t42 <- 1
		reg int32_t t43 <- reg int t41 plus reg int t42
		global int x; _g_x: def byte 4 <- reg int32_t t43
		branch  to auto label label5
		label6: <class 'ir.EmptyStat'> 139137684889456 {
		parent = 139137684886480
		}
		reg int t47 <- 1
		global int x; _g_x: def byte 4 <- reg int t47
		reg int t48 <- 1
		global int y; _g_y: def byte 4 <- reg int t48
		label9: <class 'ir.EmptyStat'> 139137685240080 {
		parent = 139137684886480
		}
		reg int t88 <- global int x; _g_x: def byte 4
		reg int t89 <- 5
		reg int32_t t90 <- reg int t88 leq reg int t89
		branch on not reg int32_t t90 to auto label label10
		label7: <class 'ir.EmptyStat'> 139137685239312 {
		parent = 139137684886480
		}
		reg int t85 <- global int y; _g_y: def byte 4
		reg int t86 <- 5
		reg int32_t t87 <- reg int t85 leq reg int t86
		branch on not reg int32_t t87 to auto label label8
		reg int t56 <- global int x; _g_x: def byte 4
		reg int t57 <- 1
		reg int32_t t59 <- reg int t56 times reg int t57
		reg &char t61 <- &(global char[5] arr; _g_arr: def byte 5)
		reg &char t62 <- reg &char t61 plus reg int32_t t59
		reg char t60 <- [reg &char t62]
		reg int t49 <- global int x; _g_x: def byte 4
		reg int t50 <- 10
		reg int32_t t51 <- reg int t49 times reg int t50
		reg int t52 <- global int y; _g_y: def byte 4
		reg int t53 <- 2
		reg int32_t t54 <- reg int t52 times reg int t53
		reg int32_t t55 <- reg int32_t t51 plus reg int32_t t54
		reg &short t63 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t64 <- reg &short t63 plus reg int32_t t55
		[reg &short t64] <- reg char t60
		reg int t65 <- global int x; _g_x: def byte 4
		reg int t66 <- 10
		reg int32_t t67 <- reg int t65 times reg int t66
		reg int t68 <- global int y; _g_y: def byte 4
		reg int t69 <- 2
		reg int32_t t70 <- reg int t68 times reg int t69
		reg int32_t t72 <- reg int32_t t67 plus reg int32_t t70
		reg &short t77 <- &(global short[5, 5] multid; _g_multid: def byte 50)
		reg &short t78 <- reg &short t77 plus reg int32_t t72
		reg short t76 <- [reg &short t78]
		print reg short t76
		reg int t79 <- global int x; _g_x: def byte 4
		reg int t80 <- 1
		reg int32_t t81 <- reg int t79 plus reg int t80
		global int x; _g_x: def byte 4 <- reg int32_t t81
		reg int t82 <- global int y; _g_y: def byte 4
		reg int t83 <- 1
		reg int32_t t84 <- reg int t82 plus reg int t83
		global int y; _g_y: def byte 4 <- reg int32_t t84
		branch  to auto label label7
		label8: <class 'ir.EmptyStat'> 139137685147712 {
		parent = 139137684886480
		}
		branch  to auto label label9
		label10: <class 'ir.EmptyStat'> 139137685348944 {
		parent = 139137684886480
		}
		<class 'ir.AssignStat'> 139137685151600 {
		parent = 139137684886480
			symbol: 	auto int a
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685150832 {
			parent = 139137685151600
				symbol: 	None
				value: 	10
			}
		}
		label11: <class 'ir.EmptyStat'> 139137685240368 {
		parent = 139137684886480
		}
		reg int t93 <- auto int a
		reg int t94 <- 20
		reg int32_t t95 <- reg int t93 leq reg int t94
		branch on not reg int32_t t95 to auto label label13
		reg int t92 <- auto int a
		print reg int t92
		reg int t96 <- auto int a
		reg int t97 <- 1
		reg int32_t t98 <- reg int t96 plus reg int t97
		auto int a <- reg int32_t t98
		branch  to auto label label11
		label13: <class 'ir.EmptyStat'> 139137685234064 {
		parent = 139137684886480
		}
		reg int t99 <- 10
		global int i; _g_i: def byte 4 <- reg int t99
		reg int t101 <- 99991
		print reg int t101
		<class 'ir.AssignStat'> 139137685609152 {
		parent = 139137684886480
			symbol: 	auto int i
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685609728 {
			parent = 139137685609152
				symbol: 	None
				value: 	10
			}
		}
		label14: <class 'ir.EmptyStat'> 139137685234784 {
		parent = 139137684886480
		}
		reg int t104 <- auto int i
		reg int t105 <- 15
		reg int32_t t106 <- reg int t104 leq reg int t105
		branch on not reg int32_t t106 to auto label label16
		reg int t103 <- global int i; _g_i: def byte 4
		print reg int t103
		reg int t107 <- auto int i
		reg int t108 <- 1
		reg int32_t t109 <- reg int t107 plus reg int t108
		auto int i <- reg int32_t t109
		branch  to auto label label14
		label16: <class 'ir.EmptyStat'> 139137685236560 {
		parent = 139137684886480
		}
		reg int t111 <- 88881
		print reg int t111
		reg int t113 <- 99992
		print reg int t113
		<class 'ir.AssignStat'> 139137685607616 {
		parent = 139137684886480
			symbol: 	auto int j
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685608096 {
			parent = 139137685607616
				symbol: 	None
				value: 	5
			}
		}
		label17: <class 'ir.EmptyStat'> 139137685234832 {
		parent = 139137684886480
		}
		reg int t116 <- auto int j
		reg int t117 <- 5
		reg int32_t t118 <- reg int t116 leq reg int t117
		branch on not reg int32_t t118 to auto label label19
		reg int t115 <- global int j; _g_j: def byte 4
		print reg int t115
		reg int t119 <- auto int j
		reg int t120 <- 1
		reg int32_t t121 <- reg int t119 plus reg int t120
		auto int j <- reg int32_t t121
		branch  to auto label label17
		label19: <class 'ir.EmptyStat'> 139137685352256 {
		parent = 139137684886480
		}
		reg int t123 <- 88882
		print reg int t123
		reg int t125 <- 99993
		print reg int t125
		<class 'ir.AssignStat'> 139137685508688 {
		parent = 139137684886480
			symbol: 	auto int k
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685606560 {
			parent = 139137685508688
				symbol: 	None
				value: 	10
			}
		}
		label20: <class 'ir.EmptyStat'> 139137685235312 {
		parent = 139137684886480
		}
		reg int t130 <- auto int k
		reg int t131 <- 5
		reg int32_t t132 <- reg int t130 leq reg int t131
		branch on not reg int32_t t132 to auto label label22
		reg int t127 <- 77777
		print reg int t127
		reg int t129 <- global int k; _g_k: def byte 4
		print reg int t129
		reg int t133 <- auto int k
		reg int t134 <- 1
		reg int32_t t135 <- reg int t133 plus reg int t134
		auto int k <- reg int32_t t135
		branch  to auto label label20
		label22: <class 'ir.EmptyStat'> 139137685205392 {
		parent = 139137684886480
		}
		reg int t137 <- 88883
		print reg int t137
		reg int t139 <- 99994
		print reg int t139
		<class 'ir.AssignStat'> 139137685512000 {
		parent = 139137684886480
			symbol: 	auto int m
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685509792 {
			parent = 139137685512000
				symbol: 	None
				value: 	1
			}
		}
		label23: <class 'ir.EmptyStat'> 139137685508880 {
		parent = 139137684886480
		}
		reg int t142 <- auto int m
		reg int t143 <- 6
		reg int32_t t144 <- reg int t142 leq reg int t143
		branch on not reg int32_t t144 to auto label label25
		reg int t141 <- global int m; _g_m: def byte 4
		print reg int t141
		reg int t145 <- auto int m
		reg int t146 <- 1
		reg int32_t t147 <- reg int t145 plus reg int t146
		auto int m <- reg int32_t t147
		branch  to auto label label23
		label25: <class 'ir.EmptyStat'> 139137685208128 {
		parent = 139137684886480
		}
		reg int t149 <- 88884
		print reg int t149
		reg int t151 <- 99995
		print reg int t151
		<class 'ir.AssignStat'> 139137685510464 {
		parent = 139137684886480
			symbol: 	auto int n
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685510944 {
			parent = 139137685510464
				symbol: 	None
				value: 	1
			}
		}
		label26: <class 'ir.EmptyStat'> 139137685511808 {
		parent = 139137684886480
		}
		reg int t154 <- auto int n
		reg int t155 <- 7
		reg int32_t t156 <- reg int t154 leq reg int t155
		branch on not reg int32_t t156 to auto label label28
		reg int t153 <- global int n; _g_n: def byte 4
		print reg int t153
		reg int t157 <- auto int n
		reg int t158 <- 1
		reg int32_t t159 <- reg int t157 plus reg int t158
		auto int n <- reg int32_t t159
		branch  to auto label label26
		label28: <class 'ir.EmptyStat'> 139137685194544 {
		parent = 139137684886480
		}
		reg int t161 <- 88885
		print reg int t161
		reg int t163 <- 99996
		print reg int t163
		<class 'ir.AssignStat'> 139137685419248 {
		parent = 139137684886480
			symbol: 	auto int p
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685418768 {
			parent = 139137685419248
				symbol: 	None
				value: 	10
			}
		}
		label29: <class 'ir.EmptyStat'> 139137685510272 {
		parent = 139137684886480
		}
		reg int t166 <- auto int p
		reg int t167 <- 12
		reg int32_t t168 <- reg int t166 leq reg int t167
		branch on not reg int32_t t168 to auto label label31
		reg int t165 <- global int p; _g_p: def byte 4
		print reg int t165
		reg int t169 <- auto int p
		reg int t170 <- 1
		reg int32_t t171 <- reg int t169 plus reg int t170
		auto int p <- reg int32_t t171
		branch  to auto label label29
		label31: <class 'ir.EmptyStat'> 139137684873760 {
		parent = 139137684886480
		}
		reg int t173 <- 88886
		print reg int t173
		reg int t174 <- 0
		global int sum; _g_sum: def byte 4 <- reg int t174
		reg int t176 <- 99997
		print reg int t176
		<class 'ir.AssignStat'> 139137685421456 {
		parent = 139137684886480
			symbol: 	auto int q
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685420400 {
			parent = 139137685421456
				symbol: 	None
				value: 	1
			}
		}
		label32: <class 'ir.EmptyStat'> 139137685419296 {
		parent = 139137684886480
		}
		reg int t184 <- auto int q
		reg int t185 <- 5
		reg int32_t t186 <- reg int t184 leq reg int t185
		branch on not reg int32_t t186 to auto label label34
		reg int t177 <- global int sum; _g_sum: def byte 4
		reg int t178 <- global int q; _g_q: def byte 4
		reg int32_t t179 <- reg int t177 plus reg int t178
		global int sum; _g_sum: def byte 4 <- reg int32_t t179
		reg int t181 <- global int q; _g_q: def byte 4
		print reg int t181
		reg int t183 <- global int sum; _g_sum: def byte 4
		print reg int t183
		reg int t187 <- auto int q
		reg int t188 <- 1
		reg int32_t t189 <- reg int t187 plus reg int t188
		auto int q <- reg int32_t t189
		branch  to auto label label32
		label34: <class 'ir.EmptyStat'> 139137684890048 {
		parent = 139137684886480
		}
		reg int t191 <- global int sum; _g_sum: def byte 4
		print reg int t191
		reg int t193 <- 88887
		print reg int t193
		reg int t194 <- 100
		global int x; _g_x: def byte 4 <- reg int t194
		reg int t196 <- 99998
		print reg int t196
		<class 'ir.AssignStat'> 139137685846480 {
		parent = 139137684886480
			symbol: 	auto int r
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685847728 {
			parent = 139137685846480
				symbol: 	None
				value: 	1
			}
		}
		label35: <class 'ir.EmptyStat'> 139137685421888 {
		parent = 139137684886480
		}
		reg int t202 <- auto int r
		reg int t203 <- 3
		reg int32_t t204 <- reg int t202 leq reg int t203
		branch on not reg int32_t t204 to auto label label37
		reg int t197 <- global int x; _g_x: def byte 4
		reg int t198 <- global int r; _g_r: def byte 4
		reg int32_t t199 <- reg int t197 plus reg int t198
		global int x; _g_x: def byte 4 <- reg int32_t t199
		reg int t201 <- global int x; _g_x: def byte 4
		print reg int t201
		reg int t205 <- auto int r
		reg int t206 <- 1
		reg int32_t t207 <- reg int t205 plus reg int t206
		auto int r <- reg int32_t t207
		branch  to auto label label35
		label37: <class 'ir.EmptyStat'> 139137684926816 {
		parent = 139137684886480
		}
		reg int t209 <- global int x; _g_x: def byte 4
		print reg int t209
		reg int t211 <- 88888
		print reg int t211
		reg int t213 <- 999990
		print reg int t213
		reg int t214 <- 0
		global int sm_idx; _g_sm_idx: def byte 4 <- reg int t214
		<class 'ir.AssignStat'> 139137685360544 {
		parent = 139137684886480
			symbol: 	auto int sm_idx
			offset: 	None
			expr: 	<class 'ir.Const'> 139137685337280 {
			parent = 139137685360544
				symbol: 	None
				value: 	0
			}
		}
		label38: <class 'ir.EmptyStat'> 139137685847632 {
		parent = 139137684886480
		}
		reg int t229 <- auto int sm_idx
		reg int t230 <- 127
		reg int32_t t231 <- reg int t229 leq reg int t230
		branch on not reg int32_t t231 to auto label label40
		reg int t218 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int t219 <- 4
		reg int32_t t221 <- reg int t218 times reg int t219
		reg &int t223 <- &(global int[128] sm_source_arr; _g_sm_source_arr: def byte 512)
		reg &int t224 <- reg &int t223 plus reg int32_t t221
		reg int t222 <- [reg &int t224]
		reg int t225 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int32_t t226 <- reg int t222 plus reg int t225
		reg int t215 <- global int sm_idx; _g_sm_idx: def byte 4
		reg int t216 <- 4
		reg int32_t t217 <- reg int t215 times reg int t216
		reg &int t227 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t228 <- reg &int t227 plus reg int32_t t217
		[reg &int t228] <- reg int32_t t226
		reg int t232 <- auto int sm_idx
		reg int t233 <- 1
		reg int32_t t234 <- reg int t232 plus reg int t233
		auto int sm_idx <- reg int32_t t234
		branch  to auto label label38
		label40: <class 'ir.EmptyStat'> 139137684940640 {
		parent = 139137684886480
		}
		reg int t267 <- 127
		reg int t268 <- 0
		reg int32_t t269 <- reg int t267 geq reg int t268
		branch on not reg int32_t t269 to auto label label41
		reg int t236 <- 76543
		print reg int t236
		reg int t237 <- 0
		reg int t238 <- 4
		reg int32_t t240 <- reg int t237 times reg int t238
		reg &int t245 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t246 <- reg &int t245 plus reg int32_t t240
		reg int t244 <- [reg &int t246]
		print reg int t244
		reg int t247 <- 64
		reg int t248 <- 4
		reg int32_t t250 <- reg int t247 times reg int t248
		reg &int t255 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t256 <- reg &int t255 plus reg int32_t t250
		reg int t254 <- [reg &int t256]
		print reg int t254
		reg int t257 <- 127
		reg int t258 <- 4
		reg int32_t t260 <- reg int t257 times reg int t258
		reg &int t265 <- &(global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512)
		reg &int t266 <- reg &int t265 plus reg int32_t t260
		reg int t264 <- [reg &int t266]
		print reg int t264
		label41: <class 'ir.EmptyStat'> 139137685339296 {
		parent = 139137684886480
		}
		reg int t271 <- 888880
		print reg int t271
	}
	defs: 	<class 'ir.DefinitionList'> 139137686162448 {
	parent = 139137685320896
		children:
		<class 'ir.FunctionDef'> 139137684886384 {
		parent = 139137686162448
			body: 	<class 'ir.Block'> 139137685358720 {
			parent = 139137684886384
				body: 	<class 'ir.StatList'> 139137684885760 {
				parent = 139137685358720
					children:
					reg int t272 <- 1234
					auto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t272
					reg int t273 <- global int x; _g_x: def byte 4
					reg int t274 <- global int x; _g_x: def byte 4
					reg int32_t t275 <- reg int t273 times reg int t274
					global int squ; _g_squ: def byte 4 <- reg int32_t t275
				}
				defs: 	<class 'ir.DefinitionList'> 139137684885568 {
				parent = 139137685358720
				}
				global_symtab: 	SymbolTable:
				global int x; _g_x: def byte 4
				global int y; _g_y: def byte 4
				global int squ; _g_squ: def byte 4
				global char[5] arr; _g_arr: def byte 5
				global short[5, 5] multid; _g_multid: def byte 50
				global int i; _g_i: def byte 4
				global int j; _g_j: def byte 4
				global int k; _g_k: def byte 4
				global int m; _g_m: def byte 4
				global int n; _g_n: def byte 4
				global int p; _g_p: def byte 4
				global int q; _g_q: def byte 4
				global int sum; _g_sum: def byte 4
				global int r; _g_r: def byte 4
				global int sm_idx; _g_sm_idx: def byte 4
				global int[128] sm_source_arr; _g_sm_source_arr: def byte 512
				global int[128] sm_dest_arr; _g_sm_dest_arr: def byte 512
				auto function square
				
			}
			symbol: 	auto function square
		}
	}
	global_symtab: 	SymbolTable:
	
}

--- Constructing CFG ---
DEBUG: Starting CFG construction...
navigating children of <class 'ir.StatList'> 139137684886480 357
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685151600
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685609152
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685607616
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685508688
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685512000
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685510464
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685419248
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685421456
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685846480
successfully navigated attr  expr  of <class 'ir.AssignStat'> 139137685360544
successfully navigated attr  body  of <class 'ir.Block'> 139137685320896
navigating children of <class 'ir.DefinitionList'> 139137686162448 1
navigating children of <class 'ir.StatList'> 139137684885760 6
successfully navigated attr  body  of <class 'ir.Block'> 139137685358720
successfully navigated attr  defs  of <class 'ir.Block'> 139137685358720
successfully navigated attr  body  of <class 'ir.FunctionDef'> 139137684886384
successfully navigated attr  defs  of <class 'ir.Block'> 139137685320896
DEBUG: Found 2 StatLists
DEBUG: Processing StatList 0
DEBUG: Converting StatList with 357 statements
DEBUG: Processing instruction 0: LoadImmStat
DEBUG: Processing instruction 1: UnaryStat
DEBUG: Processing instruction 2: StoreStat
DEBUG: Processing instruction 3: ReadCommand
DEBUG: Processing instruction 4: StoreStat
DEBUG: Processing instruction 5: LoadStat
DEBUG: Processing instruction 6: LoadImmStat
DEBUG: Processing instruction 7: BinStat
DEBUG: Processing instruction 8: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label2
DEBUG: Created BB_139137684873424 ending with branch
DEBUG: Processing instruction 9: LoadStat
DEBUG: Processing instruction 10: PrintCommand
DEBUG: Processing instruction 11: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label1
DEBUG: Created BB_139137685194064 ending with branch
DEBUG: Processing instruction 12: EmptyStat
DEBUG: Found label: label2
DEBUG: Processing instruction 13: LoadStat
DEBUG: Processing instruction 14: UnaryStat
DEBUG: Processing instruction 15: PrintCommand
DEBUG: Processing instruction 16: EmptyStat
DEBUG: Found label: label1
DEBUG: Created BB_139137685196464 with 4 instructions
DEBUG: Processing instruction 17: LoadImmStat
DEBUG: Processing instruction 18: StoreStat
DEBUG: Processing instruction 19: EmptyStat
DEBUG: Found label: label3
DEBUG: Created BB_139137685196512 with 3 instructions
DEBUG: Linked BB_139137685196464 -> BB_139137685196512 (fall-through)
DEBUG: Processing instruction 20: LoadStat
DEBUG: Processing instruction 21: LoadImmStat
DEBUG: Processing instruction 22: BinStat
DEBUG: Processing instruction 23: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label4
DEBUG: Created BB_139137685196560 ending with branch
DEBUG: Linked BB_139137685196512 -> BB_139137685196560 (pre-branch)
DEBUG: Processing instruction 24: BranchStat
DEBUG: Found branch instruction:
  - Returns: True
  - Has condition: False
  - Target: auto function square
DEBUG: Created BB_139137685194160 ending with branch
DEBUG: Processing instruction 25: LoadStat
DEBUG: Processing instruction 26: LoadImmStat
DEBUG: Processing instruction 27: BinStat
DEBUG: Processing instruction 28: StoreStat
DEBUG: Processing instruction 29: LoadStat
DEBUG: Processing instruction 30: PrintCommand
DEBUG: Processing instruction 31: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label3
DEBUG: Created BB_139137685193728 ending with branch
DEBUG: Linked BB_139137685194160 -> BB_139137685193728 (pre-branch)
DEBUG: Processing instruction 32: EmptyStat
DEBUG: Found label: label4
DEBUG: Processing instruction 33: LoadImmStat
DEBUG: Processing instruction 34: StoreStat
DEBUG: Processing instruction 35: EmptyStat
DEBUG: Found label: label5
DEBUG: Created BB_139137685194208 with 3 instructions
DEBUG: Processing instruction 36: LoadStat
DEBUG: Processing instruction 37: LoadImmStat
DEBUG: Processing instruction 38: BinStat
DEBUG: Processing instruction 39: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label6
DEBUG: Created BB_139137685193824 ending with branch
DEBUG: Linked BB_139137685194208 -> BB_139137685193824 (pre-branch)
DEBUG: Processing instruction 40: LoadStat
DEBUG: Processing instruction 41: LoadStat
DEBUG: Processing instruction 42: LoadImmStat
DEBUG: Processing instruction 43: BinStat
DEBUG: Processing instruction 44: LoadImmStat
DEBUG: Processing instruction 45: BinStat
DEBUG: Processing instruction 46: LoadPtrToSym
DEBUG: Processing instruction 47: BinStat
DEBUG: Processing instruction 48: StoreStat
DEBUG: Processing instruction 49: LoadStat
DEBUG: Processing instruction 50: LoadImmStat
DEBUG: Processing instruction 51: BinStat
DEBUG: Processing instruction 52: LoadImmStat
DEBUG: Processing instruction 53: BinStat
DEBUG: Processing instruction 54: LoadPtrToSym
DEBUG: Processing instruction 55: BinStat
DEBUG: Processing instruction 56: LoadStat
DEBUG: Processing instruction 57: PrintCommand
DEBUG: Processing instruction 58: LoadStat
DEBUG: Processing instruction 59: LoadImmStat
DEBUG: Processing instruction 60: BinStat
DEBUG: Processing instruction 61: StoreStat
DEBUG: Processing instruction 62: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label5
DEBUG: Created BB_139137685193776 ending with branch
DEBUG: Processing instruction 63: EmptyStat
DEBUG: Found label: label6
DEBUG: Processing instruction 64: LoadImmStat
DEBUG: Processing instruction 65: StoreStat
DEBUG: Processing instruction 66: LoadImmStat
DEBUG: Processing instruction 67: StoreStat
DEBUG: Processing instruction 68: EmptyStat
DEBUG: Found label: label9
DEBUG: Created BB_139137685207648 with 5 instructions
DEBUG: Processing instruction 69: LoadStat
DEBUG: Processing instruction 70: LoadImmStat
DEBUG: Processing instruction 71: BinStat
DEBUG: Processing instruction 72: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label10
DEBUG: Created BB_139137685207744 ending with branch
DEBUG: Linked BB_139137685207648 -> BB_139137685207744 (pre-branch)
DEBUG: Processing instruction 73: EmptyStat
DEBUG: Found label: label7
DEBUG: Processing instruction 74: LoadStat
DEBUG: Processing instruction 75: LoadImmStat
DEBUG: Processing instruction 76: BinStat
DEBUG: Processing instruction 77: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label8
DEBUG: Created BB_139137685207312 ending with branch
DEBUG: Processing instruction 78: LoadStat
DEBUG: Processing instruction 79: LoadImmStat
DEBUG: Processing instruction 80: BinStat
DEBUG: Processing instruction 81: LoadPtrToSym
DEBUG: Processing instruction 82: BinStat
DEBUG: Processing instruction 83: LoadStat
DEBUG: Processing instruction 84: LoadStat
DEBUG: Processing instruction 85: LoadImmStat
DEBUG: Processing instruction 86: BinStat
DEBUG: Processing instruction 87: LoadStat
DEBUG: Processing instruction 88: LoadImmStat
DEBUG: Processing instruction 89: BinStat
DEBUG: Processing instruction 90: BinStat
DEBUG: Processing instruction 91: LoadPtrToSym
DEBUG: Processing instruction 92: BinStat
DEBUG: Processing instruction 93: StoreStat
DEBUG: Processing instruction 94: LoadStat
DEBUG: Processing instruction 95: LoadImmStat
DEBUG: Processing instruction 96: BinStat
DEBUG: Processing instruction 97: LoadStat
DEBUG: Processing instruction 98: LoadImmStat
DEBUG: Processing instruction 99: BinStat
DEBUG: Processing instruction 100: BinStat
DEBUG: Processing instruction 101: LoadPtrToSym
DEBUG: Processing instruction 102: BinStat
DEBUG: Processing instruction 103: LoadStat
DEBUG: Processing instruction 104: PrintCommand
DEBUG: Processing instruction 105: LoadStat
DEBUG: Processing instruction 106: LoadImmStat
DEBUG: Processing instruction 107: BinStat
DEBUG: Processing instruction 108: StoreStat
DEBUG: Processing instruction 109: LoadStat
DEBUG: Processing instruction 110: LoadImmStat
DEBUG: Processing instruction 111: BinStat
DEBUG: Processing instruction 112: StoreStat
DEBUG: Processing instruction 113: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label7
DEBUG: Created BB_139137685207792 ending with branch
DEBUG: Processing instruction 114: EmptyStat
DEBUG: Found label: label8
DEBUG: Processing instruction 115: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label9
DEBUG: Created BB_139137685207408 ending with branch
DEBUG: Processing instruction 116: EmptyStat
DEBUG: Found label: label10
DEBUG: Processing instruction 117: AssignStat
DEBUG: Processing instruction 118: EmptyStat
DEBUG: Found label: label11
DEBUG: Created BB_139137685207360 with 2 instructions
DEBUG: Processing instruction 119: LoadStat
DEBUG: Processing instruction 120: LoadImmStat
DEBUG: Processing instruction 121: BinStat
DEBUG: Processing instruction 122: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label13
DEBUG: Created BB_139137685234976 ending with branch
DEBUG: Linked BB_139137685207360 -> BB_139137685234976 (pre-branch)
DEBUG: Processing instruction 123: LoadStat
DEBUG: Processing instruction 124: PrintCommand
DEBUG: Processing instruction 125: LoadStat
DEBUG: Processing instruction 126: LoadImmStat
DEBUG: Processing instruction 127: BinStat
DEBUG: Processing instruction 128: StoreStat
DEBUG: Processing instruction 129: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label11
DEBUG: Created BB_139137685235072 ending with branch
DEBUG: Processing instruction 130: EmptyStat
DEBUG: Found label: label13
DEBUG: Processing instruction 131: LoadImmStat
DEBUG: Processing instruction 132: StoreStat
DEBUG: Processing instruction 133: LoadImmStat
DEBUG: Processing instruction 134: PrintCommand
DEBUG: Processing instruction 135: AssignStat
DEBUG: Processing instruction 136: EmptyStat
DEBUG: Found label: label14
DEBUG: Created BB_139137685237616 with 6 instructions
DEBUG: Processing instruction 137: LoadStat
DEBUG: Processing instruction 138: LoadImmStat
DEBUG: Processing instruction 139: BinStat
DEBUG: Processing instruction 140: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label16
DEBUG: Created BB_139137685237712 ending with branch
DEBUG: Linked BB_139137685237616 -> BB_139137685237712 (pre-branch)
DEBUG: Processing instruction 141: LoadStat
DEBUG: Processing instruction 142: PrintCommand
DEBUG: Processing instruction 143: LoadStat
DEBUG: Processing instruction 144: LoadImmStat
DEBUG: Processing instruction 145: BinStat
DEBUG: Processing instruction 146: StoreStat
DEBUG: Processing instruction 147: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label14
DEBUG: Created BB_139137685237280 ending with branch
DEBUG: Processing instruction 148: EmptyStat
DEBUG: Found label: label16
DEBUG: Processing instruction 149: LoadImmStat
DEBUG: Processing instruction 150: PrintCommand
DEBUG: Processing instruction 151: LoadImmStat
DEBUG: Processing instruction 152: PrintCommand
DEBUG: Processing instruction 153: AssignStat
DEBUG: Processing instruction 154: EmptyStat
DEBUG: Found label: label17
DEBUG: Created BB_139137685237664 with 6 instructions
DEBUG: Processing instruction 155: LoadStat
DEBUG: Processing instruction 156: LoadImmStat
DEBUG: Processing instruction 157: BinStat
DEBUG: Processing instruction 158: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label19
DEBUG: Created BB_139137685237328 ending with branch
DEBUG: Linked BB_139137685237664 -> BB_139137685237328 (pre-branch)
DEBUG: Processing instruction 159: LoadStat
DEBUG: Processing instruction 160: PrintCommand
DEBUG: Processing instruction 161: LoadStat
DEBUG: Processing instruction 162: LoadImmStat
DEBUG: Processing instruction 163: BinStat
DEBUG: Processing instruction 164: StoreStat
DEBUG: Processing instruction 165: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label17
DEBUG: Created BB_139137685237376 ending with branch
DEBUG: Processing instruction 166: EmptyStat
DEBUG: Found label: label19
DEBUG: Processing instruction 167: LoadImmStat
DEBUG: Processing instruction 168: PrintCommand
DEBUG: Processing instruction 169: LoadImmStat
DEBUG: Processing instruction 170: PrintCommand
DEBUG: Processing instruction 171: AssignStat
DEBUG: Processing instruction 172: EmptyStat
DEBUG: Found label: label20
DEBUG: Created BB_139137685236176 with 6 instructions
DEBUG: Processing instruction 173: LoadStat
DEBUG: Processing instruction 174: LoadImmStat
DEBUG: Processing instruction 175: BinStat
DEBUG: Processing instruction 176: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label22
DEBUG: Created BB_139137685236224 ending with branch
DEBUG: Linked BB_139137685236176 -> BB_139137685236224 (pre-branch)
DEBUG: Processing instruction 177: LoadImmStat
DEBUG: Processing instruction 178: PrintCommand
DEBUG: Processing instruction 179: LoadStat
DEBUG: Processing instruction 180: PrintCommand
DEBUG: Processing instruction 181: LoadStat
DEBUG: Processing instruction 182: LoadImmStat
DEBUG: Processing instruction 183: BinStat
DEBUG: Processing instruction 184: StoreStat
DEBUG: Processing instruction 185: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label20
DEBUG: Created BB_139137685235408 ending with branch
DEBUG: Processing instruction 186: EmptyStat
DEBUG: Found label: label22
DEBUG: Processing instruction 187: LoadImmStat
DEBUG: Processing instruction 188: PrintCommand
DEBUG: Processing instruction 189: LoadImmStat
DEBUG: Processing instruction 190: PrintCommand
DEBUG: Processing instruction 191: AssignStat
DEBUG: Processing instruction 192: EmptyStat
DEBUG: Found label: label23
DEBUG: Created BB_139137685235792 with 6 instructions
DEBUG: Processing instruction 193: LoadStat
DEBUG: Processing instruction 194: LoadImmStat
DEBUG: Processing instruction 195: BinStat
DEBUG: Processing instruction 196: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label25
DEBUG: Created BB_139137685235840 ending with branch
DEBUG: Linked BB_139137685235792 -> BB_139137685235840 (pre-branch)
DEBUG: Processing instruction 197: LoadStat
DEBUG: Processing instruction 198: PrintCommand
DEBUG: Processing instruction 199: LoadStat
DEBUG: Processing instruction 200: LoadImmStat
DEBUG: Processing instruction 201: BinStat
DEBUG: Processing instruction 202: StoreStat
DEBUG: Processing instruction 203: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label23
DEBUG: Created BB_139137685235744 ending with branch
DEBUG: Processing instruction 204: EmptyStat
DEBUG: Found label: label25
DEBUG: Processing instruction 205: LoadImmStat
DEBUG: Processing instruction 206: PrintCommand
DEBUG: Processing instruction 207: LoadImmStat
DEBUG: Processing instruction 208: PrintCommand
DEBUG: Processing instruction 209: AssignStat
DEBUG: Processing instruction 210: EmptyStat
DEBUG: Found label: label26
DEBUG: Created BB_139137685241712 with 6 instructions
DEBUG: Processing instruction 211: LoadStat
DEBUG: Processing instruction 212: LoadImmStat
DEBUG: Processing instruction 213: BinStat
DEBUG: Processing instruction 214: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label28
DEBUG: Created BB_139137685241808 ending with branch
DEBUG: Linked BB_139137685241712 -> BB_139137685241808 (pre-branch)
DEBUG: Processing instruction 215: LoadStat
DEBUG: Processing instruction 216: PrintCommand
DEBUG: Processing instruction 217: LoadStat
DEBUG: Processing instruction 218: LoadImmStat
DEBUG: Processing instruction 219: BinStat
DEBUG: Processing instruction 220: StoreStat
DEBUG: Processing instruction 221: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label26
DEBUG: Created BB_139137685240416 ending with branch
DEBUG: Processing instruction 222: EmptyStat
DEBUG: Found label: label28
DEBUG: Processing instruction 223: LoadImmStat
DEBUG: Processing instruction 224: PrintCommand
DEBUG: Processing instruction 225: LoadImmStat
DEBUG: Processing instruction 226: PrintCommand
DEBUG: Processing instruction 227: AssignStat
DEBUG: Processing instruction 228: EmptyStat
DEBUG: Found label: label29
DEBUG: Created BB_139137685240944 with 6 instructions
DEBUG: Processing instruction 229: LoadStat
DEBUG: Processing instruction 230: LoadImmStat
DEBUG: Processing instruction 231: BinStat
DEBUG: Processing instruction 232: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label31
DEBUG: Created BB_139137685241760 ending with branch
DEBUG: Linked BB_139137685240944 -> BB_139137685241760 (pre-branch)
DEBUG: Processing instruction 233: LoadStat
DEBUG: Processing instruction 234: PrintCommand
DEBUG: Processing instruction 235: LoadStat
DEBUG: Processing instruction 236: LoadImmStat
DEBUG: Processing instruction 237: BinStat
DEBUG: Processing instruction 238: StoreStat
DEBUG: Processing instruction 239: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label29
DEBUG: Created BB_139137685240992 ending with branch
DEBUG: Processing instruction 240: EmptyStat
DEBUG: Found label: label31
DEBUG: Processing instruction 241: LoadImmStat
DEBUG: Processing instruction 242: PrintCommand
DEBUG: Processing instruction 243: LoadImmStat
DEBUG: Processing instruction 244: StoreStat
DEBUG: Processing instruction 245: LoadImmStat
DEBUG: Processing instruction 246: PrintCommand
DEBUG: Processing instruction 247: AssignStat
DEBUG: Processing instruction 248: EmptyStat
DEBUG: Found label: label32
DEBUG: Created BB_139137685241376 with 8 instructions
DEBUG: Processing instruction 249: LoadStat
DEBUG: Processing instruction 250: LoadImmStat
DEBUG: Processing instruction 251: BinStat
DEBUG: Processing instruction 252: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label34
DEBUG: Created BB_139137685241472 ending with branch
DEBUG: Linked BB_139137685241376 -> BB_139137685241472 (pre-branch)
DEBUG: Processing instruction 253: LoadStat
DEBUG: Processing instruction 254: LoadStat
DEBUG: Processing instruction 255: BinStat
DEBUG: Processing instruction 256: StoreStat
DEBUG: Processing instruction 257: LoadStat
DEBUG: Processing instruction 258: PrintCommand
DEBUG: Processing instruction 259: LoadStat
DEBUG: Processing instruction 260: PrintCommand
DEBUG: Processing instruction 261: LoadStat
DEBUG: Processing instruction 262: LoadImmStat
DEBUG: Processing instruction 263: BinStat
DEBUG: Processing instruction 264: StoreStat
DEBUG: Processing instruction 265: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label32
DEBUG: Created BB_139137685240704 ending with branch
DEBUG: Processing instruction 266: EmptyStat
DEBUG: Found label: label34
DEBUG: Processing instruction 267: LoadStat
DEBUG: Processing instruction 268: PrintCommand
DEBUG: Processing instruction 269: LoadImmStat
DEBUG: Processing instruction 270: PrintCommand
DEBUG: Processing instruction 271: LoadImmStat
DEBUG: Processing instruction 272: StoreStat
DEBUG: Processing instruction 273: LoadImmStat
DEBUG: Processing instruction 274: PrintCommand
DEBUG: Processing instruction 275: AssignStat
DEBUG: Processing instruction 276: EmptyStat
DEBUG: Found label: label35
DEBUG: Created BB_139137685241424 with 10 instructions
DEBUG: Processing instruction 277: LoadStat
DEBUG: Processing instruction 278: LoadImmStat
DEBUG: Processing instruction 279: BinStat
DEBUG: Processing instruction 280: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label37
DEBUG: Created BB_139137685240176 ending with branch
DEBUG: Linked BB_139137685241424 -> BB_139137685240176 (pre-branch)
DEBUG: Processing instruction 281: LoadStat
DEBUG: Processing instruction 282: LoadStat
DEBUG: Processing instruction 283: BinStat
DEBUG: Processing instruction 284: StoreStat
DEBUG: Processing instruction 285: LoadStat
DEBUG: Processing instruction 286: PrintCommand
DEBUG: Processing instruction 287: LoadStat
DEBUG: Processing instruction 288: LoadImmStat
DEBUG: Processing instruction 289: BinStat
DEBUG: Processing instruction 290: StoreStat
DEBUG: Processing instruction 291: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label35
DEBUG: Created BB_139137685239984 ending with branch
DEBUG: Processing instruction 292: EmptyStat
DEBUG: Found label: label37
DEBUG: Processing instruction 293: LoadStat
DEBUG: Processing instruction 294: PrintCommand
DEBUG: Processing instruction 295: LoadImmStat
DEBUG: Processing instruction 296: PrintCommand
DEBUG: Processing instruction 297: LoadImmStat
DEBUG: Processing instruction 298: PrintCommand
DEBUG: Processing instruction 299: LoadImmStat
DEBUG: Processing instruction 300: StoreStat
DEBUG: Processing instruction 301: AssignStat
DEBUG: Processing instruction 302: EmptyStat
DEBUG: Found label: label38
DEBUG: Created BB_139137685240224 with 10 instructions
DEBUG: Processing instruction 303: LoadStat
DEBUG: Processing instruction 304: LoadImmStat
DEBUG: Processing instruction 305: BinStat
DEBUG: Processing instruction 306: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label40
DEBUG: Created BB_139137685239648 ending with branch
DEBUG: Linked BB_139137685240224 -> BB_139137685239648 (pre-branch)
DEBUG: Processing instruction 307: LoadStat
DEBUG: Processing instruction 308: LoadImmStat
DEBUG: Processing instruction 309: BinStat
DEBUG: Processing instruction 310: LoadPtrToSym
DEBUG: Processing instruction 311: BinStat
DEBUG: Processing instruction 312: LoadStat
DEBUG: Processing instruction 313: LoadStat
DEBUG: Processing instruction 314: BinStat
DEBUG: Processing instruction 315: LoadStat
DEBUG: Processing instruction 316: LoadImmStat
DEBUG: Processing instruction 317: BinStat
DEBUG: Processing instruction 318: LoadPtrToSym
DEBUG: Processing instruction 319: BinStat
DEBUG: Processing instruction 320: StoreStat
DEBUG: Processing instruction 321: LoadStat
DEBUG: Processing instruction 322: LoadImmStat
DEBUG: Processing instruction 323: BinStat
DEBUG: Processing instruction 324: StoreStat
DEBUG: Processing instruction 325: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: False
  - Target: auto label label38
DEBUG: Created BB_139137685239696 ending with branch
DEBUG: Processing instruction 326: EmptyStat
DEBUG: Found label: label40
DEBUG: Processing instruction 327: LoadImmStat
DEBUG: Processing instruction 328: LoadImmStat
DEBUG: Processing instruction 329: BinStat
DEBUG: Processing instruction 330: BranchStat
DEBUG: Found branch instruction:
  - Returns: False
  - Has condition: True
  - Target: auto label label41
DEBUG: Created BB_139137685238160 ending with branch
DEBUG: Processing instruction 331: LoadImmStat
DEBUG: Processing instruction 332: PrintCommand
DEBUG: Processing instruction 333: LoadImmStat
DEBUG: Processing instruction 334: LoadImmStat
DEBUG: Processing instruction 335: BinStat
DEBUG: Processing instruction 336: LoadPtrToSym
DEBUG: Processing instruction 337: BinStat
DEBUG: Processing instruction 338: LoadStat
DEBUG: Processing instruction 339: PrintCommand
DEBUG: Processing instruction 340: LoadImmStat
DEBUG: Processing instruction 341: LoadImmStat
DEBUG: Processing instruction 342: BinStat
DEBUG: Processing instruction 343: LoadPtrToSym
DEBUG: Processing instruction 344: BinStat
DEBUG: Processing instruction 345: LoadStat
DEBUG: Processing instruction 346: PrintCommand
DEBUG: Processing instruction 347: LoadImmStat
DEBUG: Processing instruction 348: LoadImmStat
DEBUG: Processing instruction 349: BinStat
DEBUG: Processing instruction 350: LoadPtrToSym
DEBUG: Processing instruction 351: BinStat
DEBUG: Processing instruction 352: LoadStat
DEBUG: Processing instruction 353: PrintCommand
DEBUG: Processing instruction 354: EmptyStat
DEBUG: Found label: label41
DEBUG: Created BB_139137685239456 with 23 instructions
DEBUG: Processing instruction 355: LoadImmStat
DEBUG: Processing instruction 356: PrintCommand
DEBUG: Created final BB_139137684876880 with 3 instructions
DEBUG: Linked BB_139137685239456 -> BB_139137684876880 (final)
DEBUG: Created 48 basic blocks total
DEBUG: Processing StatList 1
DEBUG: Converting StatList with 6 statements
DEBUG: Processing instruction 0: LoadImmStat
DEBUG: Processing instruction 1: StoreStat
DEBUG: Processing instruction 2: LoadStat
DEBUG: Processing instruction 3: LoadStat
DEBUG: Processing instruction 4: BinStat
DEBUG: Processing instruction 5: StoreStat
DEBUG: Created final BB_139137685238064 with 6 instructions
DEBUG: Created 1 basic blocks total
DEBUG: CFG created with 49 basic blocks
   Rebuilding ALL CFG links (next, target_bb, preds)...
DEBUG: Built label map with 31 labels
DEBUG: BB_139137684873424 has branch target: auto label label2
DEBUG: BB_139137684873424 resolved target to BB_139137685196464
DEBUG: BB_139137685194064 has branch target: auto label label1
DEBUG: BB_139137685194064 resolved target to BB_139137685196512
DEBUG: Removing useless next from BB_139137685194064 (has unconditional branch)
DEBUG: BB_139137685196560 has branch target: auto label label4
DEBUG: BB_139137685196560 resolved target to BB_139137685194208
DEBUG: Removing useless next from BB_139137685194160 (has unconditional branch)
DEBUG: BB_139137685193728 has branch target: auto label label3
DEBUG: BB_139137685193728 resolved target to BB_139137685196560
DEBUG: Removing useless next from BB_139137685193728 (has unconditional branch)
DEBUG: BB_139137685193824 has branch target: auto label label6
DEBUG: BB_139137685193824 resolved target to BB_139137685207648
DEBUG: BB_139137685193776 has branch target: auto label label5
DEBUG: BB_139137685193776 resolved target to BB_139137685193824
DEBUG: Removing useless next from BB_139137685193776 (has unconditional branch)
DEBUG: BB_139137685207744 has branch target: auto label label10
DEBUG: BB_139137685207744 resolved target to BB_139137685207360
DEBUG: BB_139137685207312 has branch target: auto label label8
DEBUG: BB_139137685207312 resolved target to BB_139137685207408
DEBUG: BB_139137685207792 has branch target: auto label label7
DEBUG: BB_139137685207792 resolved target to BB_139137685207312
DEBUG: Removing useless next from BB_139137685207792 (has unconditional branch)
DEBUG: BB_139137685207408 has branch target: auto label label9
DEBUG: BB_139137685207408 resolved target to BB_139137685207744
DEBUG: Removing useless next from BB_139137685207408 (has unconditional branch)
DEBUG: BB_139137685234976 has branch target: auto label label13
DEBUG: BB_139137685234976 resolved target to BB_139137685237616
DEBUG: BB_139137685235072 has branch target: auto label label11
DEBUG: BB_139137685235072 resolved target to BB_139137685234976
DEBUG: Removing useless next from BB_139137685235072 (has unconditional branch)
DEBUG: BB_139137685237712 has branch target: auto label label16
DEBUG: BB_139137685237712 resolved target to BB_139137685237664
DEBUG: BB_139137685237280 has branch target: auto label label14
DEBUG: BB_139137685237280 resolved target to BB_139137685237712
DEBUG: Removing useless next from BB_139137685237280 (has unconditional branch)
DEBUG: BB_139137685237328 has branch target: auto label label19
DEBUG: BB_139137685237328 resolved target to BB_139137685236176
DEBUG: BB_139137685237376 has branch target: auto label label17
DEBUG: BB_139137685237376 resolved target to BB_139137685237328
DEBUG: Removing useless next from BB_139137685237376 (has unconditional branch)
DEBUG: BB_139137685236224 has branch target: auto label label22
DEBUG: BB_139137685236224 resolved target to BB_139137685235792
DEBUG: BB_139137685235408 has branch target: auto label label20
DEBUG: BB_139137685235408 resolved target to BB_139137685236224
DEBUG: Removing useless next from BB_139137685235408 (has unconditional branch)
DEBUG: BB_139137685235840 has branch target: auto label label25
DEBUG: BB_139137685235840 resolved target to BB_139137685241712
DEBUG: BB_139137685235744 has branch target: auto label label23
DEBUG: BB_139137685235744 resolved target to BB_139137685235840
DEBUG: Removing useless next from BB_139137685235744 (has unconditional branch)
DEBUG: BB_139137685241808 has branch target: auto label label28
DEBUG: BB_139137685241808 resolved target to BB_139137685240944
DEBUG: BB_139137685240416 has branch target: auto label label26
DEBUG: BB_139137685240416 resolved target to BB_139137685241808
DEBUG: Removing useless next from BB_139137685240416 (has unconditional branch)
DEBUG: BB_139137685241760 has branch target: auto label label31
DEBUG: BB_139137685241760 resolved target to BB_139137685241376
DEBUG: BB_139137685240992 has branch target: auto label label29
DEBUG: BB_139137685240992 resolved target to BB_139137685241760
DEBUG: Removing useless next from BB_139137685240992 (has unconditional branch)
DEBUG: BB_139137685241472 has branch target: auto label label34
DEBUG: BB_139137685241472 resolved target to BB_139137685241424
DEBUG: BB_139137685240704 has branch target: auto label label32
DEBUG: BB_139137685240704 resolved target to BB_139137685241472
DEBUG: Removing useless next from BB_139137685240704 (has unconditional branch)
DEBUG: BB_139137685240176 has branch target: auto label label37
DEBUG: BB_139137685240176 resolved target to BB_139137685240224
DEBUG: BB_139137685239984 has branch target: auto label label35
DEBUG: BB_139137685239984 resolved target to BB_139137685240176
DEBUG: Removing useless next from BB_139137685239984 (has unconditional branch)
DEBUG: BB_139137685239648 has branch target: auto label label40
DEBUG: BB_139137685239648 resolved target to BB_139137685238160
DEBUG: BB_139137685239696 has branch target: auto label label38
DEBUG: BB_139137685239696 resolved target to BB_139137685239648
DEBUG: Removing useless next from BB_139137685239696 (has unconditional branch)
DEBUG: BB_139137685238160 has branch target: auto label label41
DEBUG: BB_139137685238160 resolved target to BB_139137684876880
   CFG links rebuild complete.
DEBUG: CFG Link Summary:
  BB_139137684873424: 1 successors, 0 preds
  BB_139137685194064: 1 successors, 0 preds
  BB_139137685196560: 1 successors, 2 preds
  BB_139137685193728: 1 successors, 0 preds
  BB_139137685193824: 1 successors, 2 preds
  BB_139137685193776: 1 successors, 0 preds
  BB_139137685207744: 1 successors, 2 preds
  BB_139137685207312: 1 successors, 1 preds
  BB_139137685207792: 1 successors, 0 preds
  BB_139137685207408: 1 successors, 1 preds
  BB_139137685234976: 1 successors, 2 preds
  BB_139137685235072: 1 successors, 0 preds
  BB_139137685237712: 1 successors, 2 preds
  BB_139137685237280: 1 successors, 0 preds
  BB_139137685237328: 1 successors, 2 preds
  BB_139137685237376: 1 successors, 0 preds
  BB_139137685236224: 1 successors, 2 preds
  BB_139137685235408: 1 successors, 0 preds
  BB_139137685235840: 1 successors, 2 preds
  BB_139137685235744: 1 successors, 0 preds
  BB_139137685241808: 1 successors, 2 preds
  BB_139137685240416: 1 successors, 0 preds
  BB_139137685241760: 1 successors, 2 preds
  BB_139137685240992: 1 successors, 0 preds
  BB_139137685241472: 1 successors, 2 preds
  BB_139137685240704: 1 successors, 0 preds
  BB_139137685240176: 1 successors, 2 preds
  BB_139137685239984: 1 successors, 0 preds
  BB_139137685239648: 1 successors, 2 preds
  BB_139137685239696: 1 successors, 0 preds
  BB_139137685238160: 1 successors, 1 preds
  Total blocks with successors: 46
  Total blocks with multiple successors: 0
Initial CFG constructed with 49 basic blocks.
DEBUG: Found 2 entry points
  - global: BB_139137684873424
  - square: BB_139137685238064
CFG graph saved to cfg_initial.dot

--- OPTIMIZATION: Attempting Loop Unrolling ---

--- Starting Loop Unrolling Pass (Factor: 2) ---
DEBUG: About to call debug_cfg_structure...

--- CFG Structure Debug ---
Total blocks: 49
Blocks with no predecessors: 18
Blocks with multiple successors: 0

*** Potential Back Edges ***
  POTENTIAL BACK EDGE: BB_139137684873424 -> BB_139137685196464 (target: auto label label2)
  POTENTIAL BACK EDGE: BB_139137685194064 -> BB_139137685196512 (target: auto label label1)
  POTENTIAL BACK EDGE: BB_139137685196560 -> BB_139137685194208 (target: auto label label4)
  POTENTIAL BACK EDGE: BB_139137685193728 -> BB_139137685196560 (target: auto label label3)
  POTENTIAL BACK EDGE: BB_139137685193824 -> BB_139137685207648 (target: auto label label6)
  POTENTIAL BACK EDGE: BB_139137685193776 -> BB_139137685193824 (target: auto label label5)
  POTENTIAL BACK EDGE: BB_139137685207744 -> BB_139137685207360 (target: auto label label10)
  POTENTIAL BACK EDGE: BB_139137685207312 -> BB_139137685207408 (target: auto label label8)
  POTENTIAL BACK EDGE: BB_139137685207792 -> BB_139137685207312 (target: auto label label7)
  POTENTIAL BACK EDGE: BB_139137685207408 -> BB_139137685207744 (target: auto label label9)
  POTENTIAL BACK EDGE: BB_139137685234976 -> BB_139137685237616 (target: auto label label13)
  POTENTIAL BACK EDGE: BB_139137685235072 -> BB_139137685234976 (target: auto label label11)
  POTENTIAL BACK EDGE: BB_139137685237712 -> BB_139137685237664 (target: auto label label16)
  POTENTIAL BACK EDGE: BB_139137685237280 -> BB_139137685237712 (target: auto label label14)
  POTENTIAL BACK EDGE: BB_139137685237328 -> BB_139137685236176 (target: auto label label19)
  POTENTIAL BACK EDGE: BB_139137685237376 -> BB_139137685237328 (target: auto label label17)
  POTENTIAL BACK EDGE: BB_139137685236224 -> BB_139137685235792 (target: auto label label22)
  POTENTIAL BACK EDGE: BB_139137685235408 -> BB_139137685236224 (target: auto label label20)
  POTENTIAL BACK EDGE: BB_139137685235840 -> BB_139137685241712 (target: auto label label25)
  POTENTIAL BACK EDGE: BB_139137685235744 -> BB_139137685235840 (target: auto label label23)
  POTENTIAL BACK EDGE: BB_139137685241808 -> BB_139137685240944 (target: auto label label28)
  POTENTIAL BACK EDGE: BB_139137685240416 -> BB_139137685241808 (target: auto label label26)
  POTENTIAL BACK EDGE: BB_139137685241760 -> BB_139137685241376 (target: auto label label31)
  POTENTIAL BACK EDGE: BB_139137685240992 -> BB_139137685241760 (target: auto label label29)
  POTENTIAL BACK EDGE: BB_139137685241472 -> BB_139137685241424 (target: auto label label34)
  POTENTIAL BACK EDGE: BB_139137685240704 -> BB_139137685241472 (target: auto label label32)
  POTENTIAL BACK EDGE: BB_139137685240176 -> BB_139137685240224 (target: auto label label37)
  POTENTIAL BACK EDGE: BB_139137685239984 -> BB_139137685240176 (target: auto label label35)
  POTENTIAL BACK EDGE: BB_139137685239648 -> BB_139137685238160 (target: auto label label40)
  POTENTIAL BACK EDGE: BB_139137685239696 -> BB_139137685239648 (target: auto label label38)
  POTENTIAL BACK EDGE: BB_139137685238160 -> BB_139137684876880 (target: auto label label41)
DEBUG: debug_cfg_structure completed
DEBUG: About to call _find_loops...
DEBUG: Starting loop detection...
DEBUG: Starting simple back edge detection...
DEBUG: Found potential back edge: BB_139137685194064 -> BB_139137685196512 (header with 2 preds)
DEBUG: Found potential back edge: BB_139137685193728 -> BB_139137685196560 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685193728 (idx 6) -> BB_139137685196560 (idx 4)
DEBUG: Found potential back edge: BB_139137685193776 -> BB_139137685193824 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685193776 (idx 9) -> BB_139137685193824 (idx 8)
DEBUG: Found back edge by position: BB_139137685207792 (idx 13) -> BB_139137685207312 (idx 12)
DEBUG: Found potential back edge: BB_139137685207408 -> BB_139137685207744 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685207408 (idx 14) -> BB_139137685207744 (idx 11)
DEBUG: Found potential back edge: BB_139137685235072 -> BB_139137685234976 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685235072 (idx 17) -> BB_139137685234976 (idx 16)
DEBUG: Found potential back edge: BB_139137685237280 -> BB_139137685237712 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685237280 (idx 20) -> BB_139137685237712 (idx 19)
DEBUG: Found potential back edge: BB_139137685237376 -> BB_139137685237328 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685237376 (idx 23) -> BB_139137685237328 (idx 22)
DEBUG: Found potential back edge: BB_139137685235408 -> BB_139137685236224 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685235408 (idx 26) -> BB_139137685236224 (idx 25)
DEBUG: Found potential back edge: BB_139137685235744 -> BB_139137685235840 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685235744 (idx 29) -> BB_139137685235840 (idx 28)
DEBUG: Found potential back edge: BB_139137685240416 -> BB_139137685241808 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685240416 (idx 32) -> BB_139137685241808 (idx 31)
DEBUG: Found potential back edge: BB_139137685240992 -> BB_139137685241760 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685240992 (idx 35) -> BB_139137685241760 (idx 34)
DEBUG: Found potential back edge: BB_139137685240704 -> BB_139137685241472 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685240704 (idx 38) -> BB_139137685241472 (idx 37)
DEBUG: Found potential back edge: BB_139137685239984 -> BB_139137685240176 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685239984 (idx 41) -> BB_139137685240176 (idx 40)
DEBUG: Found potential back edge: BB_139137685239696 -> BB_139137685239648 (header with 2 preds)
DEBUG: Found back edge by position: BB_139137685239696 (idx 44) -> BB_139137685239648 (idx 43)
DEBUG: Found potential back edge: BB_139137685238160 -> BB_139137684876880 (header with 2 preds)
DEBUG: Found 16 back edges using simple detection
DEBUG: Created simple loop with header BB_139137685196512
DEBUG: Created simple loop with header BB_139137685196560
DEBUG: Created simple loop with header BB_139137685193824
DEBUG: Created simple loop with header BB_139137685207312
DEBUG: Created simple loop with header BB_139137685207744
DEBUG: Created simple loop with header BB_139137685234976
DEBUG: Created simple loop with header BB_139137685237712
DEBUG: Created simple loop with header BB_139137685237328
DEBUG: Created simple loop with header BB_139137685236224
DEBUG: Created simple loop with header BB_139137685235840
DEBUG: Created simple loop with header BB_139137685241808
DEBUG: Created simple loop with header BB_139137685241760
DEBUG: Created simple loop with header BB_139137685241472
DEBUG: Created simple loop with header BB_139137685240176
DEBUG: Created simple loop with header BB_139137685239648
DEBUG: Created simple loop with header BB_139137684876880
   Loop detection complete. Found 16 unique loop header(s).
DEBUG: _find_loops completed
   Detected 16 initial loop(s). Analyzing for unrolling...
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685196512...
         UNROLL_DEBUG: Reject - Could not find LCV increment/decrement pattern in latch 139137685194064.
           Latch instr: reg int t7 <- global int x; _g_x: def byte 4 type: <class 'ir.LoadStat'>
           Latch instr: print reg int t7 type: <class 'ir.PrintCommand'>
           Latch instr: branch  to auto label label1 type: <class 'ir.BranchStat'>
      UNROLL_DEBUG: Loop 139137685196512 not suitable by analysis.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685196560...
            UNROLL_DEBUG: Found LCV 'x' as plus 1 (three-address) in latch 139137685193728.
            UNROLL_DEBUG: Found LCV 'x' with step 1 in latch 139137685193728.
         UNROLL_DEBUG: Reject - LCV 'x' has no faked bounds for trip count.
      UNROLL_DEBUG: Loop 139137685196560 not suitable by analysis.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685193824...
            UNROLL_DEBUG: Found LCV 'x' as plus 1 (three-address) in latch 139137685193776.
            UNROLL_DEBUG: Found LCV 'x' with step 1 in latch 139137685193776.
         UNROLL_DEBUG: Reject - LCV 'x' has no faked bounds for trip count.
      UNROLL_DEBUG: Loop 139137685193824 not suitable by analysis.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685207312...
            UNROLL_DEBUG: Found LCV 'x' as plus 1 (three-address) in latch 139137685207792.
            UNROLL_DEBUG: Found LCV 'x' with step 1 in latch 139137685207792.
         UNROLL_DEBUG: Reject - LCV 'x' has no faked bounds for trip count.
      UNROLL_DEBUG: Loop 139137685207312 not suitable by analysis.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685207744...
         UNROLL_DEBUG: Reject - Could not find LCV increment/decrement pattern in latch 139137685207408.
           Latch instr: label8: <class 'ir.EmptyStat'> 139137685147712 {
parent = 139137684886480
} type: <class 'ir.EmptyStat'>
           Latch instr: branch  to auto label label9 type: <class 'ir.BranchStat'>
      UNROLL_DEBUG: Loop 139137685207744 not suitable by analysis.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685234976...
            UNROLL_DEBUG: Found LCV 'a' as plus 1 (three-address) in latch 139137685235072.
            UNROLL_DEBUG: Found LCV 'a' with step 1 in latch 139137685235072.
            UNROLL_DEBUG: Using faked bounds for LCV 'a': start=10, end=20
      UNROLL_DEBUG: Loop header 139137685234976 (LCV 'a') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685237712...
            UNROLL_DEBUG: Found LCV 'i' as plus 1 (three-address) in latch 139137685237280.
            UNROLL_DEBUG: Found LCV 'i' with step 1 in latch 139137685237280.
            UNROLL_DEBUG: Using faked bounds for LCV 'i': start=0, end=10
      UNROLL_DEBUG: Loop header 139137685237712 (LCV 'i') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685237328...
            UNROLL_DEBUG: Found LCV 'j' as plus 1 (three-address) in latch 139137685237376.
            UNROLL_DEBUG: Found LCV 'j' with step 1 in latch 139137685237376.
            UNROLL_DEBUG: Using faked bounds for LCV 'j': start=0, end=5
      UNROLL_DEBUG: Loop header 139137685237328 (LCV 'j') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685236224...
            UNROLL_DEBUG: Found LCV 'k' as plus 1 (three-address) in latch 139137685235408.
            UNROLL_DEBUG: Found LCV 'k' with step 1 in latch 139137685235408.
            UNROLL_DEBUG: Using faked bounds for LCV 'k': start=0, end=3
      UNROLL_DEBUG: Loop header 139137685236224 (LCV 'k') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685235840...
            UNROLL_DEBUG: Found LCV 'm' as plus 1 (three-address) in latch 139137685235744.
            UNROLL_DEBUG: Found LCV 'm' with step 1 in latch 139137685235744.
            UNROLL_DEBUG: Using faked bounds for LCV 'm': start=1, end=6
      UNROLL_DEBUG: Loop header 139137685235840 (LCV 'm') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685241808...
            UNROLL_DEBUG: Found LCV 'n' as plus 1 (three-address) in latch 139137685240416.
            UNROLL_DEBUG: Found LCV 'n' with step 1 in latch 139137685240416.
            UNROLL_DEBUG: Using faked bounds for LCV 'n': start=1, end=7
      UNROLL_DEBUG: Loop header 139137685241808 (LCV 'n') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685241760...
            UNROLL_DEBUG: Found LCV 'p' as plus 1 (three-address) in latch 139137685240992.
            UNROLL_DEBUG: Found LCV 'p' with step 1 in latch 139137685240992.
            UNROLL_DEBUG: Using faked bounds for LCV 'p': start=10, end=12
      UNROLL_DEBUG: Loop header 139137685241760 (LCV 'p') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685241472...
            UNROLL_DEBUG: Found LCV 'q' as plus 1 (three-address) in latch 139137685240704.
            UNROLL_DEBUG: Found LCV 'q' with step 1 in latch 139137685240704.
            UNROLL_DEBUG: Using faked bounds for LCV 'q': start=1, end=5
      UNROLL_DEBUG: Loop header 139137685241472 (LCV 'q') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685240176...
            UNROLL_DEBUG: Found LCV 'r' as plus 1 (three-address) in latch 139137685239984.
            UNROLL_DEBUG: Found LCV 'r' with step 1 in latch 139137685239984.
            UNROLL_DEBUG: Using faked bounds for LCV 'r': start=1, end=3
      UNROLL_DEBUG: Loop header 139137685240176 (LCV 'r') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137685239648...
            UNROLL_DEBUG: Found LCV 'sm_idx' as plus 1 (three-address) in latch 139137685239696.
            UNROLL_DEBUG: Found LCV 'sm_idx' with step 1 in latch 139137685239696.
            UNROLL_DEBUG: Using faked bounds for LCV 'sm_idx': start=0, end=127
      UNROLL_DEBUG: Loop header 139137685239648 (LCV 'sm_idx') deemed SUITABLE for unrolling.
      UNROLL_DEBUG: Analyzing suitability for loop header 139137684876880...
         UNROLL_DEBUG: Reject - Could not find LCV increment/decrement pattern in latch 139137685238160.
           Latch instr: label40: <class 'ir.EmptyStat'> 139137684940640 {
parent = 139137684886480
} type: <class 'ir.EmptyStat'>
           Latch instr: reg int t267 <- 127 type: <class 'ir.LoadImmStat'>
           Latch instr: reg int t268 <- 0 type: <class 'ir.LoadImmStat'>
           Latch instr: reg int32_t t269 <- reg int t267 geq reg int t268 type: <class 'ir.BinStat'>
           Latch instr: branch on not reg int32_t t269 to auto label label41 type: <class 'ir.BranchStat'>
      UNROLL_DEBUG: Loop 139137684876880 not suitable by analysis.
   Found 10 suitable loop(s) for unrolling!
--- Loop Unrolling Pass Complete ---

--- CFG After Attempting Unrolling ---
DEBUG: Found 2 entry points
  - global: BB_139137684873424
  - square: BB_139137685238064
CFG graph saved to cfg_after_unrolling_attempt.dot

--- Performing Liveness Analysis (on potentially modified CFG) ---
--- Starting Liveness Analysis ---
Liveness converged in 4 iter.
--- Liveness Analysis Complete ---
DEBUG: Found 2 entry points
  - global: BB_139137684873424
  - square: BB_139137685238064
CFG graph saved to cfg_final_with_liveness.dot

--- Performing Register Allocation ---
LIVENESS INTERVALS:
[]

--- Register Allocation Map ---
vartoreg = {}

--- Generating Code ---

--- Generated Assembly Code ---
	.text
	.arch armv6
	.syntax unified
@ block
	.comm _g_x, 4
	.comm _g_y, 4
	.comm _g_squ, 4
	.comm _g_arr, 5
	.comm _g_multid, 50
	.comm _g_i, 4
	.comm _g_j, 4
	.comm _g_k, 4
	.comm _g_m, 4
	.comm _g_n, 4
	.comm _g_p, 4
	.comm _g_q, 4
	.comm _g_sum, 4
	.comm _g_r, 4
	.comm _g_sm_idx, 4
	.comm _g_sm_source_arr, 512
	.comm _g_sm_dest_arr, 512
	.global __pl0_start
__pl0_start:
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #0
	@ irnode 139137684886480 type <class 'ir.StatList'>
	@ node 139137685321376 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 139137685320944 did not generate any code
	@ exc: KeyError(reg int t0)
	@ node 139137684886720 did not generate any code
	@ exc: KeyError(reg int t1)
	@ node 139137684886624 did not generate any code
	@ exc: KeyError(reg int t2)
	@ node 139137684886816 did not generate any code
	@ exc: KeyError(reg int t2)
	@ node 139137684887248 did not generate any code
	@ exc: KeyError(reg int t8)
	@ node 139137684887056 did not generate any code
	@ exc: KeyError(reg int t9)
	@ node 139137685322720 did not generate any code
	@ exc: KeyError(reg int t8)
	@ node 139137685323200 did not generate any code
	@ exc: KeyError(reg int32_t t10)
	@ node 139137685322432 did not generate any code
	@ exc: KeyError(reg int t7)
	@ node 139137685322528 did not generate any code
	@ exc: KeyError(reg int t7)
	b label1
label2:
	@ emptystat
	@ node 139137685321616 did not generate any code
	@ exc: KeyError(reg int t3)
	@ node 139137684887488 did not generate any code
	@ exc: KeyError(reg int t3)
	@ node 139137685322096 did not generate any code
	@ exc: KeyError(reg int t5)
label1:
	@ emptystat
	@ node 139137685323440 did not generate any code
	@ exc: KeyError(reg int t11)
	@ node 139137684887968 did not generate any code
	@ exc: KeyError(reg int t11)
label3:
	@ emptystat
	@ node 139137684888976 did not generate any code
	@ exc: KeyError(reg int t17)
	@ node 139137684888112 did not generate any code
	@ exc: KeyError(reg int t18)
	@ node 139137685156816 did not generate any code
	@ exc: KeyError(reg int t17)
	@ node 139137685157296 did not generate any code
	@ exc: KeyError(reg int32_t t19)
	push {r0, r1, r2, r3}
	bl square
	pop {r0, r1, r2, r3}
	@ node 139137685323728 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 139137684888688 did not generate any code
	@ exc: KeyError(reg int t13)
	@ node 139137685156000 did not generate any code
	@ exc: KeyError(reg int t12)
	@ node 139137684888880 did not generate any code
	@ exc: KeyError(reg int32_t t14)
	@ node 139137685156528 did not generate any code
	@ exc: KeyError(reg int t16)
	@ node 139137685156624 did not generate any code
	@ exc: KeyError(reg int t16)
	b label3
label4:
	@ emptystat
	@ node 139137685157536 did not generate any code
	@ exc: KeyError(reg int t20)
	@ node 139137684889264 did not generate any code
	@ exc: KeyError(reg int t20)
label5:
	@ emptystat
	@ node 139137685349904 did not generate any code
	@ exc: KeyError(reg int t44)
	@ node 139137684889408 did not generate any code
	@ exc: KeyError(reg int t45)
	@ node 139137685313616 did not generate any code
	@ exc: KeyError(reg int t44)
	@ node 139137685314000 did not generate any code
	@ exc: KeyError(reg int32_t t46)
	@ node 139137685351104 did not generate any code
	@ exc: KeyError(reg int t26)
	@ node 139137685157728 did not generate any code
	@ exc: KeyError(reg int t21)
	@ node 139137685351440 did not generate any code
	@ exc: KeyError(reg int t22)
	@ node 139137685157968 did not generate any code
	@ exc: KeyError(reg int t21)
	@ node 139137685351248 did not generate any code
	@ exc: KeyError(reg int t24)
	@ node 139137685158352 did not generate any code
	@ exc: KeyError(reg int32_t t23)
	@ node 139137685158592 did not generate any code
	@ exc: KeyError(reg &char t27)
	@ node 139137685158784 did not generate any code
	@ exc: KeyError(reg &char t27)
	@ node 139137685158832 did not generate any code
	@ exc: KeyError(reg &char t28)
	@ node 139137685159072 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 139137685351776 did not generate any code
	@ exc: KeyError(reg int t30)
	@ node 139137685159408 did not generate any code
	@ exc: KeyError(reg int t29)
	@ node 139137685351920 did not generate any code
	@ exc: KeyError(reg int t32)
	@ node 139137685311648 did not generate any code
	@ exc: KeyError(reg int32_t t31)
	@ node 139137685312320 did not generate any code
	@ exc: KeyError(reg &char t39)
	@ node 139137685312560 did not generate any code
	@ exc: KeyError(reg &char t39)
	@ node 139137685312608 did not generate any code
	@ exc: KeyError(reg &char t40)
	@ node 139137685312752 did not generate any code
	@ exc: KeyError(reg char t38)
	@ node 139137685312992 did not generate any code
	@ exc: KeyError(reg int t41)
	@ node 139137685352400 did not generate any code
	@ exc: KeyError(reg int t42)
	@ node 139137685313184 did not generate any code
	@ exc: KeyError(reg int t41)
	@ node 139137685349952 did not generate any code
	@ exc: KeyError(reg int32_t t43)
	b label5
label6:
	@ emptystat
	@ node 139137685314240 did not generate any code
	@ exc: KeyError(reg int t47)
	@ node 139137685349712 did not generate any code
	@ exc: KeyError(reg int t47)
	@ node 139137685314432 did not generate any code
	@ exc: KeyError(reg int t48)
	@ node 139137685349472 did not generate any code
	@ exc: KeyError(reg int t48)
label9:
	@ emptystat
	@ node 139137685240032 did not generate any code
	@ exc: KeyError(reg int t88)
	@ node 139137685348992 did not generate any code
	@ exc: KeyError(reg int t89)
	@ node 139137685240128 did not generate any code
	@ exc: KeyError(reg int t88)
	@ node 139137685240512 did not generate any code
	@ exc: KeyError(reg int32_t t90)
label7:
	@ emptystat
	@ node 139137685239264 did not generate any code
	@ exc: KeyError(reg int t85)
	@ node 139137685348512 did not generate any code
	@ exc: KeyError(reg int t86)
	@ node 139137685239408 did not generate any code
	@ exc: KeyError(reg int t85)
	@ node 139137685239792 did not generate any code
	@ exc: KeyError(reg int32_t t87)
	@ node 139137685149728 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 139137685149632 did not generate any code
	@ exc: KeyError(reg int t57)
	@ node 139137685287648 did not generate any code
	@ exc: KeyError(reg int t56)
	@ node 139137685287936 did not generate any code
	@ exc: KeyError(reg &char t61)
	@ node 139137685288128 did not generate any code
	@ exc: KeyError(reg &char t61)
	@ node 139137685288176 did not generate any code
	@ exc: KeyError(reg &char t62)
	@ node 139137685314624 did not generate any code
	@ exc: KeyError(reg int t49)
	@ node 139137685148192 did not generate any code
	@ exc: KeyError(reg int t50)
	@ node 139137685314912 did not generate any code
	@ exc: KeyError(reg int t49)
	@ node 139137685150064 did not generate any code
	@ exc: KeyError(reg int t52)
	@ node 139137685149104 did not generate any code
	@ exc: KeyError(reg int t53)
	@ node 139137685315344 did not generate any code
	@ exc: KeyError(reg int t52)
	@ node 139137685287072 did not generate any code
	@ exc: KeyError(reg int32_t t51)
	@ node 139137685288368 did not generate any code
	@ exc: KeyError(reg &short t63)
	@ node 139137685288560 did not generate any code
	@ exc: KeyError(reg &short t63)
	@ node 139137685288608 did not generate any code
	@ exc: KeyError(reg &short t64)
	@ node 139137685288848 did not generate any code
	@ exc: KeyError(reg int t65)
	@ node 139137685149248 did not generate any code
	@ exc: KeyError(reg int t66)
	@ node 139137685289184 did not generate any code
	@ exc: KeyError(reg int t65)
	@ node 139137685148864 did not generate any code
	@ exc: KeyError(reg int t68)
	@ node 139137685149008 did not generate any code
	@ exc: KeyError(reg int t69)
	@ node 139137685289616 did not generate any code
	@ exc: KeyError(reg int t68)
	@ node 139137685288944 did not generate any code
	@ exc: KeyError(reg int32_t t67)
	@ node 139137685290816 did not generate any code
	@ exc: KeyError(reg &short t77)
	@ node 139137685237824 did not generate any code
	@ exc: KeyError(reg &short t77)
	@ node 139137685237872 did not generate any code
	@ exc: KeyError(reg &short t78)
	@ node 139137685238016 did not generate any code
	@ exc: KeyError(reg short t76)
	@ node 139137685238256 did not generate any code
	@ exc: KeyError(reg int t79)
	@ node 139137685148480 did not generate any code
	@ exc: KeyError(reg int t80)
	@ node 139137685238448 did not generate any code
	@ exc: KeyError(reg int t79)
	@ node 139137685150256 did not generate any code
	@ exc: KeyError(reg int32_t t81)
	@ node 139137685238784 did not generate any code
	@ exc: KeyError(reg int t82)
	@ node 139137685150400 did not generate any code
	@ exc: KeyError(reg int t83)
	@ node 139137685238928 did not generate any code
	@ exc: KeyError(reg int t82)
	@ node 139137685150592 did not generate any code
	@ exc: KeyError(reg int32_t t84)
	b label7
label8:
	@ emptystat
	b label9
label10:
	@ emptystat
	@ irnode 139137685151600 type <class 'ir.AssignStat'>
label11:
	@ emptystat
	@ node 139137685151360 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685151120 did not generate any code
	@ exc: KeyError(reg int t94)
	@ node 139137685241280 did not generate any code
	@ exc: KeyError(reg int t93)
	@ node 139137685234208 did not generate any code
	@ exc: KeyError(reg int32_t t95)
	@ node 139137685240560 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685241088 did not generate any code
	@ exc: KeyError(reg int t92)
	@ node 139137685151072 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685151264 did not generate any code
	@ exc: KeyError(reg int t97)
	@ node 139137685233728 did not generate any code
	@ exc: KeyError(reg int t96)
	@ node 139137685610160 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label11
label13:
	@ emptystat
	@ node 139137685234160 did not generate any code
	@ exc: KeyError(reg int t99)
	@ node 139137685610352 did not generate any code
	@ exc: KeyError(reg int t99)
	@ node 139137685234448 did not generate any code
	@ exc: KeyError(reg int t101)
	@ node 139137685234928 did not generate any code
	@ exc: KeyError(reg int t101)
	@ irnode 139137685609152 type <class 'ir.AssignStat'>
label14:
	@ emptystat
	@ node 139137685609344 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685609056 did not generate any code
	@ exc: KeyError(reg int t105)
	@ node 139137685235648 did not generate any code
	@ exc: KeyError(reg int t104)
	@ node 139137685236704 did not generate any code
	@ exc: KeyError(reg int32_t t106)
	@ node 139137685235360 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 139137685235456 did not generate any code
	@ exc: KeyError(reg int t103)
	@ node 139137685609008 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685608864 did not generate any code
	@ exc: KeyError(reg int t108)
	@ node 139137685236128 did not generate any code
	@ exc: KeyError(reg int t107)
	@ node 139137685608672 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label14
label16:
	@ emptystat
	@ node 139137685240800 did not generate any code
	@ exc: KeyError(reg int t111)
	@ node 139137685290288 did not generate any code
	@ exc: KeyError(reg int t111)
	@ node 139137685290384 did not generate any code
	@ exc: KeyError(reg int t113)
	@ node 139137685288992 did not generate any code
	@ exc: KeyError(reg int t113)
	@ irnode 139137685607616 type <class 'ir.AssignStat'>
label17:
	@ emptystat
	@ node 139137685311792 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685159744 did not generate any code
	@ exc: KeyError(reg int t117)
	@ node 139137685159840 did not generate any code
	@ exc: KeyError(reg int t116)
	@ node 139137685607136 did not generate any code
	@ exc: KeyError(reg int32_t t118)
	@ node 139137685312224 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 139137685311936 did not generate any code
	@ exc: KeyError(reg int t115)
	@ node 139137685322240 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137684888784 did not generate any code
	@ exc: KeyError(reg int t120)
	@ node 139137684887776 did not generate any code
	@ exc: KeyError(reg int t119)
	@ node 139137684888448 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label17
label19:
	@ emptystat
	@ node 139137685607952 did not generate any code
	@ exc: KeyError(reg int t123)
	@ node 139137685607520 did not generate any code
	@ exc: KeyError(reg int t123)
	@ node 139137685608528 did not generate any code
	@ exc: KeyError(reg int t125)
	@ node 139137685609824 did not generate any code
	@ exc: KeyError(reg int t125)
	@ irnode 139137685508688 type <class 'ir.AssignStat'>
label20:
	@ emptystat
	@ node 139137685508496 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685508784 did not generate any code
	@ exc: KeyError(reg int t131)
	@ node 139137685237184 did not generate any code
	@ exc: KeyError(reg int t130)
	@ node 139137685205536 did not generate any code
	@ exc: KeyError(reg int32_t t132)
	@ node 139137685148096 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 139137685149344 did not generate any code
	@ exc: KeyError(reg int t127)
	@ node 139137685234640 did not generate any code
	@ exc: KeyError(reg int t129)
	@ node 139137685237040 did not generate any code
	@ exc: KeyError(reg int t129)
	@ node 139137685508832 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685509024 did not generate any code
	@ exc: KeyError(reg int t134)
	@ node 139137685205056 did not generate any code
	@ exc: KeyError(reg int t133)
	@ node 139137685509216 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label20
label22:
	@ emptystat
	@ node 139137685205296 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 139137685206016 did not generate any code
	@ exc: KeyError(reg int t137)
	@ node 139137685206400 did not generate any code
	@ exc: KeyError(reg int t139)
	@ node 139137685206496 did not generate any code
	@ exc: KeyError(reg int t139)
	@ irnode 139137685512000 type <class 'ir.AssignStat'>
label23:
	@ emptystat
	@ node 139137685510128 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685511904 did not generate any code
	@ exc: KeyError(reg int t143)
	@ node 139137685207216 did not generate any code
	@ exc: KeyError(reg int t142)
	@ node 139137685208272 did not generate any code
	@ exc: KeyError(reg int32_t t144)
	@ node 139137685206928 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 139137685207024 did not generate any code
	@ exc: KeyError(reg int t141)
	@ node 139137685511856 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685511712 did not generate any code
	@ exc: KeyError(reg int t146)
	@ node 139137685207696 did not generate any code
	@ exc: KeyError(reg int t145)
	@ node 139137685511520 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label23
label25:
	@ emptystat
	@ node 139137685208032 did not generate any code
	@ exc: KeyError(reg int t149)
	@ node 139137685208752 did not generate any code
	@ exc: KeyError(reg int t149)
	@ node 139137685192768 did not generate any code
	@ exc: KeyError(reg int t151)
	@ node 139137685192912 did not generate any code
	@ exc: KeyError(reg int t151)
	@ irnode 139137685510464 type <class 'ir.AssignStat'>
label26:
	@ emptystat
	@ node 139137685510656 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685510368 did not generate any code
	@ exc: KeyError(reg int t155)
	@ node 139137685193632 did not generate any code
	@ exc: KeyError(reg int t154)
	@ node 139137685194688 did not generate any code
	@ exc: KeyError(reg int32_t t156)
	@ node 139137685193344 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 139137685193440 did not generate any code
	@ exc: KeyError(reg int t153)
	@ node 139137685510320 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685510176 did not generate any code
	@ exc: KeyError(reg int t158)
	@ node 139137685194112 did not generate any code
	@ exc: KeyError(reg int t157)
	@ node 139137685418288 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label26
label28:
	@ emptystat
	@ node 139137685194448 did not generate any code
	@ exc: KeyError(reg int t161)
	@ node 139137685195168 did not generate any code
	@ exc: KeyError(reg int t161)
	@ node 139137685195552 did not generate any code
	@ exc: KeyError(reg int t163)
	@ node 139137685195648 did not generate any code
	@ exc: KeyError(reg int t163)
	@ irnode 139137685419248 type <class 'ir.AssignStat'>
label29:
	@ emptystat
	@ node 139137685418864 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685419392 did not generate any code
	@ exc: KeyError(reg int t167)
	@ node 139137685196368 did not generate any code
	@ exc: KeyError(reg int t166)
	@ node 139137684873904 did not generate any code
	@ exc: KeyError(reg int32_t t168)
	@ node 139137685196080 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 139137685196176 did not generate any code
	@ exc: KeyError(reg int t165)
	@ node 139137685419344 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685419536 did not generate any code
	@ exc: KeyError(reg int t170)
	@ node 139137684873328 did not generate any code
	@ exc: KeyError(reg int t169)
	@ node 139137685419920 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label29
label31:
	@ emptystat
	@ node 139137684873664 did not generate any code
	@ exc: KeyError(reg int t173)
	@ node 139137684874384 did not generate any code
	@ exc: KeyError(reg int t173)
	@ node 139137685419728 did not generate any code
	@ exc: KeyError(reg int t174)
	@ node 139137685420112 did not generate any code
	@ exc: KeyError(reg int t174)
	@ node 139137684874960 did not generate any code
	@ exc: KeyError(reg int t176)
	@ node 139137684875056 did not generate any code
	@ exc: KeyError(reg int t176)
	@ irnode 139137685421456 type <class 'ir.AssignStat'>
label32:
	@ emptystat
	@ node 139137685421024 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685421984 did not generate any code
	@ exc: KeyError(reg int t185)
	@ node 139137684876784 did not generate any code
	@ exc: KeyError(reg int t184)
	@ node 139137684890192 did not generate any code
	@ exc: KeyError(reg int32_t t186)
	@ node 139137684875296 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 139137685420736 did not generate any code
	@ exc: KeyError(reg int t178)
	@ node 139137684875440 did not generate any code
	@ exc: KeyError(reg int t177)
	@ node 139137685421120 did not generate any code
	@ exc: KeyError(reg int32_t t179)
	@ node 139137684876016 did not generate any code
	@ exc: KeyError(reg int t181)
	@ node 139137684876112 did not generate any code
	@ exc: KeyError(reg int t181)
	@ node 139137684876496 did not generate any code
	@ exc: KeyError(reg int t183)
	@ node 139137684876592 did not generate any code
	@ exc: KeyError(reg int t183)
	@ node 139137685421936 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685421840 did not generate any code
	@ exc: KeyError(reg int t188)
	@ node 139137684889712 did not generate any code
	@ exc: KeyError(reg int t187)
	@ node 139137685421600 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label32
label34:
	@ emptystat
	@ node 139137684889952 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 139137684890672 did not generate any code
	@ exc: KeyError(reg int t191)
	@ node 139137684891056 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 139137684891152 did not generate any code
	@ exc: KeyError(reg int t193)
	@ node 139137685847296 did not generate any code
	@ exc: KeyError(reg int t194)
	@ node 139137685847488 did not generate any code
	@ exc: KeyError(reg int t194)
	@ node 139137684891728 did not generate any code
	@ exc: KeyError(reg int t196)
	@ node 139137684891824 did not generate any code
	@ exc: KeyError(reg int t196)
	@ irnode 139137685846480 type <class 'ir.AssignStat'>
label35:
	@ emptystat
	@ node 139137685846672 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685846384 did not generate any code
	@ exc: KeyError(reg int t203)
	@ node 139137684893072 did not generate any code
	@ exc: KeyError(reg int t202)
	@ node 139137684926960 did not generate any code
	@ exc: KeyError(reg int32_t t204)
	@ node 139137684892064 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 139137685847104 did not generate any code
	@ exc: KeyError(reg int t198)
	@ node 139137684892208 did not generate any code
	@ exc: KeyError(reg int t197)
	@ node 139137685846912 did not generate any code
	@ exc: KeyError(reg int32_t t199)
	@ node 139137684892784 did not generate any code
	@ exc: KeyError(reg int t201)
	@ node 139137684892880 did not generate any code
	@ exc: KeyError(reg int t201)
	@ node 139137685846288 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685336224 did not generate any code
	@ exc: KeyError(reg int t206)
	@ node 139137684926576 did not generate any code
	@ exc: KeyError(reg int t205)
	@ node 139137685336416 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label35
label37:
	@ emptystat
	@ node 139137684926720 did not generate any code
	@ exc: KeyError(reg int t209)
	@ node 139137684927440 did not generate any code
	@ exc: KeyError(reg int t209)
	@ node 139137684927824 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 139137684927920 did not generate any code
	@ exc: KeyError(reg int t211)
	@ node 139137684928304 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 139137684928400 did not generate any code
	@ exc: KeyError(reg int t213)
	@ node 139137685336992 did not generate any code
	@ exc: KeyError(reg int t214)
	@ node 139137685337184 did not generate any code
	@ exc: KeyError(reg int t214)
	@ irnode 139137685360544 type <class 'ir.AssignStat'>
label38:
	@ emptystat
	@ node 139137684939680 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685338528 did not generate any code
	@ exc: KeyError(reg int t230)
	@ node 139137684939824 did not generate any code
	@ exc: KeyError(reg int t229)
	@ node 139137684940784 did not generate any code
	@ exc: KeyError(reg int32_t t231)
	@ node 139137684929360 did not generate any code
	@ exc: KeyError(reg int t218)
	@ node 139137685337952 did not generate any code
	@ exc: KeyError(reg int t219)
	@ node 139137684929888 did not generate any code
	@ exc: KeyError(reg int t218)
	@ node 139137684930176 did not generate any code
	@ exc: KeyError(reg &int t223)
	@ node 139137684930368 did not generate any code
	@ exc: KeyError(reg &int t223)
	@ node 139137684930416 did not generate any code
	@ exc: KeyError(reg &int t224)
	@ node 139137685338144 did not generate any code
	@ exc: KeyError(reg int t225)
	@ node 139137684938912 did not generate any code
	@ exc: KeyError(reg int t222)
	@ node 139137684928784 did not generate any code
	@ exc: KeyError(reg int t215)
	@ node 139137685337664 did not generate any code
	@ exc: KeyError(reg int t216)
	@ node 139137684929024 did not generate any code
	@ exc: KeyError(reg int t215)
	@ node 139137684939200 did not generate any code
	@ exc: KeyError(reg &int t227)
	@ node 139137684939392 did not generate any code
	@ exc: KeyError(reg &int t227)
	@ node 139137684939440 did not generate any code
	@ exc: KeyError(reg &int t228)
	@ node 139137685338576 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	@ node 139137685338720 did not generate any code
	@ exc: KeyError(reg int t233)
	@ node 139137684940208 did not generate any code
	@ exc: KeyError(reg int t232)
	@ node 139137685338912 did not generate any code
	@ exc: AttributeError("'NoneType' object has no attribute 'symname'")
	b label38
label40:
	@ emptystat
	@ node 139137684976352 did not generate any code
	@ exc: KeyError(reg int t267)
	@ node 139137685339104 did not generate any code
	@ exc: KeyError(reg int t268)
	@ node 139137684976496 did not generate any code
	@ exc: KeyError(reg int t267)
	@ node 139137685339200 did not generate any code
	@ exc: KeyError(reg int32_t t269)
	@ node 139137684941072 did not generate any code
	@ exc: KeyError(reg int t236)
	@ node 139137684941312 did not generate any code
	@ exc: KeyError(reg int t236)
	@ node 139137684941552 did not generate any code
	@ exc: KeyError(reg int t237)
	@ node 139137685339728 did not generate any code
	@ exc: KeyError(reg int t238)
	@ node 139137684942128 did not generate any code
	@ exc: KeyError(reg int t237)
	@ node 139137684963392 did not generate any code
	@ exc: KeyError(reg &int t245)
	@ node 139137684963584 did not generate any code
	@ exc: KeyError(reg &int t245)
	@ node 139137684963632 did not generate any code
	@ exc: KeyError(reg &int t246)
	@ node 139137684963776 did not generate any code
	@ exc: KeyError(reg int t244)
	@ node 139137684964016 did not generate any code
	@ exc: KeyError(reg int t247)
	@ node 139137685319792 did not generate any code
	@ exc: KeyError(reg int t248)
	@ node 139137684964688 did not generate any code
	@ exc: KeyError(reg int t247)
	@ node 139137684963968 did not generate any code
	@ exc: KeyError(reg &int t255)
	@ node 139137684965600 did not generate any code
	@ exc: KeyError(reg &int t255)
	@ node 139137684965648 did not generate any code
	@ exc: KeyError(reg &int t256)
	@ node 139137684965792 did not generate any code
	@ exc: KeyError(reg int t254)
	@ node 139137684966080 did not generate any code
	@ exc: KeyError(reg int t257)
	@ node 139137685320272 did not generate any code
	@ exc: KeyError(reg int t258)
	@ node 139137684966752 did not generate any code
	@ exc: KeyError(reg int t257)
	@ node 139137684975728 did not generate any code
	@ exc: KeyError(reg &int t265)
	@ node 139137684975920 did not generate any code
	@ exc: KeyError(reg &int t265)
	@ node 139137684975968 did not generate any code
	@ exc: KeyError(reg &int t266)
	@ node 139137684976112 did not generate any code
	@ exc: KeyError(reg int t264)
label41:
	@ emptystat
	@ node 139137684977168 did not generate any code
	@ exc: KeyError(reg int t271)
	@ node 139137684977264 did not generate any code
	@ exc: KeyError(reg int t271)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

square:
@ block
	.equ _l_square_test, -4
	push {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	mov r11, sp
	sub sp, sp, #4
	@ irnode 139137684885760 type <class 'ir.StatList'>
	@ node 139137684977504 did not generate any code
	@ exc: KeyError(reg int t272)
	@ node 139137684886000 did not generate any code
	@ exc: KeyError(reg int t272)
	@ node 139137684977696 did not generate any code
	@ exc: KeyError(reg int t273)
	@ node 139137684886144 did not generate any code
	@ exc: KeyError(reg int t274)
	@ node 139137684977888 did not generate any code
	@ exc: KeyError(reg int t273)
	@ node 139137684886288 did not generate any code
	@ exc: KeyError(reg int32_t t275)
	mov sp, r11
	pop {r4, r5, r6, r7, r8, r9, r10, r11, lr}
	bx lr

--- Compilation Complete ---
