digraph G {
  rankdir=TB;
  node [shape=box, fontname="Courier New", fontsize=10];
  edge [fontname="Courier New", fontsize=9];

  // BasicBlock ID: 137537031920752
  BB_137537031920752 [label="reg int t0 <- 1234\nauto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t0\nreg int t1 <- global int x; _g_x: def byte 4\nreg int t2 <- global int x; _g_x: def byte 4\nreg int32_t t3 <- reg int t1 times reg int t2\nglobal int squ; _g_squ: def byte 4 <- reg int32_t t3"];
BB_137537031920752 -> exit_Func_square [label="{global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global int m; _g_m: def byte 4, global int y; _g_y: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global char[5] arr; _g_arr: def byte 5, global int p; _g_p: def byte 4, global int i; _g_i: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int sum; _g_sum: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  exit_Func_square [shape=ellipse, label="Return/Exit"];
  // BasicBlock ID: 137537031920848
  BB_137537031920848 [label="reg int t4 <- 1\nreg int t5 <- minus reg int t4\nglobal int x; _g_x: def byte 4 <- reg int t5\nread reg int t6\nglobal int x; _g_x: def byte 4 <- reg int t6\nreg int t10 <- global int x; _g_x: def byte 4\nreg int t11 <- 100\nreg int32_t t12 <- reg int t10 gtr reg int t11\nbranch on reg int32_t t12 to auto label label2"];
BB_137537031920848 -> BB_137537031920896 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
BB_137537031920848 -> BB_137537031921136 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031920896
  BB_137537031920896 [label="reg int t14 <- global int x; _g_x: def byte 4\nprint reg int t14\nbranch  to auto label label1"];
BB_137537031920896 -> BB_137537031921184 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031921136
  BB_137537031921136 [label="label2:\n[Error repr instr: ]\nreg int t7 <- global int x; _g_x: def byte 4\nreg int t9 <- minus reg int t7\nprint reg int t9"];
BB_137537031921136 -> BB_137537031921184 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031921184
  BB_137537031921184 [label="label1:\n[Error repr instr: ]\nreg int t15 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t15"];
BB_137537031921184 -> BB_137537031921328 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031921328
  BB_137537031921328 [label="label3:\n[Error repr instr: ]\nreg int t16 <- global int x; _g_x: def byte 4\nreg int t17 <- 10\nreg int32_t t18 <- reg int t16 leq reg int t17\nbranch on not reg int32_t t18 to auto label label4"];
BB_137537031921328 -> BB_137537031921376 [label="{global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
BB_137537031921328 -> BB_137537031921232 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031921376
  BB_137537031921376 [label="call  to auto function square\nreg int t19 <- global int x; _g_x: def byte 4\nreg int t20 <- 1\nreg int32_t t21 <- reg int t19 plus reg int t20\nglobal int x; _g_x: def byte 4 <- reg int32_t t21\nreg int t23 <- global int squ; _g_squ: def byte 4\nprint reg int t23\nbranch  to auto label label3"];
BB_137537031921376 -> BB_137537031921328 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031921232
  BB_137537031921232 [label="label4:\n[Error repr instr: ]\nreg int t24 <- 101\nglobal int x; _g_x: def byte 4 <- reg int t24"];
BB_137537031921232 -> BB_137537031921280 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031921280
  BB_137537031921280 [label="label5:\n[Error repr instr: ]\nreg int t25 <- global int x; _g_x: def byte 4\nreg int t26 <- 105\nreg int32_t t27 <- reg int t25 leq reg int t26\nbranch on not reg int32_t t27 to auto label label6"];
BB_137537031921280 -> BB_137537031921520 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global char[5] arr; _g_arr: def byte 5, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
BB_137537031921280 -> BB_137537031921616 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031921520
  BB_137537031921520 [label="reg int t28 <- global int x; _g_x: def byte 4\nreg int t29 <- global int x; _g_x: def byte 4\nreg int t30 <- 100\nreg int32_t t31 <- reg int t29 minus reg int t30\nreg int t32 <- 1\nreg int32_t t33 <- reg int32_t t31 times reg int t32\nreg &char t34 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t35 <- reg &char t34 plus reg int32_t t33\n[reg &char t35] <- reg int t28\nreg int t36 <- global int x; _g_x: def byte 4\nreg int t37 <- 100\nreg int32_t t38 <- reg int t36 minus reg int t37\nreg int t39 <- 1\nreg int32_t t41 <- reg int32_t t38 times reg int t39\nreg &char t46 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t47 <- reg &char t46 plus reg int32_t t41\nreg char t45 <- [reg &char t47]\nprint reg char t45\nreg int t48 <- global int x; _g_x: def byte 4\nreg int t49 <- 1\nreg int32_t t50 <- reg int t48 plus reg int t49\nglobal int x; _g_x: def byte 4 <- reg int32_t t50\nbranch  to auto label label5"];
BB_137537031921520 -> BB_137537031921280 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031921616
  BB_137537031921616 [label="label6:\n[Error repr instr: ]\nreg int t51 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t51\nreg int t52 <- 1\nglobal int y; _g_y: def byte 4 <- reg int t52"];
BB_137537031921616 -> BB_137537031921568 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031921568
  BB_137537031921568 [label="label9:\n[Error repr instr: ]\nreg int t53 <- global int x; _g_x: def byte 4\nreg int t54 <- 5\nreg int32_t t55 <- reg int t53 leq reg int t54\nbranch on not reg int32_t t55 to auto label label10"];
BB_137537031921568 -> BB_137537031932416 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int y; _g_y: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
BB_137537031921568 -> BB_137537031930544 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int n; _g_n: def byte 4, global int k; _g_k: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031932416
  BB_137537031932416 [label="label7:\n[Error repr instr: ]\nreg int t56 <- global int y; _g_y: def byte 4\nreg int t57 <- 5\nreg int32_t t58 <- reg int t56 leq reg int t57\nbranch on not reg int32_t t58 to auto label label8"];
BB_137537031932416 -> BB_137537031932368 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int y; _g_y: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global char[5] arr; _g_arr: def byte 5, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
BB_137537031932416 -> BB_137537031930016 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031932368
  BB_137537031932368 [label="reg int t59 <- global int x; _g_x: def byte 4\nreg int t60 <- 1\nreg int32_t t62 <- reg int t59 times reg int t60\nreg &char t64 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t65 <- reg &char t64 plus reg int32_t t62\nreg char t63 <- [reg &char t65]\nreg int t66 <- global int x; _g_x: def byte 4\nreg int t67 <- 10\nreg int32_t t68 <- reg int t66 times reg int t67\nreg int t69 <- global int y; _g_y: def byte 4\nreg int t70 <- 2\nreg int32_t t71 <- reg int t69 times reg int t70\nreg int32_t t72 <- reg int32_t t68 plus reg int32_t t71\nreg &short t73 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t74 <- reg &short t73 plus reg int32_t t72\n[reg &short t74] <- reg char t63\nreg int t75 <- global int x; _g_x: def byte 4\nreg int t76 <- 10\nreg int32_t t77 <- reg int t75 times reg int t76\nreg int t78 <- global int y; _g_y: def byte 4\nreg int t79 <- 2\nreg int32_t t80 <- reg int t78 times reg int t79\nreg int32_t t82 <- reg int32_t t77 plus reg int32_t t80\nreg &short t87 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t88 <- reg &short t87 plus reg int32_t t82\nreg short t86 <- [reg &short t88]\nprint reg short t86\nreg int t89 <- global int x; _g_x: def byte 4\nreg int t90 <- 1\nreg int32_t t91 <- reg int t89 plus reg int t90\nglobal int x; _g_x: def byte 4 <- reg int32_t t91\nreg int t92 <- global int y; _g_y: def byte 4\nreg int t93 <- 1\nreg int32_t t94 <- reg int t92 plus reg int t93\nglobal int y; _g_y: def byte 4 <- reg int32_t t94\nbranch  to auto label label7"];
BB_137537031932368 -> BB_137537031932416 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int y; _g_y: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031930016
  BB_137537031930016 [label="label8:\n[Error repr instr: ]\nbranch  to auto label label9"];
BB_137537031930016 -> BB_137537031921568 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031930544
  BB_137537031930544 [label="label10:\n[Error repr instr: ]\n[Error repr instr: ]"];
BB_137537031930544 -> BB_137537031930688 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, auto int a, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031930688
  BB_137537031930688 [label="label11:\n[Error repr instr: ]\nreg int t95 <- auto int a\nreg int t96 <- 20\nreg int32_t t97 <- reg int t95 leq reg int t96\nbranch on not reg int32_t t97 to auto label label13"];
BB_137537031930688 -> BB_137537031930736 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, auto int a, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
BB_137537031930688 -> BB_137537031930496 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int n; _g_n: def byte 4, global int k; _g_k: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930736
  BB_137537031930736 [label="reg int t99 <- auto int a\nprint reg int t99\nreg int t100 <- auto int a\nreg int t101 <- 1\nreg int32_t t102 <- reg int t100 plus reg int t101\nauto int a <- reg int32_t t102\nbranch  to auto label label11"];
BB_137537031930736 -> BB_137537031930688 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, auto int a, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031930496
  BB_137537031930496 [label="label13:\n[Error repr instr: ]\nreg int t103 <- 10\nglobal int i; _g_i: def byte 4 <- reg int t103\nreg int t105 <- 99991\nprint reg int t105\n[Error repr instr: ]"];
BB_137537031930496 -> BB_137537031930640 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int i; _g_i: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, auto int i}"];
  // BasicBlock ID: 137537031930640
  BB_137537031930640 [label="label14:\n[Error repr instr: ]\nreg int t106 <- auto int i\nreg int t107 <- 15\nreg int32_t t108 <- reg int t106 leq reg int t107\nbranch on not reg int32_t t108 to auto label label16"];
BB_137537031930640 -> BB_137537031930112 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int i; _g_i: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, auto int i}"];
BB_137537031930640 -> BB_137537031930160 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int n; _g_n: def byte 4, global int k; _g_k: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930112
  BB_137537031930112 [label="reg int t110 <- global int i; _g_i: def byte 4\nprint reg int t110\nreg int t111 <- auto int i\nreg int t112 <- 1\nreg int32_t t113 <- reg int t111 plus reg int t112\nauto int i <- reg int32_t t113\nbranch  to auto label label14"];
BB_137537031930112 -> BB_137537031930640 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int i; _g_i: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4, auto int i}"];
  // BasicBlock ID: 137537031930160
  BB_137537031930160 [label="label16:\n[Error repr instr: ]\nreg int t115 <- 88881\nprint reg int t115\nreg int t117 <- 99992\nprint reg int t117\n[Error repr instr: ]"];
BB_137537031930160 -> BB_137537031930400 [label="{global int r; _g_r: def byte 4, auto int j, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031930400
  BB_137537031930400 [label="label17:\n[Error repr instr: ]\nreg int t118 <- auto int j\nreg int t119 <- 5\nreg int32_t t120 <- reg int t118 leq reg int t119\nbranch on not reg int32_t t120 to auto label label19"];
BB_137537031930400 -> BB_137537031930448 [label="{global int r; _g_r: def byte 4, auto int j, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
BB_137537031930400 -> BB_137537031930064 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int k; _g_k: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930448
  BB_137537031930448 [label="reg int t122 <- global int j; _g_j: def byte 4\nprint reg int t122\nreg int t123 <- auto int j\nreg int t124 <- 1\nreg int32_t t125 <- reg int t123 plus reg int t124\nauto int j <- reg int32_t t125\nbranch  to auto label label17"];
BB_137537031930448 -> BB_137537031930400 [style=dashed, label="{global int r; _g_r: def byte 4, auto int j, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031930064
  BB_137537031930064 [label="label19:\n[Error repr instr: ]\nreg int t127 <- 88882\nprint reg int t127\nreg int t129 <- 99993\nprint reg int t129\n[Error repr instr: ]"];
BB_137537031930064 -> BB_137537031929920 [label="{global int r; _g_r: def byte 4, auto int k, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031929920
  BB_137537031929920 [label="label20:\n[Error repr instr: ]\nreg int t130 <- auto int k\nreg int t131 <- 5\nreg int32_t t132 <- reg int t130 leq reg int t131\nbranch on not reg int32_t t132 to auto label label22"];
BB_137537031929920 -> BB_137537031929968 [label="{global int r; _g_r: def byte 4, auto int k, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int k; _g_k: def byte 4}"];
BB_137537031929920 -> BB_137537031930304 [style=dashed, label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031929968
  BB_137537031929968 [label="reg int t134 <- 77777\nprint reg int t134\nreg int t136 <- global int k; _g_k: def byte 4\nprint reg int t136\nreg int t137 <- auto int k\nreg int t138 <- 1\nreg int32_t t139 <- reg int t137 plus reg int t138\nauto int k <- reg int32_t t139\nbranch  to auto label label20"];
BB_137537031929968 -> BB_137537031929920 [style=dashed, label="{global int r; _g_r: def byte 4, auto int k, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int k; _g_k: def byte 4}"];
  // BasicBlock ID: 137537031930304
  BB_137537031930304 [label="label22:\n[Error repr instr: ]\nreg int t141 <- 88883\nprint reg int t141\nreg int t143 <- 99994\nprint reg int t143\n[Error repr instr: ]"];
BB_137537031930304 -> BB_137537031930352 [label="{global int r; _g_r: def byte 4, auto int m, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930352
  BB_137537031930352 [label="label23:\n[Error repr instr: ]\nreg int t144 <- auto int m\nreg int t145 <- 6\nreg int32_t t146 <- reg int t144 leq reg int t145\nbranch on not reg int32_t t146 to auto label label25"];
BB_137537031930352 -> BB_137537031930208 [label="{global int r; _g_r: def byte 4, auto int m, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
BB_137537031930352 -> BB_137537031930256 [style=dashed, label="{global int r; _g_r: def byte 4, global int n; _g_n: def byte 4, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930208
  BB_137537031930208 [label="reg int t148 <- global int m; _g_m: def byte 4\nprint reg int t148\nreg int t149 <- auto int m\nreg int t150 <- 1\nreg int32_t t151 <- reg int t149 plus reg int t150\nauto int m <- reg int32_t t151\nbranch  to auto label label23"];
BB_137537031930208 -> BB_137537031930352 [style=dashed, label="{global int r; _g_r: def byte 4, auto int m, global int m; _g_m: def byte 4, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930256
  BB_137537031930256 [label="label25:\n[Error repr instr: ]\nreg int t153 <- 88884\nprint reg int t153\nreg int t155 <- 99995\nprint reg int t155\n[Error repr instr: ]"];
BB_137537031930256 -> BB_137537031930928 [label="{global int r; _g_r: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930928
  BB_137537031930928 [label="label26:\n[Error repr instr: ]\nreg int t156 <- auto int n\nreg int t157 <- 7\nreg int32_t t158 <- reg int t156 leq reg int t157\nbranch on not reg int32_t t158 to auto label label28"];
BB_137537031930928 -> BB_137537031931168 [label="{global int r; _g_r: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
BB_137537031930928 -> BB_137537031931216 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031931168
  BB_137537031931168 [label="reg int t160 <- global int n; _g_n: def byte 4\nprint reg int t160\nreg int t161 <- auto int n\nreg int t162 <- 1\nreg int32_t t163 <- reg int t161 plus reg int t162\nauto int n <- reg int32_t t163\nbranch  to auto label label26"];
BB_137537031931168 -> BB_137537031930928 [style=dashed, label="{global int r; _g_r: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031931216
  BB_137537031931216 [label="label28:\n[Error repr instr: ]\nreg int t165 <- 88885\nprint reg int t165\nreg int t167 <- 99996\nprint reg int t167\n[Error repr instr: ]"];
BB_137537031931216 -> BB_137537031931456 [label="{global int r; _g_r: def byte 4, auto int p, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031931456
  BB_137537031931456 [label="label29:\n[Error repr instr: ]\nreg int t168 <- auto int p\nreg int t169 <- 12\nreg int32_t t170 <- reg int t168 leq reg int t169\nbranch on not reg int32_t t170 to auto label label31"];
BB_137537031931456 -> BB_137537031931504 [label="{global int r; _g_r: def byte 4, auto int p, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
BB_137537031931456 -> BB_137537031930880 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 137537031931504
  BB_137537031931504 [label="reg int t172 <- global int p; _g_p: def byte 4\nprint reg int t172\nreg int t173 <- auto int p\nreg int t174 <- 1\nreg int32_t t175 <- reg int t173 plus reg int t174\nauto int p <- reg int32_t t175\nbranch  to auto label label29"];
BB_137537031931504 -> BB_137537031931456 [style=dashed, label="{global int r; _g_r: def byte 4, auto int p, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 137537031930880
  BB_137537031930880 [label="label31:\n[Error repr instr: ]\nreg int t177 <- 88886\nprint reg int t177\nreg int t178 <- 0\nglobal int sum; _g_sum: def byte 4 <- reg int t178\nreg int t180 <- 99997\nprint reg int t180\n[Error repr instr: ]"];
BB_137537031930880 -> BB_137537031931120 [label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int sum; _g_sum: def byte 4, auto int q}"];
  // BasicBlock ID: 137537031931120
  BB_137537031931120 [label="label32:\n[Error repr instr: ]\nreg int t181 <- auto int q\nreg int t182 <- 5\nreg int32_t t183 <- reg int t181 leq reg int t182\nbranch on not reg int32_t t183 to auto label label34"];
BB_137537031931120 -> BB_137537031930976 [label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int sum; _g_sum: def byte 4, auto int q}"];
BB_137537031931120 -> BB_137537031931024 [style=dashed, label="{global int r; _g_r: def byte 4, global int sum; _g_sum: def byte 4}"];
  // BasicBlock ID: 137537031930976
  BB_137537031930976 [label="reg int t184 <- global int sum; _g_sum: def byte 4\nreg int t185 <- global int q; _g_q: def byte 4\nreg int32_t t186 <- reg int t184 plus reg int t185\nglobal int sum; _g_sum: def byte 4 <- reg int32_t t186\nreg int t188 <- global int q; _g_q: def byte 4\nprint reg int t188\nreg int t190 <- global int sum; _g_sum: def byte 4\nprint reg int t190\nreg int t191 <- auto int q\nreg int t192 <- 1\nreg int32_t t193 <- reg int t191 plus reg int t192\nauto int q <- reg int32_t t193\nbranch  to auto label label32"];
BB_137537031930976 -> BB_137537031931120 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int sum; _g_sum: def byte 4, auto int q}"];
  // BasicBlock ID: 137537031931024
  BB_137537031931024 [label="label34:\n[Error repr instr: ]\nreg int t195 <- global int sum; _g_sum: def byte 4\nprint reg int t195\nreg int t197 <- 88887\nprint reg int t197\nreg int t198 <- 100\nglobal int x; _g_x: def byte 4 <- reg int t198\nreg int t200 <- 99998\nprint reg int t200\n[Error repr instr: ]"];
BB_137537031931024 -> BB_137537031931360 [label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031931360
  BB_137537031931360 [label="label35:\n[Error repr instr: ]\nreg int t201 <- auto int r\nreg int t202 <- 3\nreg int32_t t203 <- reg int t201 leq reg int t202\nbranch on not reg int32_t t203 to auto label label37"];
BB_137537031931360 -> BB_137537031931408 [label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
BB_137537031931360 -> BB_137537031920992 [style=dashed, label="{global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031931408
  BB_137537031931408 [label="reg int t204 <- global int x; _g_x: def byte 4\nreg int t205 <- global int r; _g_r: def byte 4\nreg int32_t t206 <- reg int t204 plus reg int t205\nglobal int x; _g_x: def byte 4 <- reg int32_t t206\nreg int t208 <- global int x; _g_x: def byte 4\nprint reg int t208\nreg int t209 <- auto int r\nreg int t210 <- 1\nreg int32_t t211 <- reg int t209 plus reg int t210\nauto int r <- reg int32_t t211\nbranch  to auto label label35"];
BB_137537031931408 -> BB_137537031931360 [style=dashed, label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 137537031920992
  BB_137537031920992 [label="label37:\n[Error repr instr: ]\nreg int t213 <- global int x; _g_x: def byte 4\nprint reg int t213\nreg int t215 <- 88888\nprint reg int t215"];
BB_137537031920992 -> exit_global [label="set()"];
  exit_global [shape=ellipse, label="Return/Exit"];

  // Entry Points
  Entry_square [shape=ellipse, label="square()"];
  Entry_square -> BB_137537031920752 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int y; _g_y: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global char[5] arr; _g_arr: def byte 5, global int p; _g_p: def byte 4, global int i; _g_i: def byte 4, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int sum; _g_sum: def byte 4, global int k; _g_k: def byte 4, global int x; _g_x: def byte 4}", weight=10];
  main [shape=diamond, label="main (global scope)"];
  main -> BB_137537031920848 [label="{global int r; _g_r: def byte 4, global int m; _g_m: def byte 4, global int squ; _g_squ: def byte 4, global int n; _g_n: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int p; _g_p: def byte 4, global char[5] arr; _g_arr: def byte 5, global int q; _g_q: def byte 4, global int j; _g_j: def byte 4, global int k; _g_k: def byte 4}", weight=10];
}
