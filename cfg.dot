digraph G {
  rankdir=TB;
  node [shape=box, fontname="Courier New", fontsize=10];
  edge [fontname="Courier New", fontsize=9];

  // BasicBlock ID: 132180401798016
  BB_132180401798016 [label="reg int t0 <- 1234\nauto int test; _l_square_test: fp + (-4) [def byte 4] <- reg int t0\nreg int t1 <- global int x; _g_x: def byte 4\nreg int t2 <- global int x; _g_x: def byte 4\nreg int32_t t3 <- reg int t1 times reg int t2\nglobal int squ; _g_squ: def byte 4 <- reg int32_t t3"];
BB_132180401798016 -> exit_Func_square [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int sum; _g_sum: def byte 4, global int i; _g_i: def byte 4, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  exit_Func_square [shape=ellipse, label="Return/Exit"];
  // BasicBlock ID: 132180401798160
  BB_132180401798160 [label="reg int t4 <- 1\nreg int t5 <- minus reg int t4\nglobal int x; _g_x: def byte 4 <- reg int t5\nread reg int t6\nglobal int x; _g_x: def byte 4 <- reg int t6\nreg int t10 <- global int x; _g_x: def byte 4\nreg int t11 <- 100\nreg int32_t t12 <- reg int t10 gtr reg int t11\nbranch on reg int32_t t12 to auto label label2"];
BB_132180401798160 -> BB_132180401798208 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
BB_132180401798160 -> BB_132180401798064 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401798208
  BB_132180401798208 [label="reg int t14 <- global int x; _g_x: def byte 4\nprint reg int t14\nbranch  to auto label label1"];
BB_132180401798208 -> BB_132180401798112 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401798064
  BB_132180401798064 [label="label2:\n[Error repr instr: ]\nreg int t7 <- global int x; _g_x: def byte 4\nreg int t9 <- minus reg int t7\nprint reg int t9"];
BB_132180401798064 -> BB_132180401798112 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401798112
  BB_132180401798112 [label="label1:\n[Error repr instr: ]\nreg int t15 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t15"];
BB_132180401798112 -> BB_132180401799280 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799280
  BB_132180401799280 [label="label3:\n[Error repr instr: ]\nreg int t21 <- global int x; _g_x: def byte 4\nreg int t22 <- 10\nreg int32_t t23 <- reg int t21 leq reg int t22\nbranch on not reg int32_t t23 to auto label label4"];
BB_132180401799280 -> BB_132180401799328 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
BB_132180401799280 -> BB_132180401799520 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401799328
  BB_132180401799328 [label="call  to auto function square\nreg int t16 <- global int x; _g_x: def byte 4\nreg int t17 <- 1\nreg int32_t t18 <- reg int t16 plus reg int t17\nglobal int x; _g_x: def byte 4 <- reg int32_t t18\nreg int t20 <- global int squ; _g_squ: def byte 4\nprint reg int t20\nbranch  to auto label label3"];
BB_132180401799328 -> BB_132180401799280 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799520
  BB_132180401799520 [label="label4:\n[Error repr instr: ]\nreg int t24 <- 101\nglobal int x; _g_x: def byte 4 <- reg int t24"];
BB_132180401799520 -> BB_132180401799568 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799568
  BB_132180401799568 [label="label5:\n[Error repr instr: ]\nreg int t48 <- global int x; _g_x: def byte 4\nreg int t49 <- 105\nreg int32_t t50 <- reg int t48 leq reg int t49\nbranch on not reg int32_t t50 to auto label label6"];
BB_132180401799568 -> BB_132180401799232 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
BB_132180401799568 -> BB_132180401799472 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401799232
  BB_132180401799232 [label="reg int t25 <- global int x; _g_x: def byte 4\nreg int t26 <- global int x; _g_x: def byte 4\nreg int t27 <- 100\nreg int32_t t28 <- reg int t26 minus reg int t27\nreg int t29 <- 1\nreg int32_t t30 <- reg int32_t t28 times reg int t29\nreg &char t31 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t32 <- reg &char t31 plus reg int32_t t30\n[reg &char t32] <- reg int t25\nreg int t33 <- global int x; _g_x: def byte 4\nreg int t34 <- 100\nreg int32_t t35 <- reg int t33 minus reg int t34\nreg int t36 <- 1\nreg int32_t t38 <- reg int32_t t35 times reg int t36\nreg &char t43 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t44 <- reg &char t43 plus reg int32_t t38\nreg char t42 <- [reg &char t44]\nprint reg char t42\nreg int t45 <- global int x; _g_x: def byte 4\nreg int t46 <- 1\nreg int32_t t47 <- reg int t45 plus reg int t46\nglobal int x; _g_x: def byte 4 <- reg int32_t t47\nbranch  to auto label label5"];
BB_132180401799232 -> BB_132180401799568 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799472
  BB_132180401799472 [label="label6:\n[Error repr instr: ]\nreg int t51 <- 1\nglobal int x; _g_x: def byte 4 <- reg int t51\nreg int t52 <- 1\nglobal int y; _g_y: def byte 4 <- reg int t52"];
BB_132180401799472 -> BB_132180401799760 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799760
  BB_132180401799760 [label="label9:\n[Error repr instr: ]\nreg int t92 <- global int x; _g_x: def byte 4\nreg int t93 <- 5\nreg int32_t t94 <- reg int t92 leq reg int t93\nbranch on not reg int32_t t94 to auto label label10"];
BB_132180401799760 -> BB_132180401799808 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
BB_132180401799760 -> BB_132180401800048 [style=dashed, label="{global int r; _g_r: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401799808
  BB_132180401799808 [label="label7:\n[Error repr instr: ]\nreg int t89 <- global int y; _g_y: def byte 4\nreg int t90 <- 5\nreg int32_t t91 <- reg int t89 leq reg int t90\nbranch on not reg int32_t t91 to auto label label8"];
BB_132180401799808 -> BB_132180401799952 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
BB_132180401799808 -> BB_132180401800000 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401799952
  BB_132180401799952 [label="reg int t53 <- global int x; _g_x: def byte 4\nreg int t54 <- 1\nreg int32_t t56 <- reg int t53 times reg int t54\nreg &char t58 <- &(global char[5] arr; _g_arr: def byte 5)\nreg &char t59 <- reg &char t58 plus reg int32_t t56\nreg char t57 <- [reg &char t59]\nreg int t60 <- global int x; _g_x: def byte 4\nreg int t61 <- 10\nreg int32_t t62 <- reg int t60 times reg int t61\nreg int t63 <- global int y; _g_y: def byte 4\nreg int t64 <- 2\nreg int32_t t65 <- reg int t63 times reg int t64\nreg int32_t t66 <- reg int32_t t62 plus reg int32_t t65\nreg &short t67 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t68 <- reg &short t67 plus reg int32_t t66\n[reg &short t68] <- reg char t57\nreg int t69 <- global int x; _g_x: def byte 4\nreg int t70 <- 10\nreg int32_t t71 <- reg int t69 times reg int t70\nreg int t72 <- global int y; _g_y: def byte 4\nreg int t73 <- 2\nreg int32_t t74 <- reg int t72 times reg int t73\nreg int32_t t76 <- reg int32_t t71 plus reg int32_t t74\nreg &short t81 <- &(global short[5, 5] multid; _g_multid: def byte 50)\nreg &short t82 <- reg &short t81 plus reg int32_t t76\nreg short t80 <- [reg &short t82]\nprint reg short t80\nreg int t83 <- global int x; _g_x: def byte 4\nreg int t84 <- 1\nreg int32_t t85 <- reg int t83 plus reg int t84\nglobal int x; _g_x: def byte 4 <- reg int32_t t85\nreg int t86 <- global int y; _g_y: def byte 4\nreg int t87 <- 1\nreg int32_t t88 <- reg int t86 plus reg int t87\nglobal int y; _g_y: def byte 4 <- reg int32_t t88\nbranch  to auto label label7"];
BB_132180401799952 -> BB_132180401799808 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401800000
  BB_132180401800000 [label="label8:\n[Error repr instr: ]\nbranch  to auto label label9"];
BB_132180401800000 -> BB_132180401799760 [style=dashed, label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401800048
  BB_132180401800048 [label="label10:\n[Error repr instr: ]\n[Error repr instr: ]"];
BB_132180401800048 -> BB_132180401799856 [label="{global int r; _g_r: def byte 4, auto int a, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401799856
  BB_132180401799856 [label="label11:\n[Error repr instr: ]\nreg int t100 <- auto int a\nreg int t101 <- 20\nreg int32_t t102 <- reg int t100 leq reg int t101\nbranch on not reg int32_t t102 to auto label label13"];
BB_132180401799856 -> BB_132180401799904 [label="{global int r; _g_r: def byte 4, auto int a, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
BB_132180401799856 -> BB_132180401800096 [style=dashed, label="{global int r; _g_r: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401799904
  BB_132180401799904 [label="reg int t96 <- auto int a\nprint reg int t96\nreg int t97 <- auto int a\nreg int t98 <- 1\nreg int32_t t99 <- reg int t97 plus reg int t98\nauto int a <- reg int32_t t99\nbranch  to auto label label11"];
BB_132180401799904 -> BB_132180401799856 [style=dashed, label="{global int r; _g_r: def byte 4, auto int a, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401800096
  BB_132180401800096 [label="label13:\n[Error repr instr: ]\nreg int t103 <- 10\nglobal int i; _g_i: def byte 4 <- reg int t103\nreg int t105 <- 99991\nprint reg int t105\n[Error repr instr: ]"];
BB_132180401800096 -> BB_132180401800144 [label="{global int r; _g_r: def byte 4, auto int i, global int i; _g_i: def byte 4, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401800144
  BB_132180401800144 [label="label14:\n[Error repr instr: ]\nreg int t111 <- auto int i\nreg int t112 <- 15\nreg int32_t t113 <- reg int t111 leq reg int t112\nbranch on not reg int32_t t113 to auto label label16"];
BB_132180401800144 -> BB_132180401800192 [label="{global int r; _g_r: def byte 4, auto int i, global int i; _g_i: def byte 4, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
BB_132180401800144 -> BB_132180401800240 [style=dashed, label="{global int r; _g_r: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401800192
  BB_132180401800192 [label="reg int t107 <- global int i; _g_i: def byte 4\nprint reg int t107\nreg int t108 <- auto int i\nreg int t109 <- 1\nreg int32_t t110 <- reg int t108 plus reg int t109\nauto int i <- reg int32_t t110\nbranch  to auto label label14"];
BB_132180401800192 -> BB_132180401800144 [style=dashed, label="{global int r; _g_r: def byte 4, auto int i, global int i; _g_i: def byte 4, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401800240
  BB_132180401800240 [label="label16:\n[Error repr instr: ]\nreg int t115 <- 88881\nprint reg int t115\nreg int t117 <- 99992\nprint reg int t117\n[Error repr instr: ]"];
BB_132180401800240 -> BB_132180401800288 [label="{global int r; _g_r: def byte 4, auto int j, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401800288
  BB_132180401800288 [label="label17:\n[Error repr instr: ]\nreg int t123 <- auto int j\nreg int t124 <- 5\nreg int32_t t125 <- reg int t123 leq reg int t124\nbranch on not reg int32_t t125 to auto label label19"];
BB_132180401800288 -> BB_132180401800336 [label="{global int r; _g_r: def byte 4, auto int j, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
BB_132180401800288 -> BB_132180401800384 [style=dashed, label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401800336
  BB_132180401800336 [label="reg int t119 <- global int j; _g_j: def byte 4\nprint reg int t119\nreg int t120 <- auto int j\nreg int t121 <- 1\nreg int32_t t122 <- reg int t120 plus reg int t121\nauto int j <- reg int32_t t122\nbranch  to auto label label17"];
BB_132180401800336 -> BB_132180401800288 [style=dashed, label="{global int r; _g_r: def byte 4, auto int j, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401800384
  BB_132180401800384 [label="label19:\n[Error repr instr: ]\nreg int t127 <- 88882\nprint reg int t127\nreg int t129 <- 99993\nprint reg int t129\n[Error repr instr: ]"];
BB_132180401800384 -> BB_132180401801392 [label="{global int r; _g_r: def byte 4, auto int k, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401801392
  BB_132180401801392 [label="label20:\n[Error repr instr: ]\nreg int t137 <- auto int k\nreg int t138 <- 5\nreg int32_t t139 <- reg int t137 leq reg int t138\nbranch on not reg int32_t t139 to auto label label22"];
BB_132180401801392 -> BB_132180401801920 [label="{global int r; _g_r: def byte 4, auto int k, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
BB_132180401801392 -> BB_132180401802064 [style=dashed, label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401801920
  BB_132180401801920 [label="reg int t131 <- 77777\nprint reg int t131\nreg int t133 <- global int k; _g_k: def byte 4\nprint reg int t133\nreg int t134 <- auto int k\nreg int t135 <- 1\nreg int32_t t136 <- reg int t134 plus reg int t135\nauto int k <- reg int32_t t136\nbranch  to auto label label20"];
BB_132180401801920 -> BB_132180401801392 [style=dashed, label="{global int r; _g_r: def byte 4, auto int k, global int n; _g_n: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}"];
  // BasicBlock ID: 132180401802064
  BB_132180401802064 [label="label22:\n[Error repr instr: ]\nreg int t141 <- 88883\nprint reg int t141\nreg int t143 <- 99994\nprint reg int t143\n[Error repr instr: ]"];
BB_132180401802064 -> BB_132180401802112 [label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int m, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401802112
  BB_132180401802112 [label="label23:\n[Error repr instr: ]\nreg int t149 <- auto int m\nreg int t150 <- 6\nreg int32_t t151 <- reg int t149 leq reg int t150\nbranch on not reg int32_t t151 to auto label label25"];
BB_132180401802112 -> BB_132180401801872 [label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int m, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
BB_132180401802112 -> BB_132180401802016 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401801872
  BB_132180401801872 [label="reg int t145 <- global int m; _g_m: def byte 4\nprint reg int t145\nreg int t146 <- auto int m\nreg int t147 <- 1\nreg int32_t t148 <- reg int t146 plus reg int t147\nauto int m <- reg int32_t t148\nbranch  to auto label label23"];
BB_132180401801872 -> BB_132180401802112 [style=dashed, label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int m, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401802016
  BB_132180401802016 [label="label25:\n[Error repr instr: ]\nreg int t153 <- 88884\nprint reg int t153\nreg int t155 <- 99995\nprint reg int t155\n[Error repr instr: ]"];
BB_132180401802016 -> BB_132180401801152 [label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401801152
  BB_132180401801152 [label="label26:\n[Error repr instr: ]\nreg int t161 <- auto int n\nreg int t162 <- 7\nreg int32_t t163 <- reg int t161 leq reg int t162\nbranch on not reg int32_t t163 to auto label label28"];
BB_132180401801152 -> BB_132180401801248 [label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4}"];
BB_132180401801152 -> BB_132180401801488 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4, global int p; _g_p: def byte 4}"];
  // BasicBlock ID: 132180401801248
  BB_132180401801248 [label="reg int t157 <- global int n; _g_n: def byte 4\nprint reg int t157\nreg int t158 <- auto int n\nreg int t159 <- 1\nreg int32_t t160 <- reg int t158 plus reg int t159\nauto int n <- reg int32_t t160\nbranch  to auto label label26"];
BB_132180401801248 -> BB_132180401801152 [style=dashed, label="{global int r; _g_r: def byte 4, global int p; _g_p: def byte 4, auto int n, global int q; _g_q: def byte 4, global int n; _g_n: def byte 4}"];
  // BasicBlock ID: 132180401801488
  BB_132180401801488 [label="label28:\n[Error repr instr: ]\nreg int t165 <- 88885\nprint reg int t165\nreg int t167 <- 99996\nprint reg int t167\n[Error repr instr: ]"];
BB_132180401801488 -> BB_132180401801536 [label="{global int r; _g_r: def byte 4, auto int p, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 132180401801536
  BB_132180401801536 [label="label29:\n[Error repr instr: ]\nreg int t173 <- auto int p\nreg int t174 <- 12\nreg int32_t t175 <- reg int t173 leq reg int t174\nbranch on not reg int32_t t175 to auto label label31"];
BB_132180401801536 -> BB_132180401801776 [label="{global int r; _g_r: def byte 4, auto int p, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4}"];
BB_132180401801536 -> BB_132180401801824 [style=dashed, label="{global int r; _g_r: def byte 4, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 132180401801776
  BB_132180401801776 [label="reg int t169 <- global int p; _g_p: def byte 4\nprint reg int t169\nreg int t170 <- auto int p\nreg int t171 <- 1\nreg int32_t t172 <- reg int t170 plus reg int t171\nauto int p <- reg int32_t t172\nbranch  to auto label label29"];
BB_132180401801776 -> BB_132180401801536 [style=dashed, label="{global int r; _g_r: def byte 4, auto int p, global int p; _g_p: def byte 4, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 132180401801824
  BB_132180401801824 [label="label31:\n[Error repr instr: ]\nreg int t177 <- 88886\nprint reg int t177\nreg int t178 <- 0\nglobal int sum; _g_sum: def byte 4 <- reg int t178\nreg int t180 <- 99997\nprint reg int t180\n[Error repr instr: ]"];
BB_132180401801824 -> BB_132180401801200 [label="{global int r; _g_r: def byte 4, global int sum; _g_sum: def byte 4, auto int q, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 132180401801200
  BB_132180401801200 [label="label32:\n[Error repr instr: ]\nreg int t191 <- auto int q\nreg int t192 <- 5\nreg int32_t t193 <- reg int t191 leq reg int t192\nbranch on not reg int32_t t193 to auto label label34"];
BB_132180401801200 -> BB_132180401801440 [label="{global int r; _g_r: def byte 4, auto int q, global int sum; _g_sum: def byte 4, global int q; _g_q: def byte 4}"];
BB_132180401801200 -> BB_132180401801296 [style=dashed, label="{global int r; _g_r: def byte 4, global int sum; _g_sum: def byte 4}"];
  // BasicBlock ID: 132180401801440
  BB_132180401801440 [label="reg int t181 <- global int sum; _g_sum: def byte 4\nreg int t182 <- global int q; _g_q: def byte 4\nreg int32_t t183 <- reg int t181 plus reg int t182\nglobal int sum; _g_sum: def byte 4 <- reg int32_t t183\nreg int t185 <- global int q; _g_q: def byte 4\nprint reg int t185\nreg int t187 <- global int sum; _g_sum: def byte 4\nprint reg int t187\nreg int t188 <- auto int q\nreg int t189 <- 1\nreg int32_t t190 <- reg int t188 plus reg int t189\nauto int q <- reg int32_t t190\nbranch  to auto label label32"];
BB_132180401801440 -> BB_132180401801200 [style=dashed, label="{global int r; _g_r: def byte 4, global int sum; _g_sum: def byte 4, auto int q, global int q; _g_q: def byte 4}"];
  // BasicBlock ID: 132180401801296
  BB_132180401801296 [label="label34:\n[Error repr instr: ]\nreg int t195 <- global int sum; _g_sum: def byte 4\nprint reg int t195\nreg int t197 <- 88887\nprint reg int t197\nreg int t198 <- 100\nglobal int x; _g_x: def byte 4 <- reg int t198\nreg int t200 <- 99998\nprint reg int t200\n[Error repr instr: ]"];
BB_132180401801296 -> BB_132180401801344 [label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401801344
  BB_132180401801344 [label="label35:\n[Error repr instr: ]\nreg int t209 <- auto int r\nreg int t210 <- 3\nreg int32_t t211 <- reg int t209 leq reg int t210\nbranch on not reg int32_t t211 to auto label label37"];
BB_132180401801344 -> BB_132180401801680 [label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
BB_132180401801344 -> BB_132180401795232 [style=dashed, label="{global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401801680
  BB_132180401801680 [label="reg int t201 <- global int x; _g_x: def byte 4\nreg int t202 <- global int r; _g_r: def byte 4\nreg int32_t t203 <- reg int t201 plus reg int t202\nglobal int x; _g_x: def byte 4 <- reg int32_t t203\nreg int t205 <- global int x; _g_x: def byte 4\nprint reg int t205\nreg int t206 <- auto int r\nreg int t207 <- 1\nreg int32_t t208 <- reg int t206 plus reg int t207\nauto int r <- reg int32_t t208\nbranch  to auto label label35"];
BB_132180401801680 -> BB_132180401801344 [style=dashed, label="{global int r; _g_r: def byte 4, auto int r, global int x; _g_x: def byte 4}"];
  // BasicBlock ID: 132180401795232
  BB_132180401795232 [label="label37:\n[Error repr instr: ]\nreg int t213 <- global int x; _g_x: def byte 4\nprint reg int t213\nreg int t215 <- 88888\nprint reg int t215"];
BB_132180401795232 -> exit_global [label="set()"];
  exit_global [shape=ellipse, label="Return/Exit"];

  // Entry Points
  Entry_square [shape=ellipse, label="square()"];
  Entry_square -> BB_132180401798016 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int sum; _g_sum: def byte 4, global int i; _g_i: def byte 4, global int n; _g_n: def byte 4, global int y; _g_y: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4, global int x; _g_x: def byte 4}", weight=10];
  main [shape=diamond, label="main (global scope)"];
  main -> BB_132180401798160 [label="{global char[5] arr; _g_arr: def byte 5, global int r; _g_r: def byte 4, global int squ; _g_squ: def byte 4, global short[5, 5] multid; _g_multid: def byte 50, global int n; _g_n: def byte 4, global int j; _g_j: def byte 4, global int p; _g_p: def byte 4, global int k; _g_k: def byte 4, global int q; _g_q: def byte 4, global int m; _g_m: def byte 4}", weight=10];
}
